
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/debug/timer-interrupt.elf:     file format elf32-littleriscv
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/debug/timer-interrupt.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00002fdc memsz 0x00002fdc flags rwx
    LOAD off    0x00004000 vaddr 0x80000000 paddr 0x20012fdc align 2**12
         filesz 0x000004cc memsz 0x000004cc flags rw-
    LOAD off    0x000044cc vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    NULL off    0x00000000 vaddr 0x800004cc paddr 0x800004cc align 2**2
         filesz 0x00000000 memsz 0x00000894 flags rw-
    NULL off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000178  20010000  20010000  00001000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             000023c6  20010180  20010180  00001180  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000a88  20012548  20012548  00003548  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       0000000c  20012fd0  20012fd0  00003fd0  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .litimalign       00000000  20012fdc  20012fdc  000044cc  2**0  CONTENTS
  5 .ditimalign       00000000  80000000  80000000  000044cc  2**0  CONTENTS
  6 .lalign           00000000  20012fdc  20012fdc  000044cc  2**0  CONTENTS
  7 .dalign           00000000  80000000  80000000  000044cc  2**0  CONTENTS
  8 .data             000004cc  80000000  20012fdc  00004000  2**3  CONTENTS, ALLOC, LOAD, DATA
  9 .bss              00000094  800004cc  800004cc  00000000  2**2  ALLOC
 10 .stack            00000400  80000560  80000560  00000000  2**0  ALLOC
 11 .heap             00000400  80000960  80000960  00000000  2**0  ALLOC
 12 .debug_info       00011676  00000000  00000000  000044cc  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev     00001ebe  00000000  00000000  00015b42  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges    000005e8  00000000  00000000  00017a00  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges     00000510  00000000  00000000  00017fe8  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_line       000057d2  00000000  00000000  000184f8  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str        00002cc7  00000000  00000000  0001dcca  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment          00000028  00000000  00000000  00020991  2**0  CONTENTS, READONLY
 19 .riscv.attributes 00000029  00000000  00000000  000209b9  2**0  CONTENTS, READONLY
 20 .debug_frame      00001330  00000000  00000000  000209e4  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
20010180 l    d  .text	00000000 .text
20012548 l    d  .rodata	00000000 .rodata
20012fd0 l    d  .init_array	00000000 .init_array
20012fdc l    d  .litimalign	00000000 .litimalign
80000000 l    d  .ditimalign	00000000 .ditimalign
20012fdc l    d  .lalign	00000000 .lalign
80000000 l    d  .dalign	00000000 .dalign
80000000 l    d  .data	00000000 .data
800004cc l    d  .bss	00000000 .bss
80000560 l    d  .stack	00000000 .stack
80000960 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-entry.o
20010438 l       .text	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 crt0.o
20010118 l       .init	00000000 _skip_init
20012fbc l       .rodata	00000000 argv
20012fc0 l       .rodata	00000000 envp
20012fc4 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 __call_atexit.c
20010180 l     F .text	00000018 register_fini
00000000 l    df *ABS*	00000000 timer-interrupt.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
200104d4 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
200104fe l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20010526 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20010562 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200106c2 l     F .text	00000030 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20010ac8 l     F .text	00000024 __metal_driver_cpu_hartid
20010aec l     F .text	0000002a __metal_driver_cpu_timebase
20010b16 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
200118de l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
200118f8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_config_base
20011912 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20011926 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
200119c2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
200119dc l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_config_base
200119f6 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20011a0a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20011a96 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20011ab0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20011aca l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_divider_base
20011ae4 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20011af8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_config_base
20011b0e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20011b1e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20011b34 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20011b46 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20012730 l     O .rodata	00000880 pll_configs
20011b58 l     F .text	0000004e get_pll_config_freq
20011ba6 l     F .text	00000028 metal_sifive_fe310_g000_pll_init
20011df6 l     F .text	000000a8 find_closest_config
20011e9e l     F .text	00000132 configure_pll
20012124 l     F .text	00000028 use_hfxosc
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2001214c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 fixed-clock.c
2001225c l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800004d0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 impure.c
80000434 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
20012fdc l       .init_array	00000000 __fini_array_end
20012fdc l       .init_array	00000000 __fini_array_start
20012fdc l       .init_array	00000000 __init_array_end
20012fd0 l       .init_array	00000000 __preinit_array_end
20012fd0 l       .init_array	00000000 __init_array_start
20012fd0 l       .init_array	00000000 __preinit_array_start
200103a2 g     F .text	00000026 metal_cpu_timer_get_interrupt_id
200121c4 g     F .text	00000026 metal_clock_get_rate_hz
2001101c g     F .text	00000038 __metal_valid_interrupt_id
80000c98 g       .data	00000000 __global_pointer$
2001037c g     F .text	00000026 metal_cpu_timer_interrupt_controller
20011282 g     F .text	00000148 __metal_driver_riscv_cpu_controller_interrupt_register
200103ee g     F .text	00000030 metal_cpu_get
20012548 g     O .rodata	00000020 __metal_driver_vtable_riscv_clint0
80000560 g       .bss	00000000 metal_segment_bss_target_end
20010592 g     F .text	0000009a __metal_clint0_mtime_get
20011878 g     F .text	00000028 __metal_driver_cpu_get_instruction_length
00000000 g       *ABS*	00000000 __metal_chicken_bit
80000000 g       .ditimalign	00000000 metal_segment_itim_target_start
2001031c g     F .text	0000002a metal_cpu_get_timebase
800004cc g       .bss	00000000 metal_segment_bss_target_start
2001062c g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
2001141e g     F .text	00000062 __metal_driver_riscv_cpu_controller_interrupt_enable_vector
20011c8a g     F .text	0000016c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20010198 g     F .text	00000032 timer_handler
200126f0 g     O .rodata	00000040 __metal_driver_vtable_cpu
20012fb0 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000960 g       .heap	00000000 metal_segment_heap_target_start
800004a4 g     O .data	00000004 __metal_dt_cpu_0
20011fd0 g     F .text	00000154 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20010cae g     F .text	00000018 __metal_default_exception_handler
20010b40 g     F .text	00000030 __metal_driver_cpu_get
200126d0 g     O .rodata	00000020 __metal_driver_vtable_riscv_cpu_intc
20010ba2 g     F .text	00000018 __metal_interrupt_global_disable
200110f6 g     F .text	0000004e __metal_exception_register
2001167a g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
200114d6 g     F .text	00000072 __metal_driver_cpu_timer_get
20010cde g     F .text	00000068 __metal_default_sw_handler
80000014 g     O .data	00000014 __metal_dt_clock_2
20011480 g     F .text	0000003a __metal_driver_riscv_cpu_controller_interrupt_disable_vector
800004c0 g     O .data	00000008 __metal_driver_vtable_fixed_clock
800004c8 g     O .data	00000004 _global_impure_ptr
20012376 g     F .text	0000006e __libc_init_array
20011a74 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
200113ca g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20010158 g     F .init	00000002 _init
20010c04 g     F .text	0000001a __metal_interrupt_timer_disable
20011740 g     F .text	0000006a __metal_driver_cpu_clear_sw_ipi
2001233c g     F .text	0000003a __libc_fini_array
80000420 g     O .data	00000014 __metal_dt_clock_4
200116c2 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
80000000 g       .dalign	00000000 metal_segment_data_target_start
20010c56 g     F .text	0000002c __metal_interrupt_local_enable
80000000 g     O .data	00000014 __metal_dt_clock_0
00000400 g       *ABS*	00000000 __heap_size
20010c3a g     F .text	0000001c __metal_interrupt_external_disable
200114ba g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20011144 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
20011832 g     F .text	00000046 __metal_driver_cpu_exception_register
20010bba g     F .text	00000018 __metal_interrupt_software_enable
800004cc g     O .bss	00000004 _global_atexit
2001246c g     F .text	000000c8 __call_exitprocs
80000960 g       .stack	00000000 _sp
20010060 g     F .init	00000000 _start
20011938 g     F .text	00000068 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20011812 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
200118a0 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20010c1e g     F .text	0000001c __metal_interrupt_external_enable
200123e4 g     F .text	00000088 __register_exitproc
20010b70 g     F .text	0000001a __metal_myhart_id
200113f4 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
200102f2 g     F .text	0000002a metal_cpu_get_timer
2001077a g     F .text	000000bc __metal_driver_riscv_clint0_register
8000049c g     O .data	00000008 __metal_dt_clint_2000000
20010468 g     F .text	0000003e metal_interrupt_register_handler
200121ea g     F .text	00000064 metal_clock_set_rate_hz
2001015a  w    F .init	00000000 secondary_main
2001215e g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20011054 g     F .text	000000a2 __metal_local_interrupt_enable
20010996 g     F .text	00000132 __metal_driver_riscv_clint0_command_request
200101ca g     F .text	00000128 main
800004cc g       .bss	00000000 metal_segment_data_target_end
800004a8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
200116d6 g     F .text	0000006a __metal_driver_cpu_set_sw_ipi
200117aa g     F .text	00000068 __metal_driver_cpu_get_msip
2001224e g     F .text	0000000e metal_shutdown
80000000 g       .init_array	00000000 metal_segment_itim_target_end
200118be g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200122fe g     F .text	0000000e _synchronize_harts
800004d0 g     O .bss	00000000 __metal_dt_prci_10008000
20011548 g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
2001041e g     F .text	0000001a metal_cpu_get_current_hartid
20011a1c g     F .text	00000058 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20012fdc g       .litimalign	00000000 metal_segment_itim_source_start
80000498  w    O .data	00000004 __metal_cpu_table
80000040 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20010158 g     F .init	00000002 _fini
20010b8a g     F .text	00000018 __metal_interrupt_global_enable
2001230c g     F .text	0000000a atexit
20010bea g     F .text	0000001a __metal_interrupt_timer_enable
200108e6 g     F .text	000000b0 __metal_driver_riscv_clint0_disable
200115fc g     F .text	0000007e __metal_driver_cpu_mtimecmp_set
20011bce g     F .text	000000bc __metal_driver_sifive_fe310_g000_pll_init
80000028 g     O .data	00000014 __metal_dt_clock_5
2001218c g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200122be g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20010836 g     F .text	000000b0 __metal_driver_riscv_clint0_enable
20012fdc g       .lalign	00000000 metal_segment_data_source_start
80000d60 g       .heap	00000000 metal_segment_heap_target_end
20010f76 g     F .text	000000a6 __metal_controller_interrupt_vector
8000040c g     O .data	00000014 __metal_dt_clock_1
20010d46 g     F .text	00000066 __metal_default_timer_handler
200103c8 g     F .text	00000026 metal_cpu_interrupt_controller
20010446 g     F .text	00000022 metal_interrupt_init
20010346 g     F .text	00000036 metal_cpu_set_mtimecmp
20012316 g     F .text	00000026 exit
8000055c g     O .bss	00000004 intr_count
200122dc g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20010cc6 g     F .text	00000018 __metal_default_interrupt_handler
200104a6 g     F .text	0000002e metal_interrupt_enable
20010e00 g     F .text	0000014e __metal_exception_handler
20012534 g     F .text	00000012 _exit
2001158e g     F .text	0000006e __metal_driver_cpu_mtime_get
800004b0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200106f2 g     F .text	00000088 __metal_driver_riscv_clint0_init
20011694 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
200119a0 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
200116a8 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20010c82 g     F .text	0000002c __metal_interrupt_local_disable
20010bd2 g     F .text	00000018 __metal_interrupt_software_disable
800003f8 g     O .data	00000014 __metal_dt_clock_3
800004b8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	c9818193          	addi	gp,gp,-872 # 80000c98 <__global_pointer$>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010008:	00000297          	auipc	t0,0x0
2001000c:	43028293          	addi	t0,t0,1072 # 20010438 <early_trap_vector>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20010014:	00000293          	li	t0,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:33
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20010020:	dfff0117          	auipc	sp,0xdfff0
20010024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20010028:	dfff0097          	auipc	ra,0xdfff0
2001002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:53
    beqz ra, 1f
20010030:	00008363          	beqz	ra,20010036 <_enter+0x36>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:54
    jalr ra
20010034:	9082                	jalr	ra
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010036:	f1402573          	csrr	a0,mhartid
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:61
    li a1, 0
2001003a:	4581                	li	a1,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:62
    li a2, 0
2001003c:	4601                	li	a2,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:63
    call _start
2001003e:	200d                	jal	20010060 <_start>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010040:	dfff0097          	auipc	ra,0xdfff0
20010044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:69
    beqz ra, 1f
20010048:	00008363          	beqz	ra,2001004e <_enter+0x4e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:70
    jalr ra
2001004c:	9082                	jalr	ra
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001004e:	00000297          	auipc	t0,0x0
20010052:	00c28293          	addi	t0,t0,12 # 2001005a <_enter+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20010056:	30529073          	csrw	mtvec,t0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2001005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:79
     j 1b
2001005e:	bff5                	j	2001005a <_enter+0x5a>

20010060 <_start>:
_start():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010060:	8406                	mv	s0,ra
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010062:	5fff1197          	auipc	gp,0x5fff1
20010066:	c3618193          	addi	gp,gp,-970 # 80000c98 <__global_pointer$>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
2001006a:	cc818113          	addi	sp,gp,-824 # 80000960 <_sp>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2001006e:	4281                	li	t0,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
20010070:	40000313          	li	t1,1024
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20010074:	00a28563          	beq	t0,a0,2001007e <_start+0x1e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20010078:	911a                	add	sp,sp,t1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
2001007a:	0285                	addi	t0,t0,1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
  j 1b
2001007c:	bfe5                	j	20010074 <_start+0x14>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2001007e:	ff017113          	andi	sp,sp,-16
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010082:	00000293          	li	t0,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
20010086:	08551963          	bne	a0,t0,20010118 <_skip_init>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001008a:	00003297          	auipc	t0,0x3
2001008e:	f5228293          	addi	t0,t0,-174 # 20012fdc <__fini_array_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
20010092:	5fff0317          	auipc	t1,0x5fff0
20010096:	f6e30313          	addi	t1,t1,-146 # 80000000 <metal_segment_itim_target_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
2001009a:	5fff0397          	auipc	t2,0x5fff0
2001009e:	43238393          	addi	t2,t2,1074 # 800004cc <_global_atexit>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
200100a2:	00628c63          	beq	t0,t1,200100ba <_start+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
200100a6:	00735a63          	bge	t1,t2,200100ba <_start+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100aa:	0002a503          	lw	a0,0(t0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
200100ae:	0291                	addi	t0,t0,4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
200100b0:	00a32023          	sw	a0,0(t1)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
200100b4:	0311                	addi	t1,t1,4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
200100b6:	fe734ae3          	blt	t1,t2,200100aa <_start+0x4a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
200100ba:	00003297          	auipc	t0,0x3
200100be:	f2228293          	addi	t0,t0,-222 # 20012fdc <__fini_array_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
200100c2:	5fff0317          	auipc	t1,0x5fff0
200100c6:	f3e30313          	addi	t1,t1,-194 # 80000000 <metal_segment_itim_target_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
200100ca:	5fff0397          	auipc	t2,0x5fff0
200100ce:	f3638393          	addi	t2,t2,-202 # 80000000 <metal_segment_itim_target_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
200100d2:	00628c63          	beq	t0,t1,200100ea <_start+0x8a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
200100d6:	00735a63          	bge	t1,t2,200100ea <_start+0x8a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100da:	0002a503          	lw	a0,0(t0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
200100de:	0291                	addi	t0,t0,4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
200100e0:	00a32023          	sw	a0,0(t1)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
200100e4:	0311                	addi	t1,t1,4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
200100e6:	fe734ae3          	blt	t1,t2,200100da <_start+0x7a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:123
  blt  t1, t2, 1b
#endif
2:

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
200100ea:	5fff0317          	auipc	t1,0x5fff0
200100ee:	3e230313          	addi	t1,t1,994 # 800004cc <_global_atexit>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
  la t2, metal_segment_bss_target_end
200100f2:	8c818393          	addi	t2,gp,-1848 # 80000560 <metal_segment_bss_target_end>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:126

  bge t1, t2, 2f
200100f6:	00735763          	bge	t1,t2,20010104 <_start+0xa4>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:130

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
200100fa:	00032023          	sw	zero,0(t1)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:131
  addi t1, t1, 4
200100fe:	0311                	addi	t1,t1,4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:132
  blt  t1, t2, 1b
20010100:	fe734de3          	blt	t1,t2,200100fa <_start+0x9a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:143
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010104:	c211                	beqz	a2,20010108 <_start+0xa8>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:144
  jalr a2
20010106:	9602                	jalr	a2
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:148
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010108:	00002517          	auipc	a0,0x2
2001010c:	23450513          	addi	a0,a0,564 # 2001233c <__libc_fini_array>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:149
  call atexit
20010110:	1fc020ef          	jal	ra,2001230c <atexit>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:150
  call __libc_init_array
20010114:	262020ef          	jal	ra,20012376 <__libc_init_array>

20010118 <_skip_init>:
_skip_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:156

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call _synchronize_harts
20010118:	1e6020ef          	jal	ra,200122fe <_synchronize_harts>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:159

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
2001011c:	301027f3          	csrr	a5,misa
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:160
  li   a4, 0x10028
20010120:	00010737          	lui	a4,0x10
20010124:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xfc28>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:161
  and  a5, a5, a4
20010128:	8ff9                	and	a5,a5,a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:162
  beqz a5, 1f
2001012a:	cb89                	beqz	a5,2001013c <_skip_init+0x24>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:163
  csrr a5, mstatus
2001012c:	300027f3          	csrr	a5,mstatus
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:164
  lui  a4, 0x2
20010130:	6709                	lui	a4,0x2
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:165
  or   a5, a5, a4
20010132:	8fd9                	or	a5,a5,a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:166
  csrw mstatus, a5
20010134:	30079073          	csrw	mstatus,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  csrwi fcsr, 0
20010138:	00305073          	csrwi	fcsr,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:173
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2001013c:	4505                	li	a0,1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:174
  la a1, argv  /* argv = {"libgloss", NULL} */
2001013e:	00003597          	auipc	a1,0x3
20010142:	e7e58593          	addi	a1,a1,-386 # 20012fbc <argv>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:175
  la a2, envp  /* envp = {NULL} */
20010146:	00003617          	auipc	a2,0x3
2001014a:	e7a60613          	addi	a2,a2,-390 # 20012fc0 <envp>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:176
  call secondary_main
2001014e:	2031                	jal	2001015a <secondary_main>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:182

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
20010150:	1c6020ef          	jal	ra,20012316 <exit>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:187

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20010154:	80a2                	mv	ra,s0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:188
  ret
20010156:	8082                	ret

20010158 <_fini>:
_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:200
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20010158:	8082                	ret

2001015a <secondary_main>:
secondary_main():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:211
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
2001015a:	1141                	addi	sp,sp,-16
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:213
#if __riscv_xlen == 32
  sw ra, 4(sp)
2001015c:	c206                	sw	ra,4(sp)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2001015e:	f14022f3          	csrr	t0,mhartid
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:218
  la t1, __metal_boot_hart
20010162:	00000313          	li	t1,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:219
  beq t0, t1, 2f
20010166:	00628563          	beq	t0,t1,20010170 <secondary_main+0x16>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
1:
  wfi
2001016a:	10500073          	wfi
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  j 1b
2001016e:	bff5                	j	2001016a <secondary_main+0x10>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:224
2:
  call main
20010170:	28a9                	jal	200101ca <main>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
#if __riscv_xlen == 32
  lw ra, 4(sp)
20010172:	4092                	lw	ra,4(sp)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:230
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20010174:	0141                	addi	sp,sp,16
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/crt0.S:231
  ret
20010176:	8082                	ret

Disassembly of section .text:

20010180 <register_fini>:
register_fini():
20010180:	dfff0797          	auipc	a5,0xdfff0
20010184:	e8078793          	addi	a5,a5,-384 # 0 <__metal_boot_hart>
20010188:	c799                	beqz	a5,20010196 <register_fini+0x16>
2001018a:	00002517          	auipc	a0,0x2
2001018e:	1b250513          	addi	a0,a0,434 # 2001233c <__libc_fini_array>
20010192:	17a0206f          	j	2001230c <atexit>
20010196:	8082                	ret

20010198 <timer_handler>:
timer_handler():
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:9
#include <stdio.h>
#include <metal/cpu.h>

int intr_count;

void timer_handler (int id, void *data) {
20010198:	1101                	addi	sp,sp,-32
2001019a:	ce06                	sw	ra,28(sp)
2001019c:	cc22                	sw	s0,24(sp)
2001019e:	1000                	addi	s0,sp,32
200101a0:	fea42623          	sw	a0,-20(s0)
200101a4:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:10
    intr_count++;
200101a8:	8c41a783          	lw	a5,-1852(gp) # 8000055c <intr_count>
200101ac:	00178713          	addi	a4,a5,1
200101b0:	8ce1a223          	sw	a4,-1852(gp) # 8000055c <intr_count>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:11
    metal_cpu_set_mtimecmp((struct metal_cpu *)data, 0xffff);
200101b4:	65c1                	lui	a1,0x10
200101b6:	15fd                	addi	a1,a1,-1
200101b8:	4601                	li	a2,0
200101ba:	fe842503          	lw	a0,-24(s0)
200101be:	2261                	jal	20010346 <metal_cpu_set_mtimecmp>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:12
}
200101c0:	0001                	nop
200101c2:	40f2                	lw	ra,28(sp)
200101c4:	4462                	lw	s0,24(sp)
200101c6:	6105                	addi	sp,sp,32
200101c8:	8082                	ret

200101ca <main>:
main():
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:15

int main (void)
{
200101ca:	7139                	addi	sp,sp,-64
200101cc:	de06                	sw	ra,60(sp)
200101ce:	dc22                	sw	s0,56(sp)
200101d0:	0080                	addi	s0,sp,64
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:22
    struct metal_cpu *cpu;
    struct metal_interrupt *cpu_intr;
    struct metal_interrupt *tmr_intr;
    int rc, tmr_id;

    cpu = metal_cpu_get(metal_cpu_get_current_hartid());
200101d2:	24b1                	jal	2001041e <metal_cpu_get_current_hartid>
200101d4:	87aa                	mv	a5,a0
200101d6:	853e                	mv	a0,a5
200101d8:	2c19                	jal	200103ee <metal_cpu_get>
200101da:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:23
    if (cpu == NULL) {
200101de:	fec42783          	lw	a5,-20(s0)
200101e2:	e399                	bnez	a5,200101e8 <main+0x1e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:24
        return 1;
200101e4:	4785                	li	a5,1
200101e6:	a209                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:27
    }

    timeval = 0;
200101e8:	4781                	li	a5,0
200101ea:	4801                	li	a6,0
200101ec:	fef42023          	sw	a5,-32(s0)
200101f0:	ff042223          	sw	a6,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:28
    timebase = 0;
200101f4:	fcf42c23          	sw	a5,-40(s0)
200101f8:	fd042e23          	sw	a6,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:29
    timeval = metal_cpu_get_timer(cpu);
200101fc:	fec42503          	lw	a0,-20(s0)
20010200:	28cd                	jal	200102f2 <metal_cpu_get_timer>
20010202:	fea42023          	sw	a0,-32(s0)
20010206:	feb42223          	sw	a1,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:30
    timebase = metal_cpu_get_timebase(cpu);
2001020a:	fec42503          	lw	a0,-20(s0)
2001020e:	2239                	jal	2001031c <metal_cpu_get_timebase>
20010210:	fca42c23          	sw	a0,-40(s0)
20010214:	fcb42e23          	sw	a1,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:31
    if ((timeval == 0) || (timebase == 0)) {
20010218:	fe042783          	lw	a5,-32(s0)
2001021c:	fe442703          	lw	a4,-28(s0)
20010220:	8fd9                	or	a5,a5,a4
20010222:	c799                	beqz	a5,20010230 <main+0x66>
20010224:	fd842783          	lw	a5,-40(s0)
20010228:	fdc42703          	lw	a4,-36(s0)
2001022c:	8fd9                	or	a5,a5,a4
2001022e:	e399                	bnez	a5,20010234 <main+0x6a>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:32
       return 2;
20010230:	4789                	li	a5,2
20010232:	a85d                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:35
    }

    cpu_intr = metal_cpu_interrupt_controller(cpu);
20010234:	fec42503          	lw	a0,-20(s0)
20010238:	2a41                	jal	200103c8 <metal_cpu_interrupt_controller>
2001023a:	fca42a23          	sw	a0,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:36
    if (cpu_intr == NULL) {
2001023e:	fd442783          	lw	a5,-44(s0)
20010242:	e399                	bnez	a5,20010248 <main+0x7e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:37
        return 3;
20010244:	478d                	li	a5,3
20010246:	a04d                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:39
    }
    metal_interrupt_init(cpu_intr);
20010248:	fd442503          	lw	a0,-44(s0)
2001024c:	2aed                	jal	20010446 <metal_interrupt_init>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:41

    tmr_intr = metal_cpu_timer_interrupt_controller(cpu);
2001024e:	fec42503          	lw	a0,-20(s0)
20010252:	222d                	jal	2001037c <metal_cpu_timer_interrupt_controller>
20010254:	fca42823          	sw	a0,-48(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:42
    if (tmr_intr == NULL) {
20010258:	fd042783          	lw	a5,-48(s0)
2001025c:	e399                	bnez	a5,20010262 <main+0x98>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:43
        return 4;
2001025e:	4791                	li	a5,4
20010260:	a061                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:45
    }
    metal_interrupt_init(tmr_intr);
20010262:	fd042503          	lw	a0,-48(s0)
20010266:	22c5                	jal	20010446 <metal_interrupt_init>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:46
    tmr_id = metal_cpu_timer_get_interrupt_id(cpu);
20010268:	fec42503          	lw	a0,-20(s0)
2001026c:	2a1d                	jal	200103a2 <metal_cpu_timer_get_interrupt_id>
2001026e:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:47
    rc = metal_interrupt_register_handler(tmr_intr, tmr_id, timer_handler, cpu);
20010272:	fec42683          	lw	a3,-20(s0)
20010276:	200107b7          	lui	a5,0x20010
2001027a:	19878613          	addi	a2,a5,408 # 20010198 <timer_handler>
2001027e:	fcc42583          	lw	a1,-52(s0)
20010282:	fd042503          	lw	a0,-48(s0)
20010286:	22cd                	jal	20010468 <metal_interrupt_register_handler>
20010288:	fca42423          	sw	a0,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:48
    if (rc < 0) {
2001028c:	fc842783          	lw	a5,-56(s0)
20010290:	0007d763          	bgez	a5,2001029e <main+0xd4>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:49
        return (rc * -1);
20010294:	fc842783          	lw	a5,-56(s0)
20010298:	40f007b3          	neg	a5,a5
2001029c:	a0b1                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:52
    }

    intr_count = 0;
2001029e:	8c01a223          	sw	zero,-1852(gp) # 8000055c <intr_count>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:53
    metal_cpu_set_mtimecmp(cpu, 0);
200102a2:	4581                	li	a1,0
200102a4:	4601                	li	a2,0
200102a6:	fec42503          	lw	a0,-20(s0)
200102aa:	2871                	jal	20010346 <metal_cpu_set_mtimecmp>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:54
    if (metal_interrupt_enable(tmr_intr, tmr_id) == -1) {
200102ac:	fcc42583          	lw	a1,-52(s0)
200102b0:	fd042503          	lw	a0,-48(s0)
200102b4:	2acd                	jal	200104a6 <metal_interrupt_enable>
200102b6:	872a                	mv	a4,a0
200102b8:	57fd                	li	a5,-1
200102ba:	00f71463          	bne	a4,a5,200102c2 <main+0xf8>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:55
        return 5;
200102be:	4795                	li	a5,5
200102c0:	a025                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:58
    }   
    
    if (metal_interrupt_enable(cpu_intr, 0) == -1) {
200102c2:	4581                	li	a1,0
200102c4:	fd442503          	lw	a0,-44(s0)
200102c8:	2af9                	jal	200104a6 <metal_interrupt_enable>
200102ca:	872a                	mv	a4,a0
200102cc:	57fd                	li	a5,-1
200102ce:	00f71463          	bne	a4,a5,200102d6 <main+0x10c>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:59
        return 6;
200102d2:	4799                	li	a5,6
200102d4:	a811                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:62
    }   
    
    if (intr_count != 1) {
200102d6:	8c41a703          	lw	a4,-1852(gp) # 8000055c <intr_count>
200102da:	4785                	li	a5,1
200102dc:	00f70563          	beq	a4,a5,200102e6 <main+0x11c>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:63
        return 99; 
200102e0:	06300793          	li	a5,99
200102e4:	a011                	j	200102e8 <main+0x11e>
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:65
    }   
    return 0;
200102e6:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/software/timer-interrupt/timer-interrupt.c:66
}
200102e8:	853e                	mv	a0,a5
200102ea:	50f2                	lw	ra,60(sp)
200102ec:	5462                	lw	s0,56(sp)
200102ee:	6121                	addi	sp,sp,64
200102f0:	8082                	ret

200102f2 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:72
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
inline unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu)
{ return cpu->vtable->timer_get(cpu); }
200102f2:	1101                	addi	sp,sp,-32
200102f4:	ce06                	sw	ra,28(sp)
200102f6:	cc22                	sw	s0,24(sp)
200102f8:	1000                	addi	s0,sp,32
200102fa:	fea42623          	sw	a0,-20(s0)
200102fe:	fec42783          	lw	a5,-20(s0)
20010302:	439c                	lw	a5,0(a5)
20010304:	439c                	lw	a5,0(a5)
20010306:	fec42503          	lw	a0,-20(s0)
2001030a:	9782                	jalr	a5
2001030c:	87aa                	mv	a5,a0
2001030e:	882e                	mv	a6,a1
20010310:	853e                	mv	a0,a5
20010312:	85c2                	mv	a1,a6
20010314:	40f2                	lw	ra,28(sp)
20010316:	4462                	lw	s0,24(sp)
20010318:	6105                	addi	sp,sp,32
2001031a:	8082                	ret

2001031c <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:82
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
inline unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu)
{ return cpu->vtable->timebase_get(cpu); }
2001031c:	1101                	addi	sp,sp,-32
2001031e:	ce06                	sw	ra,28(sp)
20010320:	cc22                	sw	s0,24(sp)
20010322:	1000                	addi	s0,sp,32
20010324:	fea42623          	sw	a0,-20(s0)
20010328:	fec42783          	lw	a5,-20(s0)
2001032c:	439c                	lw	a5,0(a5)
2001032e:	43dc                	lw	a5,4(a5)
20010330:	fec42503          	lw	a0,-20(s0)
20010334:	9782                	jalr	a5
20010336:	87aa                	mv	a5,a0
20010338:	882e                	mv	a6,a1
2001033a:	853e                	mv	a0,a5
2001033c:	85c2                	mv	a1,a6
2001033e:	40f2                	lw	ra,28(sp)
20010340:	4462                	lw	s0,24(sp)
20010342:	6105                	addi	sp,sp,32
20010344:	8082                	ret

20010346 <metal_cpu_set_mtimecmp>:
metal_cpu_set_mtimecmp():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:107
 * @param cpu The CPU device handle
 * @param time The value to set the compare register to
 * @return The value of mtimecmp or -1 if error
 */
inline int metal_cpu_set_mtimecmp(struct metal_cpu *cpu, unsigned long long time)
{ return cpu->vtable->mtimecmp_set(cpu, time); }
20010346:	1101                	addi	sp,sp,-32
20010348:	ce06                	sw	ra,28(sp)
2001034a:	cc22                	sw	s0,24(sp)
2001034c:	1000                	addi	s0,sp,32
2001034e:	fea42623          	sw	a0,-20(s0)
20010352:	feb42023          	sw	a1,-32(s0)
20010356:	fec42223          	sw	a2,-28(s0)
2001035a:	fec42783          	lw	a5,-20(s0)
2001035e:	439c                	lw	a5,0(a5)
20010360:	47dc                	lw	a5,12(a5)
20010362:	fe042583          	lw	a1,-32(s0)
20010366:	fe442603          	lw	a2,-28(s0)
2001036a:	fec42503          	lw	a0,-20(s0)
2001036e:	9782                	jalr	a5
20010370:	87aa                	mv	a5,a0
20010372:	853e                	mv	a0,a5
20010374:	40f2                	lw	ra,28(sp)
20010376:	4462                	lw	s0,24(sp)
20010378:	6105                	addi	sp,sp,32
2001037a:	8082                	ret

2001037c <metal_cpu_timer_interrupt_controller>:
metal_cpu_timer_interrupt_controller():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:119
 *
 * @param cpu The CPU device handle
 * @return A pointer to the timer interrupt handle
 */
inline struct metal_interrupt* metal_cpu_timer_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->tmr_controller_interrupt(cpu); }
2001037c:	1101                	addi	sp,sp,-32
2001037e:	ce06                	sw	ra,28(sp)
20010380:	cc22                	sw	s0,24(sp)
20010382:	1000                	addi	s0,sp,32
20010384:	fea42623          	sw	a0,-20(s0)
20010388:	fec42783          	lw	a5,-20(s0)
2001038c:	439c                	lw	a5,0(a5)
2001038e:	4b9c                	lw	a5,16(a5)
20010390:	fec42503          	lw	a0,-20(s0)
20010394:	9782                	jalr	a5
20010396:	87aa                	mv	a5,a0
20010398:	853e                	mv	a0,a5
2001039a:	40f2                	lw	ra,28(sp)
2001039c:	4462                	lw	s0,24(sp)
2001039e:	6105                	addi	sp,sp,32
200103a0:	8082                	ret

200103a2 <metal_cpu_timer_get_interrupt_id>:
metal_cpu_timer_get_interrupt_id():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:129
 *
 * @param cpu The CPU device handle
 * @return The timer interrupt ID
 */
inline int metal_cpu_timer_get_interrupt_id(struct metal_cpu *cpu)
{ return cpu->vtable->get_tmr_interrupt_id(cpu); }
200103a2:	1101                	addi	sp,sp,-32
200103a4:	ce06                	sw	ra,28(sp)
200103a6:	cc22                	sw	s0,24(sp)
200103a8:	1000                	addi	s0,sp,32
200103aa:	fea42623          	sw	a0,-20(s0)
200103ae:	fec42783          	lw	a5,-20(s0)
200103b2:	439c                	lw	a5,0(a5)
200103b4:	4bdc                	lw	a5,20(a5)
200103b6:	fec42503          	lw	a0,-20(s0)
200103ba:	9782                	jalr	a5
200103bc:	87aa                	mv	a5,a0
200103be:	853e                	mv	a0,a5
200103c0:	40f2                	lw	ra,28(sp)
200103c2:	4462                	lw	s0,24(sp)
200103c4:	6105                	addi	sp,sp,32
200103c6:	8082                	ret

200103c8 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
inline struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
200103c8:	1101                	addi	sp,sp,-32
200103ca:	ce06                	sw	ra,28(sp)
200103cc:	cc22                	sw	s0,24(sp)
200103ce:	1000                	addi	s0,sp,32
200103d0:	fea42623          	sw	a0,-20(s0)
200103d4:	fec42783          	lw	a5,-20(s0)
200103d8:	439c                	lw	a5,0(a5)
200103da:	57dc                	lw	a5,44(a5)
200103dc:	fec42503          	lw	a0,-20(s0)
200103e0:	9782                	jalr	a5
200103e2:	87aa                	mv	a5,a0
200103e4:	853e                	mv	a0,a5
200103e6:	40f2                	lw	ra,28(sp)
200103e8:	4462                	lw	s0,24(sp)
200103ea:	6105                	addi	sp,sp,32
200103ec:	8082                	ret

200103ee <metal_cpu_get>:
metal_cpu_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(int hartid)
{
200103ee:	1101                	addi	sp,sp,-32
200103f0:	ce22                	sw	s0,28(sp)
200103f2:	1000                	addi	s0,sp,32
200103f4:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
200103f8:	fec42783          	lw	a5,-20(s0)
200103fc:	00f04c63          	bgtz	a5,20010414 <metal_cpu_get+0x26>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20010400:	800007b7          	lui	a5,0x80000
20010404:	fec42703          	lw	a4,-20(s0)
20010408:	070a                	slli	a4,a4,0x2
2001040a:	49878793          	addi	a5,a5,1176 # 80000498 <metal_segment_heap_target_end+0xfffff738>
2001040e:	97ba                	add	a5,a5,a4
20010410:	439c                	lw	a5,0(a5)
20010412:	a011                	j	20010416 <metal_cpu_get+0x28>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:12
    }   
    return NULL;
20010414:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:13
}
20010416:	853e                	mv	a0,a5
20010418:	4472                	lw	s0,28(sp)
2001041a:	6105                	addi	sp,sp,32
2001041c:	8082                	ret

2001041e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
2001041e:	1101                	addi	sp,sp,-32
20010420:	ce22                	sw	s0,28(sp)
20010422:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    asm volatile("csrr %0, mhartid" : "=r" (mhartid));
20010424:	f14027f3          	csrr	a5,mhartid
20010428:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:20
    return mhartid;
2001042c:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/cpu.c:22
#endif
}
20010430:	853e                	mv	a0,a5
20010432:	4472                	lw	s0,28(sp)
20010434:	6105                	addi	sp,sp,32
20010436:	8082                	ret

20010438 <early_trap_vector>:
early_trap_vector():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010438:	342022f3          	csrr	t0,mcause
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:90
    csrr t1, mepc
2001043c:	34102373          	csrr	t1,mepc
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:91
    csrr t2, mtval
20010440:	343023f3          	csrr	t2,mtval
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/entry.S:92
    j early_trap_vector
20010444:	bfd5                	j	20010438 <early_trap_vector>

20010446 <metal_interrupt_init>:
metal_interrupt_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:60
 * is invalid to initialize an interrupt controller more than once.
 *
 * @param controller The handle for the interrupt controller
 */
inline void metal_interrupt_init(struct metal_interrupt *controller)
{
20010446:	1101                	addi	sp,sp,-32
20010448:	ce06                	sw	ra,28(sp)
2001044a:	cc22                	sw	s0,24(sp)
2001044c:	1000                	addi	s0,sp,32
2001044e:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:61
    return controller->vtable->interrupt_init(controller);
20010452:	fec42783          	lw	a5,-20(s0)
20010456:	439c                	lw	a5,0(a5)
20010458:	439c                	lw	a5,0(a5)
2001045a:	fec42503          	lw	a0,-20(s0)
2001045e:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:62
}
20010460:	40f2                	lw	ra,28(sp)
20010462:	4462                	lw	s0,24(sp)
20010464:	6105                	addi	sp,sp,32
20010466:	8082                	ret

20010468 <metal_interrupt_register_handler>:
metal_interrupt_register_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:77
 */
inline int metal_interrupt_register_handler(struct metal_interrupt *controller,
                                          int id,
                                          metal_interrupt_handler_t handler,
                                          void *priv_data)
{
20010468:	1101                	addi	sp,sp,-32
2001046a:	ce06                	sw	ra,28(sp)
2001046c:	cc22                	sw	s0,24(sp)
2001046e:	1000                	addi	s0,sp,32
20010470:	fea42623          	sw	a0,-20(s0)
20010474:	feb42423          	sw	a1,-24(s0)
20010478:	fec42223          	sw	a2,-28(s0)
2001047c:	fed42023          	sw	a3,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:78
    return controller->vtable->interrupt_register(controller, id, handler, priv_data);
20010480:	fec42783          	lw	a5,-20(s0)
20010484:	439c                	lw	a5,0(a5)
20010486:	43dc                	lw	a5,4(a5)
20010488:	fe042683          	lw	a3,-32(s0)
2001048c:	fe442603          	lw	a2,-28(s0)
20010490:	fe842583          	lw	a1,-24(s0)
20010494:	fec42503          	lw	a0,-20(s0)
20010498:	9782                	jalr	a5
2001049a:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:79
}
2001049c:	853e                	mv	a0,a5
2001049e:	40f2                	lw	ra,28(sp)
200104a0:	4462                	lw	s0,24(sp)
200104a2:	6105                	addi	sp,sp,32
200104a4:	8082                	ret

200104a6 <metal_interrupt_enable>:
metal_interrupt_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:88
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to enable
 * @return 0 upon success
 */
inline int metal_interrupt_enable(struct metal_interrupt *controller, int id)
{
200104a6:	1101                	addi	sp,sp,-32
200104a8:	ce06                	sw	ra,28(sp)
200104aa:	cc22                	sw	s0,24(sp)
200104ac:	1000                	addi	s0,sp,32
200104ae:	fea42623          	sw	a0,-20(s0)
200104b2:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:89
    return controller->vtable->interrupt_enable(controller, id);
200104b6:	fec42783          	lw	a5,-20(s0)
200104ba:	439c                	lw	a5,0(a5)
200104bc:	479c                	lw	a5,8(a5)
200104be:	fe842583          	lw	a1,-24(s0)
200104c2:	fec42503          	lw	a0,-20(s0)
200104c6:	9782                	jalr	a5
200104c8:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/interrupt.h:90
}
200104ca:	853e                	mv	a0,a5
200104cc:	40f2                	lw	ra,28(sp)
200104ce:	4462                	lw	s0,24(sp)
200104d0:	6105                	addi	sp,sp,32
200104d2:	8082                	ret

200104d4 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:174
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static inline unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200104d4:	1101                	addi	sp,sp,-32
200104d6:	ce22                	sw	s0,28(sp)
200104d8:	1000                	addi	s0,sp,32
200104da:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:175
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200104de:	fec42703          	lw	a4,-20(s0)
200104e2:	800007b7          	lui	a5,0x80000
200104e6:	49c78793          	addi	a5,a5,1180 # 8000049c <metal_segment_heap_target_end+0xfffff73c>
200104ea:	00f71563          	bne	a4,a5,200104f4 <__metal_driver_sifive_clint0_control_base+0x20>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:176
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200104ee:	020007b7          	lui	a5,0x2000
200104f2:	a011                	j	200104f6 <__metal_driver_sifive_clint0_control_base+0x22>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:179
	}
	else {
		return 0;
200104f4:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:181
	}
}
200104f6:	853e                	mv	a0,a5
200104f8:	4472                	lw	s0,28(sp)
200104fa:	6105                	addi	sp,sp,32
200104fc:	8082                	ret

200104fe <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:194
		return 0;
	}
}

static inline int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200104fe:	1101                	addi	sp,sp,-32
20010500:	ce22                	sw	s0,28(sp)
20010502:	1000                	addi	s0,sp,32
20010504:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:195
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20010508:	fec42703          	lw	a4,-20(s0)
2001050c:	800007b7          	lui	a5,0x80000
20010510:	49c78793          	addi	a5,a5,1180 # 8000049c <metal_segment_heap_target_end+0xfffff73c>
20010514:	00f71463          	bne	a4,a5,2001051c <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:196
		return METAL_MAX_CLINT_INTERRUPTS;
20010518:	4789                	li	a5,2
2001051a:	a011                	j	2001051e <__metal_driver_sifive_clint0_num_interrupts+0x20>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:199
	}
	else {
		return 0;
2001051c:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:201
	}
}
2001051e:	853e                	mv	a0,a5
20010520:	4472                	lw	s0,28(sp)
20010522:	6105                	addi	sp,sp,32
20010524:	8082                	ret

20010526 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:204

static inline struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20010526:	1101                	addi	sp,sp,-32
20010528:	ce22                	sw	s0,28(sp)
2001052a:	1000                	addi	s0,sp,32
2001052c:	fea42623          	sw	a0,-20(s0)
20010530:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:205
	if (idx == 0) {
20010534:	fe842783          	lw	a5,-24(s0)
20010538:	e791                	bnez	a5,20010544 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:206
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001053a:	800007b7          	lui	a5,0x80000
2001053e:	04078793          	addi	a5,a5,64 # 80000040 <metal_segment_heap_target_end+0xfffff2e0>
20010542:	a821                	j	2001055a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
	}
	else if (idx == 1) {
20010544:	fe842703          	lw	a4,-24(s0)
20010548:	4785                	li	a5,1
2001054a:	00f71763          	bne	a4,a5,20010558 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:209
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001054e:	800007b7          	lui	a5,0x80000
20010552:	04078793          	addi	a5,a5,64 # 80000040 <metal_segment_heap_target_end+0xfffff2e0>
20010556:	a011                	j	2001055a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:212
	}
	else {
		return NULL;
20010558:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:214
	}
}
2001055a:	853e                	mv	a0,a5
2001055c:	4472                	lw	s0,28(sp)
2001055e:	6105                	addi	sp,sp,32
20010560:	8082                	ret

20010562 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:217

static inline int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20010562:	1101                	addi	sp,sp,-32
20010564:	ce22                	sw	s0,28(sp)
20010566:	1000                	addi	s0,sp,32
20010568:	fea42623          	sw	a0,-20(s0)
2001056c:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:218
	if (idx == 0) {
20010570:	fe842783          	lw	a5,-24(s0)
20010574:	e399                	bnez	a5,2001057a <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:219
		return 3;
20010576:	478d                	li	a5,3
20010578:	a809                	j	2001058a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:221
	}
	else if (idx == 1) {
2001057a:	fe842703          	lw	a4,-24(s0)
2001057e:	4785                	li	a5,1
20010580:	00f71463          	bne	a4,a5,20010588 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:222
		return 7;
20010584:	479d                	li	a5,7
20010586:	a011                	j	2001058a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:225
	}
	else {
		return 0;
20010588:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:227
	}
}
2001058a:	853e                	mv	a0,a5
2001058c:	4472                	lw	s0,28(sp)
2001058e:	6105                	addi	sp,sp,32
20010590:	8082                	ret

20010592 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
20010592:	715d                	addi	sp,sp,-80
20010594:	c686                	sw	ra,76(sp)
20010596:	c4a2                	sw	s0,72(sp)
20010598:	c2ca                	sw	s2,68(sp)
2001059a:	c0ce                	sw	s3,64(sp)
2001059c:	de52                	sw	s4,60(sp)
2001059e:	dc56                	sw	s5,56(sp)
200105a0:	da5a                	sw	s6,52(sp)
200105a2:	d85e                	sw	s7,48(sp)
200105a4:	d662                	sw	s8,44(sp)
200105a6:	d466                	sw	s9,40(sp)
200105a8:	0880                	addi	s0,sp,80
200105aa:	faa42e23          	sw	a0,-68(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
200105ae:	fbc42783          	lw	a5,-68(s0)
200105b2:	853e                	mv	a0,a5
200105b4:	3705                	jal	200104d4 <__metal_driver_sifive_clint0_control_base>
200105b6:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
200105ba:	fcc42703          	lw	a4,-52(s0)
200105be:	67b1                	lui	a5,0xc
200105c0:	17f1                	addi	a5,a5,-4
200105c2:	97ba                	add	a5,a5,a4
200105c4:	439c                	lw	a5,0(a5)
200105c6:	fcf42423          	sw	a5,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
200105ca:	fcc42703          	lw	a4,-52(s0)
200105ce:	67b1                	lui	a5,0xc
200105d0:	17e1                	addi	a5,a5,-8
200105d2:	97ba                	add	a5,a5,a4
200105d4:	439c                	lw	a5,0(a5)
200105d6:	fcf42223          	sw	a5,-60(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
200105da:	fcc42703          	lw	a4,-52(s0)
200105de:	67b1                	lui	a5,0xc
200105e0:	17f1                	addi	a5,a5,-4
200105e2:	97ba                	add	a5,a5,a4
200105e4:	439c                	lw	a5,0(a5)
200105e6:	fc842703          	lw	a4,-56(s0)
200105ea:	fcf718e3          	bne	a4,a5,200105ba <__metal_clint0_mtime_get+0x28>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
200105ee:	fc842783          	lw	a5,-56(s0)
200105f2:	8c3e                	mv	s8,a5
200105f4:	4c81                	li	s9,0
200105f6:	000c1993          	slli	s3,s8,0x0
200105fa:	4901                	li	s2,0
200105fc:	fc442783          	lw	a5,-60(s0)
20010600:	8a3e                	mv	s4,a5
20010602:	4a81                	li	s5,0
20010604:	01496b33          	or	s6,s2,s4
20010608:	0159ebb3          	or	s7,s3,s5
2001060c:	87da                	mv	a5,s6
2001060e:	885e                	mv	a6,s7
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25
}
20010610:	853e                	mv	a0,a5
20010612:	85c2                	mv	a1,a6
20010614:	40b6                	lw	ra,76(sp)
20010616:	4426                	lw	s0,72(sp)
20010618:	4916                	lw	s2,68(sp)
2001061a:	4986                	lw	s3,64(sp)
2001061c:	5a72                	lw	s4,60(sp)
2001061e:	5ae2                	lw	s5,56(sp)
20010620:	5b52                	lw	s6,52(sp)
20010622:	5bc2                	lw	s7,48(sp)
20010624:	5c32                	lw	s8,44(sp)
20010626:	5ca2                	lw	s9,40(sp)
20010628:	6161                	addi	sp,sp,80
2001062a:	8082                	ret

2001062c <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
2001062c:	7179                	addi	sp,sp,-48
2001062e:	d606                	sw	ra,44(sp)
20010630:	d422                	sw	s0,40(sp)
20010632:	d24a                	sw	s2,36(sp)
20010634:	d04e                	sw	s3,32(sp)
20010636:	1800                	addi	s0,sp,48
20010638:	fca42e23          	sw	a0,-36(s0)
2001063c:	fcb42c23          	sw	a1,-40(s0)
20010640:	fcc42823          	sw	a2,-48(s0)
20010644:	fcd42a23          	sw	a3,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
20010648:	fdc42783          	lw	a5,-36(s0)
2001064c:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20010650:	fec42783          	lw	a5,-20(s0)
20010654:	853e                	mv	a0,a5
20010656:	3dbd                	jal	200104d4 <__metal_driver_sifive_clint0_control_base>
20010658:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
2001065c:	fd842783          	lw	a5,-40(s0)
20010660:	078e                	slli	a5,a5,0x3
20010662:	873e                	mv	a4,a5
20010664:	fe842783          	lw	a5,-24(s0)
20010668:	973e                	add	a4,a4,a5
2001066a:	6791                	lui	a5,0x4
2001066c:	0791                	addi	a5,a5,4
2001066e:	97ba                	add	a5,a5,a4
20010670:	873e                	mv	a4,a5
20010672:	57fd                	li	a5,-1
20010674:	c31c                	sw	a5,0(a4)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
20010676:	fd842783          	lw	a5,-40(s0)
2001067a:	078e                	slli	a5,a5,0x3
2001067c:	873e                	mv	a4,a5
2001067e:	fe842783          	lw	a5,-24(s0)
20010682:	973e                	add	a4,a4,a5
20010684:	6791                	lui	a5,0x4
20010686:	97ba                	add	a5,a5,a4
20010688:	873e                	mv	a4,a5
2001068a:	fd042783          	lw	a5,-48(s0)
2001068e:	c31c                	sw	a5,0(a4)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
20010690:	fd442783          	lw	a5,-44(s0)
20010694:	0007d913          	srli	s2,a5,0x0
20010698:	4981                	li	s3,0
2001069a:	fd842783          	lw	a5,-40(s0)
2001069e:	078e                	slli	a5,a5,0x3
200106a0:	873e                	mv	a4,a5
200106a2:	fe842783          	lw	a5,-24(s0)
200106a6:	973e                	add	a4,a4,a5
200106a8:	6791                	lui	a5,0x4
200106aa:	0791                	addi	a5,a5,4
200106ac:	97ba                	add	a5,a5,a4
200106ae:	874a                	mv	a4,s2
200106b0:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
200106b2:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:44
}
200106b4:	853e                	mv	a0,a5
200106b6:	50b2                	lw	ra,44(sp)
200106b8:	5422                	lw	s0,40(sp)
200106ba:	5912                	lw	s2,36(sp)
200106bc:	5982                	lw	s3,32(sp)
200106be:	6145                	addi	sp,sp,48
200106c0:	8082                	ret

200106c2 <_get_cpu_intc>:
_get_cpu_intc():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
200106c2:	1101                	addi	sp,sp,-32
200106c4:	ce06                	sw	ra,28(sp)
200106c6:	cc22                	sw	s0,24(sp)
200106c8:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
200106ca:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
200106ce:	f14027f3          	csrr	a5,mhartid
200106d2:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200106d6:	fec42503          	lw	a0,-20(s0)
200106da:	3b11                	jal	200103ee <metal_cpu_get>
200106dc:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
200106e0:	fe842503          	lw	a0,-24(s0)
200106e4:	31d5                	jal	200103c8 <metal_cpu_interrupt_controller>
200106e6:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
200106e8:	853e                	mv	a0,a5
200106ea:	40f2                	lw	ra,28(sp)
200106ec:	4462                	lw	s0,24(sp)
200106ee:	6105                	addi	sp,sp,32
200106f0:	8082                	ret

200106f2 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
200106f2:	7139                	addi	sp,sp,-64
200106f4:	de06                	sw	ra,60(sp)
200106f6:	dc22                	sw	s0,56(sp)
200106f8:	0080                	addi	s0,sp,64
200106fa:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200106fe:	fcc42503          	lw	a0,-52(s0)
20010702:	3bf5                	jal	200104fe <__metal_driver_sifive_clint0_num_interrupts>
20010704:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20010708:	fcc42783          	lw	a5,-52(s0)
2001070c:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
20010710:	fe442783          	lw	a5,-28(s0)
20010714:	43dc                	lw	a5,4(a5)
20010716:	efa9                	bnez	a5,20010770 <__metal_driver_riscv_clint0_init+0x7e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20010718:	fe042623          	sw	zero,-20(s0)
2001071c:	a081                	j	2001075c <__metal_driver_riscv_clint0_init+0x6a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001071e:	fec42583          	lw	a1,-20(s0)
20010722:	fcc42503          	lw	a0,-52(s0)
20010726:	3501                	jal	20010526 <__metal_driver_sifive_clint0_interrupt_parents>
20010728:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001072c:	fec42583          	lw	a1,-20(s0)
20010730:	fcc42503          	lw	a0,-52(s0)
20010734:	353d                	jal	20010562 <__metal_driver_sifive_clint0_interrupt_lines>
20010736:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2001073a:	fe042783          	lw	a5,-32(s0)
2001073e:	439c                	lw	a5,0(a5)
20010740:	43dc                	lw	a5,4(a5)
20010742:	fcc42683          	lw	a3,-52(s0)
20010746:	4601                	li	a2,0
20010748:	fdc42583          	lw	a1,-36(s0)
2001074c:	fe042503          	lw	a0,-32(s0)
20010750:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20010752:	fec42783          	lw	a5,-20(s0)
20010756:	0785                	addi	a5,a5,1
20010758:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
2001075c:	fec42703          	lw	a4,-20(s0)
20010760:	fe842783          	lw	a5,-24(s0)
20010764:	faf74de3          	blt	a4,a5,2001071e <__metal_driver_riscv_clint0_init+0x2c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
20010768:	fe442783          	lw	a5,-28(s0)
2001076c:	4705                	li	a4,1
2001076e:	c3d8                	sw	a4,4(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
20010770:	0001                	nop
20010772:	50f2                	lw	ra,60(sp)
20010774:	5462                	lw	s0,56(sp)
20010776:	6121                	addi	sp,sp,64
20010778:	8082                	ret

2001077a <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
2001077a:	7139                	addi	sp,sp,-64
2001077c:	de06                	sw	ra,60(sp)
2001077e:	dc22                	sw	s0,56(sp)
20010780:	0080                	addi	s0,sp,64
20010782:	fca42623          	sw	a0,-52(s0)
20010786:	fcb42423          	sw	a1,-56(s0)
2001078a:	fcc42223          	sw	a2,-60(s0)
2001078e:	fcd42023          	sw	a3,-64(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
20010792:	57fd                	li	a5,-1
20010794:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80

    struct metal_interrupt *intc = NULL;
20010798:	fe042423          	sw	zero,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001079c:	371d                	jal	200106c2 <_get_cpu_intc>
2001079e:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
200107a2:	fcc42503          	lw	a0,-52(s0)
200107a6:	3ba1                	jal	200104fe <__metal_driver_sifive_clint0_num_interrupts>
200107a8:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84

    for(int i = 0; i < num_interrupts; i++) {
200107ac:	fe042223          	sw	zero,-28(s0)
200107b0:	a091                	j	200107f4 <__metal_driver_riscv_clint0_register+0x7a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200107b2:	fe442583          	lw	a1,-28(s0)
200107b6:	fcc42503          	lw	a0,-52(s0)
200107ba:	3365                	jal	20010562 <__metal_driver_sifive_clint0_interrupt_lines>
200107bc:	fca42c23          	sw	a0,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:86
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200107c0:	fe442583          	lw	a1,-28(s0)
200107c4:	fcc42503          	lw	a0,-52(s0)
200107c8:	3bb9                	jal	20010526 <__metal_driver_sifive_clint0_interrupt_parents>
200107ca:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:87
        if (cpu_intc == intc && id == line) {
200107ce:	fe042703          	lw	a4,-32(s0)
200107d2:	fe842783          	lw	a5,-24(s0)
200107d6:	00f71863          	bne	a4,a5,200107e6 <__metal_driver_riscv_clint0_register+0x6c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:87 (discriminator 1)
200107da:	fc842703          	lw	a4,-56(s0)
200107de:	fd842783          	lw	a5,-40(s0)
200107e2:	02f70063          	beq	a4,a5,20010802 <__metal_driver_riscv_clint0_register+0x88>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90 (discriminator 2)
            break;
        }
	intc = NULL;
200107e6:	fe042423          	sw	zero,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
200107ea:	fe442783          	lw	a5,-28(s0)
200107ee:	0785                	addi	a5,a5,1
200107f0:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
200107f4:	fe442703          	lw	a4,-28(s0)
200107f8:	fdc42783          	lw	a5,-36(s0)
200107fc:	faf74be3          	blt	a4,a5,200107b2 <__metal_driver_riscv_clint0_register+0x38>
20010800:	a011                	j	20010804 <__metal_driver_riscv_clint0_register+0x8a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:88
            break;
20010802:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:94
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20010804:	fe842783          	lw	a5,-24(s0)
20010808:	c385                	beqz	a5,20010828 <__metal_driver_riscv_clint0_register+0xae>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:95
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
2001080a:	fe842783          	lw	a5,-24(s0)
2001080e:	439c                	lw	a5,0(a5)
20010810:	43dc                	lw	a5,4(a5)
20010812:	fc042683          	lw	a3,-64(s0)
20010816:	fc442603          	lw	a2,-60(s0)
2001081a:	fc842583          	lw	a1,-56(s0)
2001081e:	fe842503          	lw	a0,-24(s0)
20010822:	9782                	jalr	a5
20010824:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97
    }
    return rc;
20010828:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
}
2001082c:	853e                	mv	a0,a5
2001082e:	50f2                	lw	ra,60(sp)
20010830:	5462                	lw	s0,56(sp)
20010832:	6121                	addi	sp,sp,64
20010834:	8082                	ret

20010836 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
20010836:	7139                	addi	sp,sp,-64
20010838:	de06                	sw	ra,60(sp)
2001083a:	dc22                	sw	s0,56(sp)
2001083c:	0080                	addi	s0,sp,64
2001083e:	fca42623          	sw	a0,-52(s0)
20010842:	fcb42423          	sw	a1,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
    int rc = -1;
20010846:	57fd                	li	a5,-1
20010848:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104

    if ( id ) {
2001084c:	fc842783          	lw	a5,-56(s0)
20010850:	c7c9                	beqz	a5,200108da <__metal_driver_riscv_clint0_enable+0xa4>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:105
        struct metal_interrupt *intc = NULL;
20010852:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:106
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20010856:	35b5                	jal	200106c2 <_get_cpu_intc>
20010858:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001085c:	fcc42503          	lw	a0,-52(s0)
20010860:	3979                	jal	200104fe <__metal_driver_sifive_clint0_num_interrupts>
20010862:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109

        for(int i = 0; i < num_interrupts; i++) {
20010866:	fe042423          	sw	zero,-24(s0)
2001086a:	a091                	j	200108ae <__metal_driver_riscv_clint0_enable+0x78>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:110
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001086c:	fe842583          	lw	a1,-24(s0)
20010870:	fcc42503          	lw	a0,-52(s0)
20010874:	31fd                	jal	20010562 <__metal_driver_sifive_clint0_interrupt_lines>
20010876:	fca42c23          	sw	a0,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001087a:	fe842583          	lw	a1,-24(s0)
2001087e:	fcc42503          	lw	a0,-52(s0)
20010882:	3155                	jal	20010526 <__metal_driver_sifive_clint0_interrupt_parents>
20010884:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112
            if(cpu_intc == intc && id == line) {
20010888:	fe042703          	lw	a4,-32(s0)
2001088c:	fec42783          	lw	a5,-20(s0)
20010890:	00f71863          	bne	a4,a5,200108a0 <__metal_driver_riscv_clint0_enable+0x6a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112 (discriminator 1)
20010894:	fc842703          	lw	a4,-56(s0)
20010898:	fd842783          	lw	a5,-40(s0)
2001089c:	02f70063          	beq	a4,a5,200108bc <__metal_driver_riscv_clint0_enable+0x86>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115 (discriminator 2)
                break;
            }
	    intc = NULL;
200108a0:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
200108a4:	fe842783          	lw	a5,-24(s0)
200108a8:	0785                	addi	a5,a5,1
200108aa:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:109 (discriminator 1)
200108ae:	fe842703          	lw	a4,-24(s0)
200108b2:	fdc42783          	lw	a5,-36(s0)
200108b6:	faf74be3          	blt	a4,a5,2001086c <__metal_driver_riscv_clint0_enable+0x36>
200108ba:	a011                	j	200108be <__metal_driver_riscv_clint0_enable+0x88>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:113
                break;
200108bc:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
200108be:	fec42783          	lw	a5,-20(s0)
200108c2:	cf81                	beqz	a5,200108da <__metal_driver_riscv_clint0_enable+0xa4>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:120
            rc = intc->vtable->interrupt_enable(intc, id);
200108c4:	fec42783          	lw	a5,-20(s0)
200108c8:	439c                	lw	a5,0(a5)
200108ca:	479c                	lw	a5,8(a5)
200108cc:	fc842583          	lw	a1,-56(s0)
200108d0:	fec42503          	lw	a0,-20(s0)
200108d4:	9782                	jalr	a5
200108d6:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123
        }
    }
}
200108da:	0001                	nop
200108dc:	853e                	mv	a0,a5
200108de:	50f2                	lw	ra,60(sp)
200108e0:	5462                	lw	s0,56(sp)
200108e2:	6121                	addi	sp,sp,64
200108e4:	8082                	ret

200108e6 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:126

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
200108e6:	7139                	addi	sp,sp,-64
200108e8:	de06                	sw	ra,60(sp)
200108ea:	dc22                	sw	s0,56(sp)
200108ec:	0080                	addi	s0,sp,64
200108ee:	fca42623          	sw	a0,-52(s0)
200108f2:	fcb42423          	sw	a1,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:127
    int rc = -1;
200108f6:	57fd                	li	a5,-1
200108f8:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:129

    if ( id ) {
200108fc:	fc842783          	lw	a5,-56(s0)
20010900:	c7c9                	beqz	a5,2001098a <__metal_driver_riscv_clint0_disable+0xa4>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:130
        struct metal_interrupt *intc = NULL;
20010902:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20010906:	3b75                	jal	200106c2 <_get_cpu_intc>
20010908:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001090c:	fcc42503          	lw	a0,-52(s0)
20010910:	36fd                	jal	200104fe <__metal_driver_sifive_clint0_num_interrupts>
20010912:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:134

        for(int i = 0; i < num_interrupts; i++) {
20010916:	fe042423          	sw	zero,-24(s0)
2001091a:	a091                	j	2001095e <__metal_driver_riscv_clint0_disable+0x78>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:135
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001091c:	fe842583          	lw	a1,-24(s0)
20010920:	fcc42503          	lw	a0,-52(s0)
20010924:	393d                	jal	20010562 <__metal_driver_sifive_clint0_interrupt_lines>
20010926:	fca42c23          	sw	a0,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:136
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001092a:	fe842583          	lw	a1,-24(s0)
2001092e:	fcc42503          	lw	a0,-52(s0)
20010932:	3ed5                	jal	20010526 <__metal_driver_sifive_clint0_interrupt_parents>
20010934:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137
            if(cpu_intc == intc && id == line) {
20010938:	fe042703          	lw	a4,-32(s0)
2001093c:	fec42783          	lw	a5,-20(s0)
20010940:	00f71863          	bne	a4,a5,20010950 <__metal_driver_riscv_clint0_disable+0x6a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:137 (discriminator 1)
20010944:	fc842703          	lw	a4,-56(s0)
20010948:	fd842783          	lw	a5,-40(s0)
2001094c:	02f70063          	beq	a4,a5,2001096c <__metal_driver_riscv_clint0_disable+0x86>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:140 (discriminator 2)
                break;
            }
	    intc = NULL;
20010950:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:134 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20010954:	fe842783          	lw	a5,-24(s0)
20010958:	0785                	addi	a5,a5,1
2001095a:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:134 (discriminator 1)
2001095e:	fe842703          	lw	a4,-24(s0)
20010962:	fdc42783          	lw	a5,-36(s0)
20010966:	faf74be3          	blt	a4,a5,2001091c <__metal_driver_riscv_clint0_disable+0x36>
2001096a:	a011                	j	2001096e <__metal_driver_riscv_clint0_disable+0x88>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:138
                break;
2001096c:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
2001096e:	fec42783          	lw	a5,-20(s0)
20010972:	cf81                	beqz	a5,2001098a <__metal_driver_riscv_clint0_disable+0xa4>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:145
            rc = intc->vtable->interrupt_disable(intc, id);
20010974:	fec42783          	lw	a5,-20(s0)
20010978:	439c                	lw	a5,0(a5)
2001097a:	47dc                	lw	a5,12(a5)
2001097c:	fc842583          	lw	a1,-56(s0)
20010980:	fec42503          	lw	a0,-20(s0)
20010984:	9782                	jalr	a5
20010986:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
        }
    }
}
2001098a:	0001                	nop
2001098c:	853e                	mv	a0,a5
2001098e:	50f2                	lw	ra,60(sp)
20010990:	5462                	lw	s0,56(sp)
20010992:	6121                	addi	sp,sp,64
20010994:	8082                	ret

20010996 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:152

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
20010996:	7179                	addi	sp,sp,-48
20010998:	d606                	sw	ra,44(sp)
2001099a:	d422                	sw	s0,40(sp)
2001099c:	1800                	addi	s0,sp,48
2001099e:	fca42e23          	sw	a0,-36(s0)
200109a2:	fcb42c23          	sw	a1,-40(s0)
200109a6:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154
    int hartid;
    int rc = -1;
200109aa:	57fd                	li	a5,-1
200109ac:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
    struct __metal_driver_riscv_clint0 *clint =
200109b0:	fdc42783          	lw	a5,-36(s0)
200109b4:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:157
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
200109b8:	fdc42503          	lw	a0,-36(s0)
200109bc:	3e21                	jal	200104d4 <__metal_driver_sifive_clint0_control_base>
200109be:	fea42223          	sw	a0,-28(s0)
200109c2:	fd842703          	lw	a4,-40(s0)
200109c6:	4789                	li	a5,2
200109c8:	04f70863          	beq	a4,a5,20010a18 <__metal_driver_riscv_clint0_command_request+0x82>
200109cc:	fd842703          	lw	a4,-40(s0)
200109d0:	4789                	li	a5,2
200109d2:	00e7c863          	blt	a5,a4,200109e2 <__metal_driver_riscv_clint0_command_request+0x4c>
200109d6:	fd842703          	lw	a4,-40(s0)
200109da:	4785                	li	a5,1
200109dc:	00f70e63          	beq	a4,a5,200109f8 <__metal_driver_riscv_clint0_command_request+0x62>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
200109e0:	a8e9                	j	20010aba <__metal_driver_riscv_clint0_command_request+0x124>
200109e2:	fd842703          	lw	a4,-40(s0)
200109e6:	478d                	li	a5,3
200109e8:	04f70c63          	beq	a4,a5,20010a40 <__metal_driver_riscv_clint0_command_request+0xaa>
200109ec:	fd842703          	lw	a4,-40(s0)
200109f0:	4791                	li	a5,4
200109f2:	08f70863          	beq	a4,a5,20010a82 <__metal_driver_riscv_clint0_command_request+0xec>
200109f6:	a0d1                	j	20010aba <__metal_driver_riscv_clint0_command_request+0x124>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:161
        if (data) {
200109f8:	fd442783          	lw	a5,-44(s0)
200109fc:	cbc5                	beqz	a5,20010aac <__metal_driver_riscv_clint0_command_request+0x116>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:162
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
200109fe:	fe842503          	lw	a0,-24(s0)
20010a02:	3e41                	jal	20010592 <__metal_clint0_mtime_get>
20010a04:	87aa                	mv	a5,a0
20010a06:	882e                	mv	a6,a1
20010a08:	fd442703          	lw	a4,-44(s0)
20010a0c:	c31c                	sw	a5,0(a4)
20010a0e:	01072223          	sw	a6,4(a4) # 2004 <__heap_size+0x1c04>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:163
            rc = 0;
20010a12:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
        break;
20010a16:	a859                	j	20010aac <__metal_driver_riscv_clint0_command_request+0x116>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:167
	if (data) {
20010a18:	fd442783          	lw	a5,-44(s0)
20010a1c:	cbd1                	beqz	a5,20010ab0 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168
	    hartid = *(int *)data;
20010a1e:	fd442783          	lw	a5,-44(s0)
20010a22:	439c                	lw	a5,0(a5)
20010a24:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:169
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20010a28:	fe042783          	lw	a5,-32(s0)
20010a2c:	078a                	slli	a5,a5,0x2
20010a2e:	873e                	mv	a4,a5
20010a30:	fe442783          	lw	a5,-28(s0)
20010a34:	97ba                	add	a5,a5,a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:170
					       (hartid * 4))) = METAL_DISABLE;
20010a36:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3c00>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:171
            rc = 0;
20010a3a:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
        break;
20010a3e:	a88d                	j	20010ab0 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:175
	if (data) {
20010a40:	fd442783          	lw	a5,-44(s0)
20010a44:	cba5                	beqz	a5,20010ab4 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:176
	    hartid = *(int *)data;
20010a46:	fd442783          	lw	a5,-44(s0)
20010a4a:	439c                	lw	a5,0(a5)
20010a4c:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20010a50:	fe042783          	lw	a5,-32(s0)
20010a54:	078a                	slli	a5,a5,0x2
20010a56:	873e                	mv	a4,a5
20010a58:	fe442783          	lw	a5,-28(s0)
20010a5c:	97ba                	add	a5,a5,a4
20010a5e:	873e                	mv	a4,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:178
					       (hartid * 4))) = METAL_ENABLE;
20010a60:	4785                	li	a5,1
20010a62:	c31c                	sw	a5,0(a4)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:188
	    __METAL_IO_FENCE(o,i);
20010a64:	0480000f          	fence	o,i
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:189
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20010a68:	fe042783          	lw	a5,-32(s0)
20010a6c:	078a                	slli	a5,a5,0x2
20010a6e:	873e                	mv	a4,a5
20010a70:	fe442783          	lw	a5,-28(s0)
20010a74:	97ba                	add	a5,a5,a4
20010a76:	439c                	lw	a5,0(a5)
20010a78:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:191
            rc = 0;
20010a7c:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
        break;
20010a80:	a815                	j	20010ab4 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195
        rc = 0;
20010a82:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
	if (data) {
20010a86:	fd442783          	lw	a5,-44(s0)
20010a8a:	c79d                	beqz	a5,20010ab8 <__metal_driver_riscv_clint0_command_request+0x122>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:197
	    hartid = *(int *)data;
20010a8c:	fd442783          	lw	a5,-44(s0)
20010a90:	439c                	lw	a5,0(a5)
20010a92:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20010a96:	fe042783          	lw	a5,-32(s0)
20010a9a:	078a                	slli	a5,a5,0x2
20010a9c:	873e                	mv	a4,a5
20010a9e:	fe442783          	lw	a5,-28(s0)
20010aa2:	97ba                	add	a5,a5,a4
20010aa4:	439c                	lw	a5,0(a5)
20010aa6:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
        break;
20010aaa:	a039                	j	20010ab8 <__metal_driver_riscv_clint0_command_request+0x122>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
        break;
20010aac:	0001                	nop
20010aae:	a031                	j	20010aba <__metal_driver_riscv_clint0_command_request+0x124>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
        break;
20010ab0:	0001                	nop
20010ab2:	a021                	j	20010aba <__metal_driver_riscv_clint0_command_request+0x124>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:193
        break;
20010ab4:	0001                	nop
20010ab6:	a011                	j	20010aba <__metal_driver_riscv_clint0_command_request+0x124>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:201
        break;
20010ab8:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:206
    }

    return rc;
20010aba:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
}
20010abe:	853e                	mv	a0,a5
20010ac0:	50b2                	lw	ra,44(sp)
20010ac2:	5422                	lw	s0,40(sp)
20010ac4:	6145                	addi	sp,sp,48
20010ac6:	8082                	ret

20010ac8 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233



/* --------------------- cpu ------------ */
static inline int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20010ac8:	1101                	addi	sp,sp,-32
20010aca:	ce22                	sw	s0,28(sp)
20010acc:	1000                	addi	s0,sp,32
20010ace:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20010ad2:	fec42703          	lw	a4,-20(s0)
20010ad6:	80c18793          	addi	a5,gp,-2036 # 800004a4 <__metal_dt_cpu_0>
20010ada:	00f71463          	bne	a4,a5,20010ae2 <__metal_driver_cpu_hartid+0x1a>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return 0;
20010ade:	4781                	li	a5,0
20010ae0:	a011                	j	20010ae4 <__metal_driver_cpu_hartid+0x1c>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
	}
	else {
		return -1;
20010ae2:	57fd                	li	a5,-1
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:240
	}
}
20010ae4:	853e                	mv	a0,a5
20010ae6:	4472                	lw	s0,28(sp)
20010ae8:	6105                	addi	sp,sp,32
20010aea:	8082                	ret

20010aec <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:243

static inline int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20010aec:	1101                	addi	sp,sp,-32
20010aee:	ce22                	sw	s0,28(sp)
20010af0:	1000                	addi	s0,sp,32
20010af2:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:244
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20010af6:	fec42703          	lw	a4,-20(s0)
20010afa:	80c18793          	addi	a5,gp,-2036 # 800004a4 <__metal_dt_cpu_0>
20010afe:	00f71763          	bne	a4,a5,20010b0c <__metal_driver_cpu_timebase+0x20>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:245
		return 1000000;
20010b02:	000f47b7          	lui	a5,0xf4
20010b06:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3e40>
20010b0a:	a011                	j	20010b0e <__metal_driver_cpu_timebase+0x22>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:248
	}
	else {
		return 0;
20010b0c:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:250
	}
}
20010b0e:	853e                	mv	a0,a5
20010b10:	4472                	lw	s0,28(sp)
20010b12:	6105                	addi	sp,sp,32
20010b14:	8082                	ret

20010b16 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:253

static inline struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20010b16:	1101                	addi	sp,sp,-32
20010b18:	ce22                	sw	s0,28(sp)
20010b1a:	1000                	addi	s0,sp,32
20010b1c:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20010b20:	fec42703          	lw	a4,-20(s0)
20010b24:	80c18793          	addi	a5,gp,-2036 # 800004a4 <__metal_dt_cpu_0>
20010b28:	00f71763          	bne	a4,a5,20010b36 <__metal_driver_cpu_interrupt_controller+0x20>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:255
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20010b2c:	800007b7          	lui	a5,0x80000
20010b30:	04078793          	addi	a5,a5,64 # 80000040 <metal_segment_heap_target_end+0xfffff2e0>
20010b34:	a011                	j	20010b38 <__metal_driver_cpu_interrupt_controller+0x22>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:258
	}
	else {
		return NULL;
20010b36:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:260
	}
}
20010b38:	853e                	mv	a0,a5
20010b3a:	4472                	lw	s0,28(sp)
20010b3c:	6105                	addi	sp,sp,32
20010b3e:	8082                	ret

20010b40 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:13

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
20010b40:	1101                	addi	sp,sp,-32
20010b42:	ce22                	sw	s0,28(sp)
20010b44:	1000                	addi	s0,sp,32
20010b46:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:14
    if (hartid < __METAL_DT_MAX_HARTS) {
20010b4a:	fec42783          	lw	a5,-20(s0)
20010b4e:	00f04c63          	bgtz	a5,20010b66 <__metal_driver_cpu_get+0x26>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:15
        return &(__metal_cpu_table[hartid]->cpu);
20010b52:	800007b7          	lui	a5,0x80000
20010b56:	fec42703          	lw	a4,-20(s0)
20010b5a:	070a                	slli	a4,a4,0x2
20010b5c:	49878793          	addi	a5,a5,1176 # 80000498 <metal_segment_heap_target_end+0xfffff738>
20010b60:	97ba                	add	a5,a5,a4
20010b62:	439c                	lw	a5,0(a5)
20010b64:	a011                	j	20010b68 <__metal_driver_cpu_get+0x28>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:17
    }
    return (struct metal_cpu *)NULL;
20010b66:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:18
}
20010b68:	853e                	mv	a0,a5
20010b6a:	4472                	lw	s0,28(sp)
20010b6c:	6105                	addi	sp,sp,32
20010b6e:	8082                	ret

20010b70 <__metal_myhart_id>:
__metal_myhart_id():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:21

uintptr_t __metal_myhart_id (void)
{
20010b70:	1101                	addi	sp,sp,-32
20010b72:	ce22                	sw	s0,28(sp)
20010b74:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:23
    uintptr_t myhart;
    asm volatile ("csrr %0, mhartid" : "=r"(myhart));
20010b76:	f14027f3          	csrr	a5,mhartid
20010b7a:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:24
    return myhart;
20010b7e:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
}
20010b82:	853e                	mv	a0,a5
20010b84:	4472                	lw	s0,28(sp)
20010b86:	6105                	addi	sp,sp,32
20010b88:	8082                	ret

20010b8a <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:35
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20010b8a:	1101                	addi	sp,sp,-32
20010b8c:	ce22                	sw	s0,28(sp)
20010b8e:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:37
    uintptr_t m;
    asm volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20010b90:	47a1                	li	a5,8
20010b92:	3007a7f3          	csrrs	a5,mstatus,a5
20010b96:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:38
}
20010b9a:	0001                	nop
20010b9c:	4472                	lw	s0,28(sp)
20010b9e:	6105                	addi	sp,sp,32
20010ba0:	8082                	ret

20010ba2 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:40

void __metal_interrupt_global_disable (void) {
20010ba2:	1101                	addi	sp,sp,-32
20010ba4:	ce22                	sw	s0,28(sp)
20010ba6:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:42
    uintptr_t m;
    asm volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20010ba8:	47a1                	li	a5,8
20010baa:	3007b7f3          	csrrc	a5,mstatus,a5
20010bae:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:43
}
20010bb2:	0001                	nop
20010bb4:	4472                	lw	s0,28(sp)
20010bb6:	6105                	addi	sp,sp,32
20010bb8:	8082                	ret

20010bba <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:45

void __metal_interrupt_software_enable (void) {
20010bba:	1101                	addi	sp,sp,-32
20010bbc:	ce22                	sw	s0,28(sp)
20010bbe:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    asm volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20010bc0:	47a1                	li	a5,8
20010bc2:	3047a7f3          	csrrs	a5,mie,a5
20010bc6:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:48
}
20010bca:	0001                	nop
20010bcc:	4472                	lw	s0,28(sp)
20010bce:	6105                	addi	sp,sp,32
20010bd0:	8082                	ret

20010bd2 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:50

void __metal_interrupt_software_disable (void) {
20010bd2:	1101                	addi	sp,sp,-32
20010bd4:	ce22                	sw	s0,28(sp)
20010bd6:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:52
    uintptr_t m;
    asm volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20010bd8:	47a1                	li	a5,8
20010bda:	3047b7f3          	csrrc	a5,mie,a5
20010bde:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:53
}
20010be2:	0001                	nop
20010be4:	4472                	lw	s0,28(sp)
20010be6:	6105                	addi	sp,sp,32
20010be8:	8082                	ret

20010bea <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:55

void __metal_interrupt_timer_enable (void) {
20010bea:	1101                	addi	sp,sp,-32
20010bec:	ce22                	sw	s0,28(sp)
20010bee:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:57
    uintptr_t m;
    asm volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20010bf0:	08000793          	li	a5,128
20010bf4:	3047a7f3          	csrrs	a5,mie,a5
20010bf8:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:58
}
20010bfc:	0001                	nop
20010bfe:	4472                	lw	s0,28(sp)
20010c00:	6105                	addi	sp,sp,32
20010c02:	8082                	ret

20010c04 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:60

void __metal_interrupt_timer_disable (void) {
20010c04:	1101                	addi	sp,sp,-32
20010c06:	ce22                	sw	s0,28(sp)
20010c08:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:62
    uintptr_t m;
    asm volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
20010c0a:	08000793          	li	a5,128
20010c0e:	3047b7f3          	csrrc	a5,mie,a5
20010c12:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:63
}
20010c16:	0001                	nop
20010c18:	4472                	lw	s0,28(sp)
20010c1a:	6105                	addi	sp,sp,32
20010c1c:	8082                	ret

20010c1e <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:65

void __metal_interrupt_external_enable (void) {
20010c1e:	1101                	addi	sp,sp,-32
20010c20:	ce22                	sw	s0,28(sp)
20010c22:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:67
    uintptr_t m;
    asm volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20010c24:	6785                	lui	a5,0x1
20010c26:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size+0x400>
20010c2a:	3047a7f3          	csrrs	a5,mie,a5
20010c2e:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
}
20010c32:	0001                	nop
20010c34:	4472                	lw	s0,28(sp)
20010c36:	6105                	addi	sp,sp,32
20010c38:	8082                	ret

20010c3a <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:70

void __metal_interrupt_external_disable (void) {
20010c3a:	1101                	addi	sp,sp,-32
20010c3c:	ce22                	sw	s0,28(sp)
20010c3e:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:72
    unsigned long m;
    asm volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
20010c40:	6785                	lui	a5,0x1
20010c42:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size+0x400>
20010c46:	3047b7f3          	csrrc	a5,mie,a5
20010c4a:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73
}
20010c4e:	0001                	nop
20010c50:	4472                	lw	s0,28(sp)
20010c52:	6105                	addi	sp,sp,32
20010c54:	8082                	ret

20010c56 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:75

void __metal_interrupt_local_enable (int id) {
20010c56:	7179                	addi	sp,sp,-48
20010c58:	d622                	sw	s0,44(sp)
20010c5a:	1800                	addi	s0,sp,48
20010c5c:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:76
    uintptr_t b = 1 << id;
20010c60:	fdc42783          	lw	a5,-36(s0)
20010c64:	4705                	li	a4,1
20010c66:	00f717b3          	sll	a5,a4,a5
20010c6a:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:78
    uintptr_t m;
    asm volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20010c6e:	fec42783          	lw	a5,-20(s0)
20010c72:	3047a7f3          	csrrs	a5,mie,a5
20010c76:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:79
}
20010c7a:	0001                	nop
20010c7c:	5432                	lw	s0,44(sp)
20010c7e:	6145                	addi	sp,sp,48
20010c80:	8082                	ret

20010c82 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:81

void __metal_interrupt_local_disable (int id) {
20010c82:	7179                	addi	sp,sp,-48
20010c84:	d622                	sw	s0,44(sp)
20010c86:	1800                	addi	s0,sp,48
20010c88:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t b = 1 << id;
20010c8c:	fdc42783          	lw	a5,-36(s0)
20010c90:	4705                	li	a4,1
20010c92:	00f717b3          	sll	a5,a4,a5
20010c96:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:84
    uintptr_t m;
    asm volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20010c9a:	fec42783          	lw	a5,-20(s0)
20010c9e:	3047b7f3          	csrrc	a5,mie,a5
20010ca2:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
}
20010ca6:	0001                	nop
20010ca8:	5432                	lw	s0,44(sp)
20010caa:	6145                	addi	sp,sp,48
20010cac:	8082                	ret

20010cae <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
20010cae:	1101                	addi	sp,sp,-32
20010cb0:	ce06                	sw	ra,28(sp)
20010cb2:	cc22                	sw	s0,24(sp)
20010cb4:	1000                	addi	s0,sp,32
20010cb6:	fea42623          	sw	a0,-20(s0)
20010cba:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:88
    metal_shutdown(100);
20010cbe:	06400513          	li	a0,100
20010cc2:	58c010ef          	jal	ra,2001224e <metal_shutdown>

20010cc6 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:91
}

void __metal_default_interrupt_handler (int id, void *priv) {
20010cc6:	1101                	addi	sp,sp,-32
20010cc8:	ce06                	sw	ra,28(sp)
20010cca:	cc22                	sw	s0,24(sp)
20010ccc:	1000                	addi	s0,sp,32
20010cce:	fea42623          	sw	a0,-20(s0)
20010cd2:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
    metal_shutdown(200);
20010cd6:	0c800513          	li	a0,200
20010cda:	574010ef          	jal	ra,2001224e <metal_shutdown>

20010cde <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:95
}

void __metal_default_sw_handler (int id, void *priv) {
20010cde:	7179                	addi	sp,sp,-48
20010ce0:	d606                	sw	ra,44(sp)
20010ce2:	d422                	sw	s0,40(sp)
20010ce4:	1800                	addi	s0,sp,48
20010ce6:	fca42e23          	sw	a0,-36(s0)
20010cea:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:98
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20010cee:	3549                	jal	20010b70 <__metal_myhart_id>
20010cf0:	872a                	mv	a4,a0
20010cf2:	800007b7          	lui	a5,0x80000
20010cf6:	070a                	slli	a4,a4,0x2
20010cf8:	49878793          	addi	a5,a5,1176 # 80000498 <metal_segment_heap_target_end+0xfffff738>
20010cfc:	97ba                	add	a5,a5,a4
20010cfe:	439c                	lw	a5,0(a5)
20010d00:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:100

    asm volatile ("csrr %0, mcause" : "=r"(mcause));
20010d04:	342027f3          	csrr	a5,mcause
20010d08:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:101
    if ( cpu ) {
20010d0c:	fec42783          	lw	a5,-20(s0)
20010d10:	c795                	beqz	a5,20010d3c <__metal_default_sw_handler+0x5e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:103
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20010d12:	fec42503          	lw	a0,-20(s0)
20010d16:	3501                	jal	20010b16 <__metal_driver_cpu_interrupt_controller>
20010d18:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:104
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20010d1c:	fe842783          	lw	a5,-24(s0)
20010d20:	3ff7f793          	andi	a5,a5,1023
20010d24:	fe442703          	lw	a4,-28(s0)
20010d28:	0e078793          	addi	a5,a5,224
20010d2c:	078a                	slli	a5,a5,0x2
20010d2e:	97ba                	add	a5,a5,a4
20010d30:	479c                	lw	a5,8(a5)
20010d32:	fdc42583          	lw	a1,-36(s0)
20010d36:	fec42503          	lw	a0,-20(s0)
20010d3a:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:106
    }
}
20010d3c:	0001                	nop
20010d3e:	50b2                	lw	ra,44(sp)
20010d40:	5422                	lw	s0,40(sp)
20010d42:	6145                	addi	sp,sp,48
20010d44:	8082                	ret

20010d46 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:108

void __metal_default_timer_handler (int id, void *priv) {
20010d46:	7179                	addi	sp,sp,-48
20010d48:	d606                	sw	ra,44(sp)
20010d4a:	d422                	sw	s0,40(sp)
20010d4c:	1800                	addi	s0,sp,48
20010d4e:	fca42e23          	sw	a0,-36(s0)
20010d52:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:109
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20010d56:	3d29                	jal	20010b70 <__metal_myhart_id>
20010d58:	87aa                	mv	a5,a0
20010d5a:	853e                	mv	a0,a5
20010d5c:	33d5                	jal	20010b40 <__metal_driver_cpu_get>
20010d5e:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20010d62:	fec42503          	lw	a0,-20(s0)
20010d66:	029000ef          	jal	ra,2001158e <__metal_driver_cpu_mtime_get>
20010d6a:	fea42023          	sw	a0,-32(s0)
20010d6e:	feb42223          	sw	a1,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20010d72:	fe042783          	lw	a5,-32(s0)
20010d76:	fe442803          	lw	a6,-28(s0)
20010d7a:	45a9                	li	a1,10
20010d7c:	4601                	li	a2,0
20010d7e:	00b786b3          	add	a3,a5,a1
20010d82:	8536                	mv	a0,a3
20010d84:	00f53533          	sltu	a0,a0,a5
20010d88:	00c80733          	add	a4,a6,a2
20010d8c:	00e507b3          	add	a5,a0,a4
20010d90:	873e                	mv	a4,a5
20010d92:	87b6                	mv	a5,a3
20010d94:	883a                	mv	a6,a4
20010d96:	85be                	mv	a1,a5
20010d98:	8642                	mv	a2,a6
20010d9a:	fec42503          	lw	a0,-20(s0)
20010d9e:	05f000ef          	jal	ra,200115fc <__metal_driver_cpu_mtimecmp_set>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:114
}
20010da2:	0001                	nop
20010da4:	50b2                	lw	ra,44(sp)
20010da6:	5422                	lw	s0,40(sp)
20010da8:	6145                	addi	sp,sp,48
20010daa:	8082                	ret
	...

20010e00 <__metal_exception_handler>:
__metal_exception_handler():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:117

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20010e00:	7119                	addi	sp,sp,-128
20010e02:	de86                	sw	ra,124(sp)
20010e04:	dc96                	sw	t0,120(sp)
20010e06:	da9a                	sw	t1,116(sp)
20010e08:	d89e                	sw	t2,112(sp)
20010e0a:	d6a2                	sw	s0,108(sp)
20010e0c:	d4aa                	sw	a0,104(sp)
20010e0e:	d2ae                	sw	a1,100(sp)
20010e10:	d0b2                	sw	a2,96(sp)
20010e12:	ceb6                	sw	a3,92(sp)
20010e14:	ccba                	sw	a4,88(sp)
20010e16:	cabe                	sw	a5,84(sp)
20010e18:	c8c2                	sw	a6,80(sp)
20010e1a:	c6c6                	sw	a7,76(sp)
20010e1c:	c4f2                	sw	t3,72(sp)
20010e1e:	c2f6                	sw	t4,68(sp)
20010e20:	c0fa                	sw	t5,64(sp)
20010e22:	de7e                	sw	t6,60(sp)
20010e24:	0100                	addi	s0,sp,128
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:122
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20010e26:	33a9                	jal	20010b70 <__metal_myhart_id>
20010e28:	872a                	mv	a4,a0
20010e2a:	800007b7          	lui	a5,0x80000
20010e2e:	070a                	slli	a4,a4,0x2
20010e30:	49878793          	addi	a5,a5,1176 # 80000498 <metal_segment_heap_target_end+0xfffff738>
20010e34:	97ba                	add	a5,a5,a4
20010e36:	439c                	lw	a5,0(a5)
20010e38:	faf42623          	sw	a5,-84(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:124

    asm volatile ("csrr %0, mcause" : "=r"(mcause));
20010e3c:	342027f3          	csrr	a5,mcause
20010e40:	faf42423          	sw	a5,-88(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:125
    asm volatile ("csrr %0, mepc" : "=r"(mepc));
20010e44:	341027f3          	csrr	a5,mepc
20010e48:	faf42223          	sw	a5,-92(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:126
    asm volatile ("csrr %0, mtval" : "=r"(mtval));
20010e4c:	343027f3          	csrr	a5,mtval
20010e50:	faf42023          	sw	a5,-96(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:127
    asm volatile ("csrr %0, mtvec" : "=r"(mtvec));
20010e54:	305027f3          	csrr	a5,mtvec
20010e58:	f8f42e23          	sw	a5,-100(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129

    if ( cpu ) {
20010e5c:	fac42783          	lw	a5,-84(s0)
20010e60:	c3f9                	beqz	a5,20010f26 <__metal_exception_handler+0x126>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:131
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20010e62:	fac42503          	lw	a0,-84(s0)
20010e66:	3945                	jal	20010b16 <__metal_driver_cpu_interrupt_controller>
20010e68:	f8a42c23          	sw	a0,-104(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132
        id = mcause & METAL_MCAUSE_CAUSE;
20010e6c:	fa842783          	lw	a5,-88(s0)
20010e70:	3ff7f793          	andi	a5,a5,1023
20010e74:	f8f42a23          	sw	a5,-108(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:133
        if (mcause & METAL_MCAUSE_INTR) {
20010e78:	fa842783          	lw	a5,-88(s0)
20010e7c:	0807d763          	bgez	a5,20010f0a <__metal_exception_handler+0x10a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134
            if ((id < METAL_INTERRUPT_ID_LC0) ||
20010e80:	f9442703          	lw	a4,-108(s0)
20010e84:	47bd                	li	a5,15
20010e86:	00e7d763          	bge	a5,a4,20010e94 <__metal_exception_handler+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:135 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20010e8a:	f9c42783          	lw	a5,-100(s0)
20010e8e:	03f7f793          	andi	a5,a5,63
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:134 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_LC0) ||
20010e92:	ef9d                	bnez	a5,20010ed0 <__metal_exception_handler+0xd0>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:136
                priv = intc->metal_int_table[id].exint_data;
20010e94:	f9842683          	lw	a3,-104(s0)
20010e98:	f9442703          	lw	a4,-108(s0)
20010e9c:	87ba                	mv	a5,a4
20010e9e:	0786                	slli	a5,a5,0x1
20010ea0:	97ba                	add	a5,a5,a4
20010ea2:	078e                	slli	a5,a5,0x3
20010ea4:	97b6                	add	a5,a5,a3
20010ea6:	0987a783          	lw	a5,152(a5)
20010eaa:	f8f42623          	sw	a5,-116(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137
                intc->metal_int_table[id].handler(id, priv);
20010eae:	f9842683          	lw	a3,-104(s0)
20010eb2:	f9442703          	lw	a4,-108(s0)
20010eb6:	87ba                	mv	a5,a4
20010eb8:	0786                	slli	a5,a5,0x1
20010eba:	97ba                	add	a5,a5,a4
20010ebc:	078e                	slli	a5,a5,0x3
20010ebe:	97b6                	add	a5,a5,a3
20010ec0:	0907a783          	lw	a5,144(a5)
20010ec4:	f8c42583          	lw	a1,-116(s0)
20010ec8:	f9442503          	lw	a0,-108(s0)
20010ecc:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
		return;
20010ece:	a8a1                	j	20010f26 <__metal_exception_handler+0x126>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20010ed0:	f9c42783          	lw	a5,-100(s0)
20010ed4:	03f7f713          	andi	a4,a5,63
20010ed8:	4789                	li	a5,2
20010eda:	04f71663          	bne	a4,a5,20010f26 <__metal_exception_handler+0x126>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                asm volatile ("csrr %0, mtvt" : "=r"(mtvt));
20010ede:	307027f3          	csrr	a5,mtvt
20010ee2:	f8f42823          	sw	a5,-112(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:145
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20010ee6:	f9842783          	lw	a5,-104(s0)
20010eea:	0dc7a783          	lw	a5,220(a5)
20010eee:	f8f42623          	sw	a5,-116(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:146
               	mtvt_handler = (metal_interrupt_handler_t)mtvt;
20010ef2:	f9042783          	lw	a5,-112(s0)
20010ef6:	f8f42423          	sw	a5,-120(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:147
               	mtvt_handler(id, priv);
20010efa:	f8842783          	lw	a5,-120(s0)
20010efe:	f8c42583          	lw	a1,-116(s0)
20010f02:	f9442503          	lw	a0,-108(s0)
20010f06:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148
		return;
20010f08:	a839                	j	20010f26 <__metal_exception_handler+0x126>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:151
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20010f0a:	f9842703          	lw	a4,-104(s0)
20010f0e:	f9442783          	lw	a5,-108(s0)
20010f12:	0e078793          	addi	a5,a5,224
20010f16:	078a                	slli	a5,a5,0x2
20010f18:	97ba                	add	a5,a5,a4
20010f1a:	479c                	lw	a5,8(a5)
20010f1c:	f9442583          	lw	a1,-108(s0)
20010f20:	fac42503          	lw	a0,-84(s0)
20010f24:	9782                	jalr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:154
        }
    }
}
20010f26:	50f6                	lw	ra,124(sp)
20010f28:	52e6                	lw	t0,120(sp)
20010f2a:	5356                	lw	t1,116(sp)
20010f2c:	53c6                	lw	t2,112(sp)
20010f2e:	5436                	lw	s0,108(sp)
20010f30:	5526                	lw	a0,104(sp)
20010f32:	5596                	lw	a1,100(sp)
20010f34:	5606                	lw	a2,96(sp)
20010f36:	46f6                	lw	a3,92(sp)
20010f38:	4766                	lw	a4,88(sp)
20010f3a:	47d6                	lw	a5,84(sp)
20010f3c:	4846                	lw	a6,80(sp)
20010f3e:	48b6                	lw	a7,76(sp)
20010f40:	4e26                	lw	t3,72(sp)
20010f42:	4e96                	lw	t4,68(sp)
20010f44:	4f06                	lw	t5,64(sp)
20010f46:	5ff2                	lw	t6,60(sp)
20010f48:	6109                	addi	sp,sp,128
20010f4a:	30200073          	mret
	...

20010f76 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:157

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20010f76:	7179                	addi	sp,sp,-48
20010f78:	d622                	sw	s0,44(sp)
20010f7a:	1800                	addi	s0,sp,48
20010f7c:	fca42e23          	sw	a0,-36(s0)
20010f80:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:160
    uintptr_t trap_entry, val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
20010f84:	305027f3          	csrr	a5,mtvec
20010f88:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:161
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20010f8c:	fec42783          	lw	a5,-20(s0)
20010f90:	fc07f793          	andi	a5,a5,-64
20010f94:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:162
    trap_entry = (uintptr_t)vec_table;
20010f98:	fd842783          	lw	a5,-40(s0)
20010f9c:	fef42423          	sw	a5,-24(s0)
20010fa0:	fdc42703          	lw	a4,-36(s0)
20010fa4:	4785                	li	a5,1
20010fa6:	04f70a63          	beq	a4,a5,20010ffa <__metal_controller_interrupt_vector+0x84>
20010faa:	fdc42783          	lw	a5,-36(s0)
20010fae:	cfa9                	beqz	a5,20011008 <__metal_controller_interrupt_vector+0x92>
20010fb0:	fdc42703          	lw	a4,-36(s0)
20010fb4:	4789                	li	a5,2
20010fb6:	00f70863          	beq	a4,a5,20010fc6 <__metal_controller_interrupt_vector+0x50>
20010fba:	fdc42703          	lw	a4,-36(s0)
20010fbe:	478d                	li	a5,3
20010fc0:	02f70063          	beq	a4,a5,20010fe0 <__metal_controller_interrupt_vector+0x6a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
        break;
    case METAL_DIRECT_MODE:
        asm volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20010fc4:	a881                	j	20011014 <__metal_controller_interrupt_vector+0x9e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:166
        asm volatile ("csrw mtvt, %0" :: "r"(trap_entry | METAL_MTVEC_CLIC));
20010fc6:	fe842783          	lw	a5,-24(s0)
20010fca:	0027e793          	ori	a5,a5,2
20010fce:	30779073          	csrw	mtvt,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:167
        asm volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
20010fd2:	fec42783          	lw	a5,-20(s0)
20010fd6:	0027e793          	ori	a5,a5,2
20010fda:	30579073          	csrw	mtvec,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:168
        break;
20010fde:	a81d                	j	20011014 <__metal_controller_interrupt_vector+0x9e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:170
        asm volatile ("csrw mtvt, %0" :: "r"(trap_entry | METAL_MTVEC_CLIC_VECTORED));
20010fe0:	fe842783          	lw	a5,-24(s0)
20010fe4:	0037e793          	ori	a5,a5,3
20010fe8:	30779073          	csrw	mtvt,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:171
        asm volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20010fec:	fec42783          	lw	a5,-20(s0)
20010ff0:	0037e793          	ori	a5,a5,3
20010ff4:	30579073          	csrw	mtvec,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:172
        break;
20010ff8:	a831                	j	20011014 <__metal_controller_interrupt_vector+0x9e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
        asm volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
20010ffa:	fe842783          	lw	a5,-24(s0)
20010ffe:	0017e793          	ori	a5,a5,1
20011002:	30579073          	csrw	mtvec,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:175
        break;
20011006:	a039                	j	20011014 <__metal_controller_interrupt_vector+0x9e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177
        asm volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20011008:	fe842783          	lw	a5,-24(s0)
2001100c:	9bf1                	andi	a5,a5,-4
2001100e:	30579073          	csrw	mtvec,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:178
        break;
20011012:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:180
}
20011014:	0001                	nop
20011016:	5432                	lw	s0,44(sp)
20011018:	6145                	addi	sp,sp,48
2001101a:	8082                	ret

2001101c <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183

int __metal_valid_interrupt_id (int id)
{
2001101c:	1101                	addi	sp,sp,-32
2001101e:	ce22                	sw	s0,28(sp)
20011020:	1000                	addi	s0,sp,32
20011022:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
    switch (id) {
20011026:	fec42783          	lw	a5,-20(s0)
2001102a:	17f5                	addi	a5,a5,-3
2001102c:	4771                	li	a4,28
2001102e:	00f76d63          	bltu	a4,a5,20011048 <__metal_valid_interrupt_id+0x2c>
20011032:	00279713          	slli	a4,a5,0x2
20011036:	200127b7          	lui	a5,0x20012
2001103a:	56878793          	addi	a5,a5,1384 # 20012568 <__metal_driver_vtable_riscv_clint0+0x20>
2001103e:	97ba                	add	a5,a5,a4
20011040:	439c                	lw	a5,0(a5)
20011042:	8782                	jr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:204
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
20011044:	4785                	li	a5,1
20011046:	a019                	j	2001104c <__metal_valid_interrupt_id+0x30>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:206
    default:
        break;
20011048:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:209
    }

    return 0;
2001104a:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:210
}
2001104c:	853e                	mv	a0,a5
2001104e:	4472                	lw	s0,28(sp)
20011050:	6105                	addi	sp,sp,32
20011052:	8082                	ret

20011054 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
20011054:	7179                	addi	sp,sp,-48
20011056:	d606                	sw	ra,44(sp)
20011058:	d422                	sw	s0,40(sp)
2001105a:	1800                	addi	s0,sp,48
2001105c:	fca42e23          	sw	a0,-36(s0)
20011060:	fcb42c23          	sw	a1,-40(s0)
20011064:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
    int rc = 0;
20011068:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:218
  
    if ( !controller) {
2001106c:	fdc42783          	lw	a5,-36(s0)
20011070:	e399                	bnez	a5,20011076 <__metal_local_interrupt_enable+0x22>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219
        return -1;
20011072:	57fd                	li	a5,-1
20011074:	a8a5                	j	200110ec <__metal_local_interrupt_enable+0x98>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:222
    }

    switch (id) {
20011076:	fd842703          	lw	a4,-40(s0)
2001107a:	47fd                	li	a5,31
2001107c:	06e7e663          	bltu	a5,a4,200110e8 <__metal_local_interrupt_enable+0x94>
20011080:	fd842783          	lw	a5,-40(s0)
20011084:	00279713          	slli	a4,a5,0x2
20011088:	200127b7          	lui	a5,0x20012
2001108c:	5dc78793          	addi	a5,a5,1500 # 200125dc <__metal_driver_vtable_riscv_clint0+0x94>
20011090:	97ba                	add	a5,a5,a4
20011092:	439c                	lw	a5,0(a5)
20011094:	8782                	jr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20011096:	fd442783          	lw	a5,-44(s0)
2001109a:	c399                	beqz	a5,200110a0 <__metal_local_interrupt_enable+0x4c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225
            __metal_interrupt_global_enable();
2001109c:	34fd                	jal	20010b8a <__metal_interrupt_global_enable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229
        } else {
            __metal_interrupt_global_disable();
        }
        break;
2001109e:	a0a9                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:227
            __metal_interrupt_global_disable();
200110a0:	3609                	jal	20010ba2 <__metal_interrupt_global_disable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229
        break;
200110a2:	a099                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:231
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
200110a4:	fd442783          	lw	a5,-44(s0)
200110a8:	c399                	beqz	a5,200110ae <__metal_local_interrupt_enable+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:232
            __metal_interrupt_software_enable();
200110aa:	3e01                	jal	20010bba <__metal_interrupt_software_enable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
        } else {
            __metal_interrupt_software_disable();
        }
        break;
200110ac:	a835                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:234
            __metal_interrupt_software_disable();
200110ae:	3615                	jal	20010bd2 <__metal_interrupt_software_disable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
        break;
200110b0:	a825                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:238
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
200110b2:	fd442783          	lw	a5,-44(s0)
200110b6:	c399                	beqz	a5,200110bc <__metal_local_interrupt_enable+0x68>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:239
	    __metal_interrupt_timer_enable();
200110b8:	3e0d                	jal	20010bea <__metal_interrupt_timer_enable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:243
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
200110ba:	a03d                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
	    __metal_interrupt_timer_disable();
200110bc:	36a1                	jal	20010c04 <__metal_interrupt_timer_disable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:243
	break;
200110be:	a02d                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
200110c0:	fd442783          	lw	a5,-44(s0)
200110c4:	c399                	beqz	a5,200110ca <__metal_local_interrupt_enable+0x76>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:246
            __metal_interrupt_external_enable();
200110c6:	3ea1                	jal	20010c1e <__metal_interrupt_external_enable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
        } else {
            __metal_interrupt_external_disable();
        }
        break;
200110c8:	a005                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:248
            __metal_interrupt_external_disable();
200110ca:	3e85                	jal	20010c3a <__metal_interrupt_external_disable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
        break;
200110cc:	a831                	j	200110e8 <__metal_local_interrupt_enable+0x94>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:267
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
200110ce:	fd442783          	lw	a5,-44(s0)
200110d2:	c791                	beqz	a5,200110de <__metal_local_interrupt_enable+0x8a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:268
            __metal_interrupt_local_enable(id);
200110d4:	fd842783          	lw	a5,-40(s0)
200110d8:	853e                	mv	a0,a5
200110da:	3eb5                	jal	20010c56 <__metal_interrupt_local_enable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
200110dc:	a029                	j	200110e6 <__metal_local_interrupt_enable+0x92>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:270
            __metal_interrupt_local_disable(id);
200110de:	fd842783          	lw	a5,-40(s0)
200110e2:	853e                	mv	a0,a5
200110e4:	3e79                	jal	20010c82 <__metal_interrupt_local_disable>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
        break;
200110e6:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:276
    defaut:
        rc = -1;
    }
    return rc;
200110e8:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:277
}
200110ec:	853e                	mv	a0,a5
200110ee:	50b2                	lw	ra,44(sp)
200110f0:	5422                	lw	s0,40(sp)
200110f2:	6145                	addi	sp,sp,48
200110f4:	8082                	ret

200110f6 <__metal_exception_register>:
__metal_exception_register():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:281

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
200110f6:	7179                	addi	sp,sp,-48
200110f8:	d622                	sw	s0,44(sp)
200110fa:	1800                	addi	s0,sp,48
200110fc:	fca42e23          	sw	a0,-36(s0)
20011100:	fcb42c23          	sw	a1,-40(s0)
20011104:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:282
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20011108:	fdc42783          	lw	a5,-36(s0)
2001110c:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20011110:	fd842703          	lw	a4,-40(s0)
20011114:	47ad                	li	a5,11
20011116:	02e7c263          	blt	a5,a4,2001113a <__metal_exception_register+0x44>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
2001111a:	fd442783          	lw	a5,-44(s0)
2001111e:	cf91                	beqz	a5,2001113a <__metal_exception_register+0x44>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:285
        intc->metal_exception_table[ecode] = isr;
20011120:	fec42703          	lw	a4,-20(s0)
20011124:	fd842783          	lw	a5,-40(s0)
20011128:	0e078793          	addi	a5,a5,224
2001112c:	078a                	slli	a5,a5,0x2
2001112e:	97ba                	add	a5,a5,a4
20011130:	fd442703          	lw	a4,-44(s0)
20011134:	c798                	sw	a4,8(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:286
        return 0;
20011136:	4781                	li	a5,0
20011138:	a011                	j	2001113c <__metal_exception_register+0x46>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:288
    }
    return -1;
2001113a:	57fd                	li	a5,-1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289
}
2001113c:	853e                	mv	a0,a5
2001113e:	5432                	lw	s0,44(sp)
20011140:	6145                	addi	sp,sp,48
20011142:	8082                	ret

20011144 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:292

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20011144:	7139                	addi	sp,sp,-64
20011146:	de06                	sw	ra,60(sp)
20011148:	dc22                	sw	s0,56(sp)
2001114a:	0080                	addi	s0,sp,64
2001114c:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:293
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20011150:	fcc42783          	lw	a5,-52(s0)
20011154:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
    uintptr_t val;

    if ( !intc->init_done ) {
20011158:	fe442783          	lw	a5,-28(s0)
2001115c:	43dc                	lw	a5,4(a5)
2001115e:	10079d63          	bnez	a5,20011278 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:298
        /* Disable and clear all interrupt sources */
        asm volatile ("csrc mie, %0" :: "r"(-1));
20011162:	57fd                	li	a5,-1
20011164:	3047b073          	csrc	mie,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:299
        asm volatile ("csrc mip, %0" :: "r"(-1));
20011168:	57fd                	li	a5,-1
2001116a:	3447b073          	csrc	mip,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        asm volatile ("csrr %0, misa" : "=r" (misa));
2001116e:	301027f3          	csrr	a5,misa
20011172:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20011176:	fe042703          	lw	a4,-32(s0)
2001117a:	6789                	lui	a5,0x2
2001117c:	8ff9                	and	a5,a5,a4
2001117e:	e799                	bnez	a5,2001118c <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307 (discriminator 1)
20011180:	fe042703          	lw	a4,-32(s0)
20011184:	000407b7          	lui	a5,0x40
20011188:	8ff9                	and	a5,a5,a4
2001118a:	c799                	beqz	a5,20011198 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:309
            /* Disable interrupt and exception delegation */
            asm volatile ("csrc mideleg, %0" :: "r"(-1));
2001118c:	57fd                	li	a5,-1
2001118e:	3037b073          	csrc	mideleg,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:310
            asm volatile ("csrc medeleg, %0" :: "r"(-1));
20011192:	57fd                	li	a5,-1
20011194:	3027b073          	csrc	medeleg,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20011198:	fe042703          	lw	a4,-32(s0)
2001119c:	000407b7          	lui	a5,0x40
200111a0:	8ff9                	and	a5,a5,a4
200111a2:	c781                	beqz	a5,200111aa <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:316
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            asm volatile ("csrc satp, %0" :: "r"(-1));
200111a4:	57fd                	li	a5,-1
200111a6:	1807b073          	csrc	satp,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
200111aa:	fe042623          	sw	zero,-20(s0)
200111ae:	a0b9                	j	200111fc <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:321 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
200111b0:	fe442683          	lw	a3,-28(s0)
200111b4:	fec42703          	lw	a4,-20(s0)
200111b8:	87ba                	mv	a5,a4
200111ba:	0786                	slli	a5,a5,0x1
200111bc:	97ba                	add	a5,a5,a4
200111be:	078e                	slli	a5,a5,0x3
200111c0:	97b6                	add	a5,a5,a3
200111c2:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3fc90>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
200111c6:	fe442683          	lw	a3,-28(s0)
200111ca:	fec42703          	lw	a4,-20(s0)
200111ce:	87ba                	mv	a5,a4
200111d0:	0786                	slli	a5,a5,0x1
200111d2:	97ba                	add	a5,a5,a4
200111d4:	078e                	slli	a5,a5,0x3
200111d6:	97b6                	add	a5,a5,a3
200111d8:	0807aa23          	sw	zero,148(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:323 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
200111dc:	fe442683          	lw	a3,-28(s0)
200111e0:	fec42703          	lw	a4,-20(s0)
200111e4:	87ba                	mv	a5,a4
200111e6:	0786                	slli	a5,a5,0x1
200111e8:	97ba                	add	a5,a5,a4
200111ea:	078e                	slli	a5,a5,0x3
200111ec:	97b6                	add	a5,a5,a3
200111ee:	0807ac23          	sw	zero,152(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
200111f2:	fec42783          	lw	a5,-20(s0)
200111f6:	0785                	addi	a5,a5,1
200111f8:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320 (discriminator 1)
200111fc:	fec42703          	lw	a4,-20(s0)
20011200:	47fd                	li	a5,31
20011202:	fae7d7e3          	bge	a5,a4,200111b0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
20011206:	fe042423          	sw	zero,-24(s0)
2001120a:	a01d                	j	20011230 <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:326 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
2001120c:	fe442703          	lw	a4,-28(s0)
20011210:	fe842783          	lw	a5,-24(s0)
20011214:	0e078793          	addi	a5,a5,224
20011218:	078a                	slli	a5,a5,0x2
2001121a:	97ba                	add	a5,a5,a4
2001121c:	20011737          	lui	a4,0x20011
20011220:	cae70713          	addi	a4,a4,-850 # 20010cae <__metal_default_exception_handler>
20011224:	c798                	sw	a4,8(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
20011226:	fe842783          	lw	a5,-24(s0)
2001122a:	0785                	addi	a5,a5,1
2001122c:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:325 (discriminator 1)
20011230:	fe842703          	lw	a4,-24(s0)
20011234:	47ad                	li	a5,11
20011236:	fce7dbe3          	bge	a5,a4,2001120c <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, &__metal_exception_handler);
2001123a:	200117b7          	lui	a5,0x20011
2001123e:	e0078593          	addi	a1,a5,-512 # 20010e00 <__metal_exception_handler>
20011242:	4501                	li	a0,0
20011244:	3b0d                	jal	20010f76 <__metal_controller_interrupt_vector>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:329
	asm volatile ("csrr %0, misa" : "=r"(val));
20011246:	301027f3          	csrr	a5,misa
2001124a:	fcf42e23          	sw	a5,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:330
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
2001124e:	fdc42703          	lw	a4,-36(s0)
20011252:	67c1                	lui	a5,0x10
20011254:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xfc28>
20011258:	8ff9                	and	a5,a5,a4
2001125a:	cb99                	beqz	a5,20011270 <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:332
	    /* Floating point architecture, so turn on FP register saving*/
	    asm volatile ("csrr %0, mstatus" : "=r"(val));
2001125c:	300027f3          	csrr	a5,mstatus
20011260:	fcf42e23          	sw	a5,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:333
	    asm volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20011264:	fdc42703          	lw	a4,-36(s0)
20011268:	6789                	lui	a5,0x2
2001126a:	8fd9                	or	a5,a5,a4
2001126c:	30079073          	csrw	mstatus,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:335
	}
	intc->init_done = 1;
20011270:	fe442783          	lw	a5,-28(s0)
20011274:	4705                	li	a4,1
20011276:	c3d8                	sw	a4,4(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:337
    }
}
20011278:	0001                	nop
2001127a:	50f2                	lw	ra,60(sp)
2001127c:	5462                	lw	s0,56(sp)
2001127e:	6121                	addi	sp,sp,64
20011280:	8082                	ret

20011282 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20011282:	7179                	addi	sp,sp,-48
20011284:	d606                	sw	ra,44(sp)
20011286:	d422                	sw	s0,40(sp)
20011288:	1800                	addi	s0,sp,48
2001128a:	fca42e23          	sw	a0,-36(s0)
2001128e:	fcb42c23          	sw	a1,-40(s0)
20011292:	fcc42a23          	sw	a2,-44(s0)
20011296:	fcd42823          	sw	a3,-48(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:343
    int rc = 0;
2001129a:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:344
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001129e:	fdc42783          	lw	a5,-36(s0)
200112a2:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:346
 
    if ( !__metal_valid_interrupt_id(id) ) {
200112a6:	fd842503          	lw	a0,-40(s0)
200112aa:	3b8d                	jal	2001101c <__metal_valid_interrupt_id>
200112ac:	87aa                	mv	a5,a0
200112ae:	e399                	bnez	a5,200112b4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
        return -11;
200112b0:	57d5                	li	a5,-11
200112b2:	a239                	j	200113c0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:350
    }

    if (isr) {
200112b4:	fd442783          	lw	a5,-44(s0)
200112b8:	cf85                	beqz	a5,200112f0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:351
        intc->metal_int_table[id].handler = isr;
200112ba:	fe842683          	lw	a3,-24(s0)
200112be:	fd842703          	lw	a4,-40(s0)
200112c2:	87ba                	mv	a5,a4
200112c4:	0786                	slli	a5,a5,0x1
200112c6:	97ba                	add	a5,a5,a4
200112c8:	078e                	slli	a5,a5,0x3
200112ca:	97b6                	add	a5,a5,a3
200112cc:	fd442703          	lw	a4,-44(s0)
200112d0:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1c90>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:352
        intc->metal_int_table[id].exint_data = priv;
200112d4:	fe842683          	lw	a3,-24(s0)
200112d8:	fd842703          	lw	a4,-40(s0)
200112dc:	87ba                	mv	a5,a4
200112de:	0786                	slli	a5,a5,0x1
200112e0:	97ba                	add	a5,a5,a4
200112e2:	078e                	slli	a5,a5,0x3
200112e4:	97b6                	add	a5,a5,a3
200112e6:	fd042703          	lw	a4,-48(s0)
200112ea:	08e7ac23          	sw	a4,152(a5)
200112ee:	a0f9                	j	200113bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:354
    } else {
	switch (id) {
200112f0:	fd842783          	lw	a5,-40(s0)
200112f4:	17f5                	addi	a5,a5,-3
200112f6:	4771                	li	a4,28
200112f8:	0cf76263          	bltu	a4,a5,200113bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
200112fc:	00279713          	slli	a4,a5,0x2
20011300:	200127b7          	lui	a5,0x20012
20011304:	65c78793          	addi	a5,a5,1628 # 2001265c <__metal_driver_vtable_riscv_clint0+0x114>
20011308:	97ba                	add	a5,a5,a4
2001130a:	439c                	lw	a5,0(a5)
2001130c:	8782                	jr	a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:356
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2001130e:	fe842683          	lw	a3,-24(s0)
20011312:	fd842703          	lw	a4,-40(s0)
20011316:	87ba                	mv	a5,a4
20011318:	0786                	slli	a5,a5,0x1
2001131a:	97ba                	add	a5,a5,a4
2001131c:	078e                	slli	a5,a5,0x3
2001131e:	97b6                	add	a5,a5,a3
20011320:	20011737          	lui	a4,0x20011
20011324:	cde70713          	addi	a4,a4,-802 # 20010cde <__metal_default_sw_handler>
20011328:	08e7a823          	sw	a4,144(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:357
            intc->metal_int_table[id].sub_int = priv;
2001132c:	fe842683          	lw	a3,-24(s0)
20011330:	fd842703          	lw	a4,-40(s0)
20011334:	87ba                	mv	a5,a4
20011336:	0786                	slli	a5,a5,0x1
20011338:	97ba                	add	a5,a5,a4
2001133a:	078e                	slli	a5,a5,0x3
2001133c:	97b6                	add	a5,a5,a3
2001133e:	fd042703          	lw	a4,-48(s0)
20011342:	08e7aa23          	sw	a4,148(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:358
	  break;
20011346:	a89d                	j	200113bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:360
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20011348:	fe842683          	lw	a3,-24(s0)
2001134c:	fd842703          	lw	a4,-40(s0)
20011350:	87ba                	mv	a5,a4
20011352:	0786                	slli	a5,a5,0x1
20011354:	97ba                	add	a5,a5,a4
20011356:	078e                	slli	a5,a5,0x3
20011358:	97b6                	add	a5,a5,a3
2001135a:	20011737          	lui	a4,0x20011
2001135e:	d4670713          	addi	a4,a4,-698 # 20010d46 <__metal_default_timer_handler>
20011362:	08e7a823          	sw	a4,144(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:361
            intc->metal_int_table[id].sub_int = priv;
20011366:	fe842683          	lw	a3,-24(s0)
2001136a:	fd842703          	lw	a4,-40(s0)
2001136e:	87ba                	mv	a5,a4
20011370:	0786                	slli	a5,a5,0x1
20011372:	97ba                	add	a5,a5,a4
20011374:	078e                	slli	a5,a5,0x3
20011376:	97b6                	add	a5,a5,a3
20011378:	fd042703          	lw	a4,-48(s0)
2001137c:	08e7aa23          	sw	a4,148(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:362
	  break;
20011380:	a835                	j	200113bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20011382:	fe842683          	lw	a3,-24(s0)
20011386:	fd842703          	lw	a4,-40(s0)
2001138a:	87ba                	mv	a5,a4
2001138c:	0786                	slli	a5,a5,0x1
2001138e:	97ba                	add	a5,a5,a4
20011390:	078e                	slli	a5,a5,0x3
20011392:	97b6                	add	a5,a5,a3
20011394:	20011737          	lui	a4,0x20011
20011398:	cc670713          	addi	a4,a4,-826 # 20010cc6 <__metal_default_interrupt_handler>
2001139c:	08e7a823          	sw	a4,144(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
            intc->metal_int_table[id].sub_int = priv;
200113a0:	fe842683          	lw	a3,-24(s0)
200113a4:	fd842703          	lw	a4,-40(s0)
200113a8:	87ba                	mv	a5,a4
200113aa:	0786                	slli	a5,a5,0x1
200113ac:	97ba                	add	a5,a5,a4
200113ae:	078e                	slli	a5,a5,0x3
200113b0:	97b6                	add	a5,a5,a3
200113b2:	fd042703          	lw	a4,-48(s0)
200113b6:	08e7aa23          	sw	a4,148(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:382
	  break;
200113ba:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387
	defaut:
	  rc = -12;
	}
    }
    return rc;
200113bc:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:388
}
200113c0:	853e                	mv	a0,a5
200113c2:	50b2                	lw	ra,44(sp)
200113c4:	5422                	lw	s0,40(sp)
200113c6:	6145                	addi	sp,sp,48
200113c8:	8082                	ret

200113ca <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:392

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
200113ca:	1101                	addi	sp,sp,-32
200113cc:	ce06                	sw	ra,28(sp)
200113ce:	cc22                	sw	s0,24(sp)
200113d0:	1000                	addi	s0,sp,32
200113d2:	fea42623          	sw	a0,-20(s0)
200113d6:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:393
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
200113da:	fe842783          	lw	a5,-24(s0)
200113de:	4605                	li	a2,1
200113e0:	85be                	mv	a1,a5
200113e2:	fec42503          	lw	a0,-20(s0)
200113e6:	31bd                	jal	20011054 <__metal_local_interrupt_enable>
200113e8:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
}
200113ea:	853e                	mv	a0,a5
200113ec:	40f2                	lw	ra,28(sp)
200113ee:	4462                	lw	s0,24(sp)
200113f0:	6105                	addi	sp,sp,32
200113f2:	8082                	ret

200113f4 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
200113f4:	1101                	addi	sp,sp,-32
200113f6:	ce06                	sw	ra,28(sp)
200113f8:	cc22                	sw	s0,24(sp)
200113fa:	1000                	addi	s0,sp,32
200113fc:	fea42623          	sw	a0,-20(s0)
20011400:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:399
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20011404:	fe842783          	lw	a5,-24(s0)
20011408:	4601                	li	a2,0
2001140a:	85be                	mv	a1,a5
2001140c:	fec42503          	lw	a0,-20(s0)
20011410:	3191                	jal	20011054 <__metal_local_interrupt_enable>
20011412:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:400
}
20011414:	853e                	mv	a0,a5
20011416:	40f2                	lw	ra,28(sp)
20011418:	4462                	lw	s0,24(sp)
2001141a:	6105                	addi	sp,sp,32
2001141c:	8082                	ret

2001141e <__metal_driver_riscv_cpu_controller_interrupt_enable_vector>:
__metal_driver_riscv_cpu_controller_interrupt_enable_vector():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:404

int __metal_driver_riscv_cpu_controller_interrupt_enable_vector(struct metal_interrupt *controller,
                                                             int id, metal_vector_mode mode)
{
2001141e:	7179                	addi	sp,sp,-48
20011420:	d606                	sw	ra,44(sp)
20011422:	d422                	sw	s0,40(sp)
20011424:	1800                	addi	s0,sp,48
20011426:	fca42e23          	sw	a0,-36(s0)
2001142a:	fcb42c23          	sw	a1,-40(s0)
2001142e:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20011432:	fdc42783          	lw	a5,-36(s0)
20011436:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:407

    if (id == METAL_INTERRUPT_ID_BASE) {
2001143a:	fd842783          	lw	a5,-40(s0)
2001143e:	eb9d                	bnez	a5,20011474 <__metal_driver_riscv_cpu_controller_interrupt_enable_vector+0x56>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
        if (mode == METAL_DIRECT_MODE) {
20011440:	fd442783          	lw	a5,-44(s0)
20011444:	eb91                	bnez	a5,20011458 <__metal_driver_riscv_cpu_controller_interrupt_enable_vector+0x3a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:409
            __metal_controller_interrupt_vector(mode, &__metal_exception_handler);
20011446:	200117b7          	lui	a5,0x20011
2001144a:	e0078593          	addi	a1,a5,-512 # 20010e00 <__metal_exception_handler>
2001144e:	fd442503          	lw	a0,-44(s0)
20011452:	3615                	jal	20010f76 <__metal_controller_interrupt_vector>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
            return 0;
20011454:	4781                	li	a5,0
20011456:	a005                	j	20011476 <__metal_driver_riscv_cpu_controller_interrupt_enable_vector+0x58>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        }   
        if (mode == METAL_VECTOR_MODE) {
20011458:	fd442703          	lw	a4,-44(s0)
2001145c:	4785                	li	a5,1
2001145e:	00f71b63          	bne	a4,a5,20011474 <__metal_driver_riscv_cpu_controller_interrupt_enable_vector+0x56>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:413
            __metal_controller_interrupt_vector(mode, &intc->metal_mtvec_table);
20011462:	fec42783          	lw	a5,-20(s0)
20011466:	07a1                	addi	a5,a5,8
20011468:	85be                	mv	a1,a5
2001146a:	fd442503          	lw	a0,-44(s0)
2001146e:	3621                	jal	20010f76 <__metal_controller_interrupt_vector>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:414
            return 0;
20011470:	4781                	li	a5,0
20011472:	a011                	j	20011476 <__metal_driver_riscv_cpu_controller_interrupt_enable_vector+0x58>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:417
        }
    }
    return -1;
20011474:	57fd                	li	a5,-1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:418
}
20011476:	853e                	mv	a0,a5
20011478:	50b2                	lw	ra,44(sp)
2001147a:	5422                	lw	s0,40(sp)
2001147c:	6145                	addi	sp,sp,48
2001147e:	8082                	ret

20011480 <__metal_driver_riscv_cpu_controller_interrupt_disable_vector>:
__metal_driver_riscv_cpu_controller_interrupt_disable_vector():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:422

int __metal_driver_riscv_cpu_controller_interrupt_disable_vector(struct metal_interrupt *controller,
                                                              int id)
{
20011480:	7179                	addi	sp,sp,-48
20011482:	d606                	sw	ra,44(sp)
20011484:	d422                	sw	s0,40(sp)
20011486:	1800                	addi	s0,sp,48
20011488:	fca42e23          	sw	a0,-36(s0)
2001148c:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:423
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20011490:	fdc42783          	lw	a5,-36(s0)
20011494:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:425

    if (id == METAL_INTERRUPT_ID_BASE) {
20011498:	fd842783          	lw	a5,-40(s0)
2001149c:	eb89                	bnez	a5,200114ae <__metal_driver_riscv_cpu_controller_interrupt_disable_vector+0x2e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:426
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, &__metal_exception_handler);
2001149e:	200117b7          	lui	a5,0x20011
200114a2:	e0078593          	addi	a1,a5,-512 # 20010e00 <__metal_exception_handler>
200114a6:	4501                	li	a0,0
200114a8:	34f9                	jal	20010f76 <__metal_controller_interrupt_vector>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:427
        return 0;
200114aa:	4781                	li	a5,0
200114ac:	a011                	j	200114b0 <__metal_driver_riscv_cpu_controller_interrupt_disable_vector+0x30>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429
    }
    return -1;
200114ae:	57fd                	li	a5,-1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:430
}
200114b0:	853e                	mv	a0,a5
200114b2:	50b2                	lw	ra,44(sp)
200114b4:	5422                	lw	s0,40(sp)
200114b6:	6145                	addi	sp,sp,48
200114b8:	8082                	ret

200114ba <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
200114ba:	1101                	addi	sp,sp,-32
200114bc:	ce22                	sw	s0,28(sp)
200114be:	1000                	addi	s0,sp,32
200114c0:	fea42623          	sw	a0,-20(s0)
200114c4:	feb42423          	sw	a1,-24(s0)
200114c8:	fec42223          	sw	a2,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:436
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
200114cc:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:437
}
200114ce:	853e                	mv	a0,a5
200114d0:	4472                	lw	s0,28(sp)
200114d2:	6105                	addi	sp,sp,32
200114d4:	8082                	ret

200114d6 <__metal_driver_cpu_timer_get>:
__metal_driver_cpu_timer_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:444
extern inline int __metal_controller_interrupt_is_selective_vectored(void);

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_timer_get(struct metal_cpu *cpu)
{
200114d6:	7139                	addi	sp,sp,-64
200114d8:	de22                	sw	s0,60(sp)
200114da:	0080                	addi	s0,sp,64
200114dc:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445
    unsigned long long val = 0;
200114e0:	4301                	li	t1,0
200114e2:	4381                	li	t2,0
200114e4:	fe642423          	sw	t1,-24(s0)
200114e8:	fe742623          	sw	t2,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    asm volatile ("csrr %0, mcycleh" : "=r"(hi));
200114ec:	b8002573          	csrr	a0,mcycleh
200114f0:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:451
    asm volatile ("csrr %0, mcycle" : "=r"(lo));
200114f4:	b0002573          	csrr	a0,mcycle
200114f8:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:452
    asm volatile ("csrr %0, mcycleh" : "=r"(hi1));
200114fc:	b8002573          	csrr	a0,mcycleh
20011500:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:453
    if (hi == hi1) {
20011504:	fe442883          	lw	a7,-28(s0)
20011508:	fdc42503          	lw	a0,-36(s0)
2001150c:	02a89563          	bne	a7,a0,20011536 <__metal_driver_cpu_timer_get+0x60>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454
        val = ((unsigned long long)hi << 32) | lo;
20011510:	fe442503          	lw	a0,-28(s0)
20011514:	85aa                	mv	a1,a0
20011516:	4601                	li	a2,0
20011518:	00059813          	slli	a6,a1,0x0
2001151c:	4781                	li	a5,0
2001151e:	fe042603          	lw	a2,-32(s0)
20011522:	86b2                	mv	a3,a2
20011524:	4701                	li	a4,0
20011526:	00d7e633          	or	a2,a5,a3
2001152a:	fec42423          	sw	a2,-24(s0)
2001152e:	00e867b3          	or	a5,a6,a4
20011532:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:460
    }
#else
    asm volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20011536:	fe842783          	lw	a5,-24(s0)
2001153a:	fec42803          	lw	a6,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461
}
2001153e:	853e                	mv	a0,a5
20011540:	85c2                	mv	a1,a6
20011542:	5472                	lw	s0,60(sp)
20011544:	6121                	addi	sp,sp,64
20011546:	8082                	ret

20011548 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:464

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
20011548:	7179                	addi	sp,sp,-48
2001154a:	d606                	sw	ra,44(sp)
2001154c:	d422                	sw	s0,40(sp)
2001154e:	d24a                	sw	s2,36(sp)
20011550:	d04e                	sw	s3,32(sp)
20011552:	1800                	addi	s0,sp,48
20011554:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466
  int timebase;
    if (!cpu) {
20011558:	fdc42783          	lw	a5,-36(s0)
2001155c:	e781                	bnez	a5,20011564 <__metal_driver_cpu_timebase_get+0x1c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:467
        return 0;
2001155e:	4901                	li	s2,0
20011560:	4981                	li	s3,0
20011562:	a821                	j	2001157a <__metal_driver_cpu_timebase_get+0x32>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:470
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20011564:	fdc42503          	lw	a0,-36(s0)
20011568:	d84ff0ef          	jal	ra,20010aec <__metal_driver_cpu_timebase>
2001156c:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:471
    return timebase;
20011570:	fec42783          	lw	a5,-20(s0)
20011574:	893e                	mv	s2,a5
20011576:	87fd                	srai	a5,a5,0x1f
20011578:	89be                	mv	s3,a5
2001157a:	87ca                	mv	a5,s2
2001157c:	884e                	mv	a6,s3
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:472
}
2001157e:	853e                	mv	a0,a5
20011580:	85c2                	mv	a1,a6
20011582:	50b2                	lw	ra,44(sp)
20011584:	5422                	lw	s0,40(sp)
20011586:	5912                	lw	s2,36(sp)
20011588:	5982                	lw	s3,32(sp)
2001158a:	6145                	addi	sp,sp,48
2001158c:	8082                	ret

2001158e <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
2001158e:	7139                	addi	sp,sp,-64
20011590:	de06                	sw	ra,60(sp)
20011592:	dc22                	sw	s0,56(sp)
20011594:	0080                	addi	s0,sp,64
20011596:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:476
    unsigned long long time = 0;
2001159a:	4781                	li	a5,0
2001159c:	4801                	li	a6,0
2001159e:	fcf42c23          	sw	a5,-40(s0)
200115a2:	fd042e23          	sw	a6,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:479
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200115a6:	fcc42503          	lw	a0,-52(s0)
200115aa:	d6cff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
200115ae:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:480
    struct __metal_driver_cpu *_cpu = (void *)cpu;
200115b2:	fcc42783          	lw	a5,-52(s0)
200115b6:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:482

    if (intc) {
200115ba:	fec42783          	lw	a5,-20(s0)
200115be:	c78d                	beqz	a5,200115e8 <__metal_driver_cpu_mtime_get+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:483
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200115c0:	fec42783          	lw	a5,-20(s0)
200115c4:	13c7a783          	lw	a5,316(a5)
200115c8:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:484
        if (tmr_intc) {
200115cc:	fe442783          	lw	a5,-28(s0)
200115d0:	cf81                	beqz	a5,200115e8 <__metal_driver_cpu_mtime_get+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:485
            tmr_intc->vtable->command_request(tmr_intc,
200115d2:	fe442783          	lw	a5,-28(s0)
200115d6:	439c                	lw	a5,0(a5)
200115d8:	4f98                	lw	a4,24(a5)
200115da:	fd840793          	addi	a5,s0,-40
200115de:	863e                	mv	a2,a5
200115e0:	4585                	li	a1,1
200115e2:	fe442503          	lw	a0,-28(s0)
200115e6:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:489
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
200115e8:	fd842783          	lw	a5,-40(s0)
200115ec:	fdc42803          	lw	a6,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:490
}
200115f0:	853e                	mv	a0,a5
200115f2:	85c2                	mv	a1,a6
200115f4:	50f2                	lw	ra,60(sp)
200115f6:	5462                	lw	s0,56(sp)
200115f8:	6121                	addi	sp,sp,64
200115fa:	8082                	ret

200115fc <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:493

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
200115fc:	7179                	addi	sp,sp,-48
200115fe:	d606                	sw	ra,44(sp)
20011600:	d422                	sw	s0,40(sp)
20011602:	d226                	sw	s1,36(sp)
20011604:	1800                	addi	s0,sp,48
20011606:	fca42e23          	sw	a0,-36(s0)
2001160a:	fcb42823          	sw	a1,-48(s0)
2001160e:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494
    int rc = -1;
20011612:	57fd                	li	a5,-1
20011614:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:497
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20011618:	fdc42503          	lw	a0,-36(s0)
2001161c:	cfaff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
20011620:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:498
    struct __metal_driver_cpu *_cpu = (void *)cpu;
20011624:	fdc42783          	lw	a5,-36(s0)
20011628:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:500

    if (intc) {
2001162c:	fe842783          	lw	a5,-24(s0)
20011630:	cf8d                	beqz	a5,2001166a <__metal_driver_cpu_mtimecmp_set+0x6e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20011632:	fe842783          	lw	a5,-24(s0)
20011636:	13c7a783          	lw	a5,316(a5)
2001163a:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:502
        if (tmr_intc) {
2001163e:	fe042783          	lw	a5,-32(s0)
20011642:	c785                	beqz	a5,2001166a <__metal_driver_cpu_mtimecmp_set+0x6e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:503
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
20011644:	fe042783          	lw	a5,-32(s0)
20011648:	439c                	lw	a5,0(a5)
2001164a:	4fc4                	lw	s1,28(a5)
2001164c:	fdc42503          	lw	a0,-36(s0)
20011650:	c78ff0ef          	jal	ra,20010ac8 <__metal_driver_cpu_hartid>
20011654:	87aa                	mv	a5,a0
20011656:	fd042603          	lw	a2,-48(s0)
2001165a:	fd442683          	lw	a3,-44(s0)
2001165e:	85be                	mv	a1,a5
20011660:	fe042503          	lw	a0,-32(s0)
20011664:	9482                	jalr	s1
20011666:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:508
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
2001166a:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:509
}
2001166e:	853e                	mv	a0,a5
20011670:	50b2                	lw	ra,44(sp)
20011672:	5422                	lw	s0,40(sp)
20011674:	5492                	lw	s1,36(sp)
20011676:	6145                	addi	sp,sp,48
20011678:	8082                	ret

2001167a <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
2001167a:	1101                	addi	sp,sp,-32
2001167c:	ce22                	sw	s0,28(sp)
2001167e:	1000                	addi	s0,sp,32
20011680:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:515
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20011684:	800007b7          	lui	a5,0x80000
20011688:	49c78793          	addi	a5,a5,1180 # 8000049c <metal_segment_heap_target_end+0xfffff73c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:524
#else
#warning "There is no interrupt controller for Timer interrupt"
    return NULL;
#endif
#endif
}
2001168c:	853e                	mv	a0,a5
2001168e:	4472                	lw	s0,28(sp)
20011690:	6105                	addi	sp,sp,32
20011692:	8082                	ret

20011694 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:527

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
20011694:	1101                	addi	sp,sp,-32
20011696:	ce22                	sw	s0,28(sp)
20011698:	1000                	addi	s0,sp,32
2001169a:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:528
    return METAL_INTERRUPT_ID_TMR;
2001169e:	479d                	li	a5,7
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:529
}
200116a0:	853e                	mv	a0,a5
200116a2:	4472                	lw	s0,28(sp)
200116a4:	6105                	addi	sp,sp,32
200116a6:	8082                	ret

200116a8 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:533

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
200116a8:	1101                	addi	sp,sp,-32
200116aa:	ce22                	sw	s0,28(sp)
200116ac:	1000                	addi	s0,sp,32
200116ae:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:535
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
200116b2:	800007b7          	lui	a5,0x80000
200116b6:	49c78793          	addi	a5,a5,1180 # 8000049c <metal_segment_heap_target_end+0xfffff73c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:544
#else
#warning "There is no interrupt controller for Software interrupt"
    return NULL;
#endif
#endif
}
200116ba:	853e                	mv	a0,a5
200116bc:	4472                	lw	s0,28(sp)
200116be:	6105                	addi	sp,sp,32
200116c0:	8082                	ret

200116c2 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:547

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
200116c2:	1101                	addi	sp,sp,-32
200116c4:	ce22                	sw	s0,28(sp)
200116c6:	1000                	addi	s0,sp,32
200116c8:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:548
    return METAL_INTERRUPT_ID_SW;
200116cc:	478d                	li	a5,3
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:549
}
200116ce:	853e                	mv	a0,a5
200116d0:	4472                	lw	s0,28(sp)
200116d2:	6105                	addi	sp,sp,32
200116d4:	8082                	ret

200116d6 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
200116d6:	7179                	addi	sp,sp,-48
200116d8:	d606                	sw	ra,44(sp)
200116da:	d422                	sw	s0,40(sp)
200116dc:	1800                	addi	s0,sp,48
200116de:	fca42e23          	sw	a0,-36(s0)
200116e2:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:553
    int rc = -1;
200116e6:	57fd                	li	a5,-1
200116e8:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:556
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200116ec:	fdc42503          	lw	a0,-36(s0)
200116f0:	c26ff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
200116f4:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:557
    struct __metal_driver_cpu *_cpu = (void *)cpu;
200116f8:	fdc42783          	lw	a5,-36(s0)
200116fc:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559

    if (intc) {
20011700:	fe842783          	lw	a5,-24(s0)
20011704:	c79d                	beqz	a5,20011732 <__metal_driver_cpu_set_sw_ipi+0x5c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:560
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011706:	fe842783          	lw	a5,-24(s0)
2001170a:	0dc7a783          	lw	a5,220(a5)
2001170e:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:561
        if (sw_intc) {
20011712:	fe042783          	lw	a5,-32(s0)
20011716:	cf91                	beqz	a5,20011732 <__metal_driver_cpu_set_sw_ipi+0x5c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:562
            rc = sw_intc->vtable->command_request(sw_intc,
20011718:	fe042783          	lw	a5,-32(s0)
2001171c:	439c                	lw	a5,0(a5)
2001171e:	4f98                	lw	a4,24(a5)
20011720:	fd840793          	addi	a5,s0,-40
20011724:	863e                	mv	a2,a5
20011726:	458d                	li	a1,3
20011728:	fe042503          	lw	a0,-32(s0)
2001172c:	9702                	jalr	a4
2001172e:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:566
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20011732:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:567
}
20011736:	853e                	mv	a0,a5
20011738:	50b2                	lw	ra,44(sp)
2001173a:	5422                	lw	s0,40(sp)
2001173c:	6145                	addi	sp,sp,48
2001173e:	8082                	ret

20011740 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:570

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20011740:	7179                	addi	sp,sp,-48
20011742:	d606                	sw	ra,44(sp)
20011744:	d422                	sw	s0,40(sp)
20011746:	1800                	addi	s0,sp,48
20011748:	fca42e23          	sw	a0,-36(s0)
2001174c:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:571
    int rc = -1;
20011750:	57fd                	li	a5,-1
20011752:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:574
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20011756:	fdc42503          	lw	a0,-36(s0)
2001175a:	bbcff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
2001175e:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:575
    struct __metal_driver_cpu *_cpu = (void *)cpu;
20011762:	fdc42783          	lw	a5,-36(s0)
20011766:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:577

    if (intc) {
2001176a:	fe842783          	lw	a5,-24(s0)
2001176e:	c79d                	beqz	a5,2001179c <__metal_driver_cpu_clear_sw_ipi+0x5c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:578
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011770:	fe842783          	lw	a5,-24(s0)
20011774:	0dc7a783          	lw	a5,220(a5)
20011778:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:579
        if (sw_intc) {
2001177c:	fe042783          	lw	a5,-32(s0)
20011780:	cf91                	beqz	a5,2001179c <__metal_driver_cpu_clear_sw_ipi+0x5c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:580
            rc = sw_intc->vtable->command_request(sw_intc,
20011782:	fe042783          	lw	a5,-32(s0)
20011786:	439c                	lw	a5,0(a5)
20011788:	4f98                	lw	a4,24(a5)
2001178a:	fd840793          	addi	a5,s0,-40
2001178e:	863e                	mv	a2,a5
20011790:	4589                	li	a1,2
20011792:	fe042503          	lw	a0,-32(s0)
20011796:	9702                	jalr	a4
20011798:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:584
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2001179c:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:585
}
200117a0:	853e                	mv	a0,a5
200117a2:	50b2                	lw	ra,44(sp)
200117a4:	5422                	lw	s0,40(sp)
200117a6:	6145                	addi	sp,sp,48
200117a8:	8082                	ret

200117aa <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:588

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
200117aa:	7179                	addi	sp,sp,-48
200117ac:	d606                	sw	ra,44(sp)
200117ae:	d422                	sw	s0,40(sp)
200117b0:	1800                	addi	s0,sp,48
200117b2:	fca42e23          	sw	a0,-36(s0)
200117b6:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:589
    int rc = 0;
200117ba:	fe042623          	sw	zero,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:592
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
200117be:	fdc42503          	lw	a0,-36(s0)
200117c2:	b54ff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
200117c6:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:593
    struct __metal_driver_cpu *_cpu = (void *)cpu;
200117ca:	fdc42783          	lw	a5,-36(s0)
200117ce:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:595

    if (intc) {
200117d2:	fe842783          	lw	a5,-24(s0)
200117d6:	c79d                	beqz	a5,20011804 <__metal_driver_cpu_get_msip+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:596
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200117d8:	fe842783          	lw	a5,-24(s0)
200117dc:	0dc7a783          	lw	a5,220(a5)
200117e0:	fef42023          	sw	a5,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:597
        if (sw_intc) {
200117e4:	fe042783          	lw	a5,-32(s0)
200117e8:	cf91                	beqz	a5,20011804 <__metal_driver_cpu_get_msip+0x5a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598
            rc = sw_intc->vtable->command_request(sw_intc,
200117ea:	fe042783          	lw	a5,-32(s0)
200117ee:	439c                	lw	a5,0(a5)
200117f0:	4f98                	lw	a4,24(a5)
200117f2:	fd840793          	addi	a5,s0,-40
200117f6:	863e                	mv	a2,a5
200117f8:	4591                	li	a1,4
200117fa:	fe042503          	lw	a0,-32(s0)
200117fe:	9702                	jalr	a4
20011800:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:602
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20011804:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:603
}
20011808:	853e                	mv	a0,a5
2001180a:	50b2                	lw	ra,44(sp)
2001180c:	5422                	lw	s0,40(sp)
2001180e:	6145                	addi	sp,sp,48
20011810:	8082                	ret

20011812 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:607

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20011812:	1101                	addi	sp,sp,-32
20011814:	ce06                	sw	ra,28(sp)
20011816:	cc22                	sw	s0,24(sp)
20011818:	1000                	addi	s0,sp,32
2001181a:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:608
    return __metal_driver_cpu_interrupt_controller(cpu);
2001181e:	fec42503          	lw	a0,-20(s0)
20011822:	af4ff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
20011826:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:609
}
20011828:	853e                	mv	a0,a5
2001182a:	40f2                	lw	ra,28(sp)
2001182c:	4462                	lw	s0,24(sp)
2001182e:	6105                	addi	sp,sp,32
20011830:	8082                	ret

20011832 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:633
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
20011832:	7179                	addi	sp,sp,-48
20011834:	d606                	sw	ra,44(sp)
20011836:	d422                	sw	s0,40(sp)
20011838:	1800                	addi	s0,sp,48
2001183a:	fca42e23          	sw	a0,-36(s0)
2001183e:	fcb42c23          	sw	a1,-40(s0)
20011842:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20011846:	fdc42503          	lw	a0,-36(s0)
2001184a:	accff0ef          	jal	ra,20010b16 <__metal_driver_cpu_interrupt_controller>
2001184e:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:637

    if (intc) {
20011852:	fec42783          	lw	a5,-20(s0)
20011856:	cb99                	beqz	a5,2001186c <__metal_driver_cpu_exception_register+0x3a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:638
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
20011858:	fd442603          	lw	a2,-44(s0)
2001185c:	fd842583          	lw	a1,-40(s0)
20011860:	fec42503          	lw	a0,-20(s0)
20011864:	893ff0ef          	jal	ra,200110f6 <__metal_exception_register>
20011868:	87aa                	mv	a5,a0
2001186a:	a011                	j	2001186e <__metal_driver_cpu_exception_register+0x3c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:640
    }
    return -1;
2001186c:	57fd                	li	a5,-1
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:641
}
2001186e:	853e                	mv	a0,a5
20011870:	50b2                	lw	ra,44(sp)
20011872:	5422                	lw	s0,40(sp)
20011874:	6145                	addi	sp,sp,48
20011876:	8082                	ret

20011878 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:644

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
20011878:	1101                	addi	sp,sp,-32
2001187a:	ce22                	sw	s0,28(sp)
2001187c:	1000                	addi	s0,sp,32
2001187e:	fea42623          	sw	a0,-20(s0)
20011882:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:646
    /* Per ISA compressed instruction has last two bits of opcode set */
    return (*(unsigned short*)epc & 3) ? 4 : 2;
20011886:	fe842783          	lw	a5,-24(s0)
2001188a:	0007d783          	lhu	a5,0(a5)
2001188e:	8b8d                	andi	a5,a5,3
20011890:	c399                	beqz	a5,20011896 <__metal_driver_cpu_get_instruction_length+0x1e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:646 (discriminator 1)
20011892:	4791                	li	a5,4
20011894:	a011                	j	20011898 <__metal_driver_cpu_get_instruction_length+0x20>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:646 (discriminator 2)
20011896:	4789                	li	a5,2
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:647 (discriminator 5)
}
20011898:	853e                	mv	a0,a5
2001189a:	4472                	lw	s0,28(sp)
2001189c:	6105                	addi	sp,sp,32
2001189e:	8082                	ret

200118a0 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:650

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
200118a0:	7179                	addi	sp,sp,-48
200118a2:	d622                	sw	s0,44(sp)
200118a4:	1800                	addi	s0,sp,48
200118a6:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652
    uintptr_t mepc;
    asm volatile ("csrr %0, mepc" : "=r"(mepc));
200118aa:	341027f3          	csrr	a5,mepc
200118ae:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
    return mepc;
200118b2:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:654
}
200118b6:	853e                	mv	a0,a5
200118b8:	5432                	lw	s0,44(sp)
200118ba:	6145                	addi	sp,sp,48
200118bc:	8082                	ret

200118be <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:657

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
200118be:	1101                	addi	sp,sp,-32
200118c0:	ce22                	sw	s0,28(sp)
200118c2:	1000                	addi	s0,sp,32
200118c4:	fea42623          	sw	a0,-20(s0)
200118c8:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:658
    asm volatile ("csrw mepc, %0" :: "r"(mepc));
200118cc:	fe842783          	lw	a5,-24(s0)
200118d0:	34179073          	csrw	mepc,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:659
    return 0;
200118d4:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:660
}
200118d6:	853e                	mv	a0,a5
200118d8:	4472                	lw	s0,28(sp)
200118da:	6105                	addi	sp,sp,32
200118dc:	8082                	ret

200118de <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:698



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static inline struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
200118de:	1101                	addi	sp,sp,-32
200118e0:	ce22                	sw	s0,28(sp)
200118e2:	1000                	addi	s0,sp,32
200118e4:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:699
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
200118e8:	800007b7          	lui	a5,0x80000
200118ec:	01478793          	addi	a5,a5,20 # 80000014 <metal_segment_heap_target_end+0xfffff2b4>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:700
}
200118f0:	853e                	mv	a0,a5
200118f2:	4472                	lw	s0,28(sp)
200118f4:	6105                	addi	sp,sp,32
200118f6:	8082                	ret

200118f8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:703

static inline struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
200118f8:	1101                	addi	sp,sp,-32
200118fa:	ce22                	sw	s0,28(sp)
200118fc:	1000                	addi	s0,sp,32
200118fe:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:704
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20011902:	800007b7          	lui	a5,0x80000
20011906:	4d078793          	addi	a5,a5,1232 # 800004d0 <metal_segment_heap_target_end+0xfffff770>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:705
}
2001190a:	853e                	mv	a0,a5
2001190c:	4472                	lw	s0,28(sp)
2001190e:	6105                	addi	sp,sp,32
20011910:	8082                	ret

20011912 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:713
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static inline long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20011912:	1101                	addi	sp,sp,-32
20011914:	ce22                	sw	s0,28(sp)
20011916:	1000                	addi	s0,sp,32
20011918:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:714
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2001191c:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:715
}
2001191e:	853e                	mv	a0,a5
20011920:	4472                	lw	s0,28(sp)
20011922:	6105                	addi	sp,sp,32
20011924:	8082                	ret

20011926 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:787
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static inline const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20011926:	1141                	addi	sp,sp,-16
20011928:	c622                	sw	s0,12(sp)
2001192a:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:788
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001192c:	82018793          	addi	a5,gp,-2016 # 800004b8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:789
}
20011930:	853e                	mv	a0,a5
20011932:	4432                	lw	s0,12(sp)
20011934:	0141                	addi	sp,sp,16
20011936:	8082                	ret

20011938 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM    0x001F0000UL
#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(const struct metal_clock *clock)
{
20011938:	7139                	addi	sp,sp,-64
2001193a:	de06                	sw	ra,60(sp)
2001193c:	dc22                	sw	s0,56(sp)
2001193e:	0080                	addi	s0,sp,64
20011940:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:18
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20011944:	fcc42503          	lw	a0,-52(s0)
20011948:	3f59                	jal	200118de <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2001194a:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    long config_offset = __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2001194e:	fcc42503          	lw	a0,-52(s0)
20011952:	37c1                	jal	20011912 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20011954:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20011958:	fcc42503          	lw	a0,-52(s0)
2001195c:	3f71                	jal	200118f8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
2001195e:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20011962:	37d1                	jal	20011926 <__metal_driver_sifive_fe310_g000_prci_vtable>
20011964:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20011968:	fe042783          	lw	a5,-32(s0)
2001196c:	439c                	lw	a5,0(a5)
2001196e:	fe842583          	lw	a1,-24(s0)
20011972:	fe442503          	lw	a0,-28(s0)
20011976:	9782                	jalr	a5
20011978:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30

    if (cfg & CONFIG_ENABLE == 0)
        return -1;
    if (cfg & CONFIG_READY == 0)
        return -1;
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
2001197c:	fec42503          	lw	a0,-20(s0)
20011980:	045000ef          	jal	ra,200121c4 <metal_clock_get_rate_hz>
20011984:	87aa                	mv	a5,a0
20011986:	873e                	mv	a4,a5
20011988:	fdc42783          	lw	a5,-36(s0)
2001198c:	03f7f793          	andi	a5,a5,63
20011990:	0785                	addi	a5,a5,1
20011992:	02f757b3          	divu	a5,a4,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
}
20011996:	853e                	mv	a0,a5
20011998:	50f2                	lw	ra,60(sp)
2001199a:	5462                	lw	s0,56(sp)
2001199c:	6121                	addi	sp,sp,64
2001199e:	8082                	ret

200119a0 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:34

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(struct metal_clock *clock, long rate)
{
200119a0:	1101                	addi	sp,sp,-32
200119a2:	ce06                	sw	ra,28(sp)
200119a4:	cc22                	sw	s0,24(sp)
200119a6:	1000                	addi	s0,sp,32
200119a8:	fea42623          	sw	a0,-20(s0)
200119ac:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:35
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
200119b0:	fec42503          	lw	a0,-20(s0)
200119b4:	3751                	jal	20011938 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
200119b6:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36
}
200119b8:	853e                	mv	a0,a5
200119ba:	40f2                	lw	ra,28(sp)
200119bc:	4462                	lw	s0,24(sp)
200119be:	6105                	addi	sp,sp,32
200119c0:	8082                	ret

200119c2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:721
{
200119c2:	1101                	addi	sp,sp,-32
200119c4:	ce22                	sw	s0,28(sp)
200119c6:	1000                	addi	s0,sp,32
200119c8:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:722
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
200119cc:	800007b7          	lui	a5,0x80000
200119d0:	00078793          	mv	a5,a5
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:723
}
200119d4:	853e                	mv	a0,a5
200119d6:	4472                	lw	s0,28(sp)
200119d8:	6105                	addi	sp,sp,32
200119da:	8082                	ret

200119dc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:726
{
200119dc:	1101                	addi	sp,sp,-32
200119de:	ce22                	sw	s0,28(sp)
200119e0:	1000                	addi	s0,sp,32
200119e2:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:727
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200119e6:	800007b7          	lui	a5,0x80000
200119ea:	4d078793          	addi	a5,a5,1232 # 800004d0 <metal_segment_heap_target_end+0xfffff770>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:728
}
200119ee:	853e                	mv	a0,a5
200119f0:	4472                	lw	s0,28(sp)
200119f2:	6105                	addi	sp,sp,32
200119f4:	8082                	ret

200119f6 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:731
{
200119f6:	1101                	addi	sp,sp,-32
200119f8:	ce22                	sw	s0,28(sp)
200119fa:	1000                	addi	s0,sp,32
200119fc:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:732
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20011a00:	4791                	li	a5,4
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:733
}
20011a02:	853e                	mv	a0,a5
20011a04:	4472                	lw	s0,28(sp)
20011a06:	6105                	addi	sp,sp,32
20011a08:	8082                	ret

20011a0a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:787
{
20011a0a:	1141                	addi	sp,sp,-16
20011a0c:	c622                	sw	s0,12(sp)
20011a0e:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:788
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20011a10:	82018793          	addi	a5,gp,-2016 # 800004b8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:789
}
20011a14:	853e                	mv	a0,a5
20011a16:	4432                	lw	s0,12(sp)
20011a18:	0141                	addi	sp,sp,16
20011a1a:	8082                	ret

20011a1c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(const struct metal_clock *clock)
{
20011a1c:	7139                	addi	sp,sp,-64
20011a1e:	de06                	sw	ra,60(sp)
20011a20:	dc22                	sw	s0,56(sp)
20011a22:	0080                	addi	s0,sp,64
20011a24:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:16
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20011a28:	fcc42503          	lw	a0,-52(s0)
20011a2c:	3f59                	jal	200119c2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20011a2e:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    long config_offset = __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20011a32:	fcc42503          	lw	a0,-52(s0)
20011a36:	37c1                	jal	200119f6 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20011a38:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20011a3c:	fcc42503          	lw	a0,-52(s0)
20011a40:	3f71                	jal	200119dc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20011a42:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20011a46:	37d1                	jal	20011a0a <__metal_driver_sifive_fe310_g000_prci_vtable>
20011a48:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:22
    long cfg = vtable->get_reg(config_base, config_offset);
20011a4c:	fe042783          	lw	a5,-32(s0)
20011a50:	439c                	lw	a5,0(a5)
20011a52:	fe842583          	lw	a1,-24(s0)
20011a56:	fe442503          	lw	a0,-28(s0)
20011a5a:	9782                	jalr	a5
20011a5c:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28

    if (cfg & CONFIG_ENABLE == 0)
        return -1;
    if (cfg & CONFIG_READY == 0)
        return -1;
    return metal_clock_get_rate_hz(ref);
20011a60:	fec42503          	lw	a0,-20(s0)
20011a64:	760000ef          	jal	ra,200121c4 <metal_clock_get_rate_hz>
20011a68:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
}
20011a6a:	853e                	mv	a0,a5
20011a6c:	50f2                	lw	ra,60(sp)
20011a6e:	5462                	lw	s0,56(sp)
20011a70:	6121                	addi	sp,sp,64
20011a72:	8082                	ret

20011a74 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:32

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20011a74:	1101                	addi	sp,sp,-32
20011a76:	ce06                	sw	ra,28(sp)
20011a78:	cc22                	sw	s0,24(sp)
20011a7a:	1000                	addi	s0,sp,32
20011a7c:	fea42623          	sw	a0,-20(s0)
20011a80:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:33
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20011a84:	fec42503          	lw	a0,-20(s0)
20011a88:	3f51                	jal	20011a1c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20011a8a:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34
}
20011a8c:	853e                	mv	a0,a5
20011a8e:	40f2                	lw	ra,28(sp)
20011a90:	4462                	lw	s0,24(sp)
20011a92:	6105                	addi	sp,sp,32
20011a94:	8082                	ret

20011a96 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:739
{
20011a96:	1101                	addi	sp,sp,-32
20011a98:	ce22                	sw	s0,28(sp)
20011a9a:	1000                	addi	s0,sp,32
20011a9c:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:740
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20011aa0:	800007b7          	lui	a5,0x80000
20011aa4:	3f878793          	addi	a5,a5,1016 # 800003f8 <metal_segment_heap_target_end+0xfffff698>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:741
}
20011aa8:	853e                	mv	a0,a5
20011aaa:	4472                	lw	s0,28(sp)
20011aac:	6105                	addi	sp,sp,32
20011aae:	8082                	ret

20011ab0 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:744
{
20011ab0:	1101                	addi	sp,sp,-32
20011ab2:	ce22                	sw	s0,28(sp)
20011ab4:	1000                	addi	s0,sp,32
20011ab6:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:745
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20011aba:	800007b7          	lui	a5,0x80000
20011abe:	40c78793          	addi	a5,a5,1036 # 8000040c <metal_segment_heap_target_end+0xfffff6ac>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:746
}
20011ac2:	853e                	mv	a0,a5
20011ac4:	4472                	lw	s0,28(sp)
20011ac6:	6105                	addi	sp,sp,32
20011ac8:	8082                	ret

20011aca <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:749
{
20011aca:	1101                	addi	sp,sp,-32
20011acc:	ce22                	sw	s0,28(sp)
20011ace:	1000                	addi	s0,sp,32
20011ad0:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:750
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20011ad4:	800007b7          	lui	a5,0x80000
20011ad8:	4d078793          	addi	a5,a5,1232 # 800004d0 <metal_segment_heap_target_end+0xfffff770>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:751
}
20011adc:	853e                	mv	a0,a5
20011ade:	4472                	lw	s0,28(sp)
20011ae0:	6105                	addi	sp,sp,32
20011ae2:	8082                	ret

20011ae4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:754
{
20011ae4:	1101                	addi	sp,sp,-32
20011ae6:	ce22                	sw	s0,28(sp)
20011ae8:	1000                	addi	s0,sp,32
20011aea:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:755
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20011aee:	47b1                	li	a5,12
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:756
}
20011af0:	853e                	mv	a0,a5
20011af2:	4472                	lw	s0,28(sp)
20011af4:	6105                	addi	sp,sp,32
20011af6:	8082                	ret

20011af8 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:759
{
20011af8:	1141                	addi	sp,sp,-16
20011afa:	c622                	sw	s0,12(sp)
20011afc:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:760
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20011afe:	800007b7          	lui	a5,0x80000
20011b02:	4d078793          	addi	a5,a5,1232 # 800004d0 <metal_segment_heap_target_end+0xfffff770>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:761
}
20011b06:	853e                	mv	a0,a5
20011b08:	4432                	lw	s0,12(sp)
20011b0a:	0141                	addi	sp,sp,16
20011b0c:	8082                	ret

20011b0e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:764
{
20011b0e:	1141                	addi	sp,sp,-16
20011b10:	c622                	sw	s0,12(sp)
20011b12:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:765
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20011b14:	47a1                	li	a5,8
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:766
}
20011b16:	853e                	mv	a0,a5
20011b18:	4432                	lw	s0,12(sp)
20011b1a:	0141                	addi	sp,sp,16
20011b1c:	8082                	ret

20011b1e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:769
{
20011b1e:	1141                	addi	sp,sp,-16
20011b20:	c622                	sw	s0,12(sp)
20011b22:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:770
		return 16000000;
20011b24:	00f427b7          	lui	a5,0xf42
20011b28:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf42000>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:771
}
20011b2c:	853e                	mv	a0,a5
20011b2e:	4432                	lw	s0,12(sp)
20011b30:	0141                	addi	sp,sp,16
20011b32:	8082                	ret

20011b34 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:777
{
20011b34:	1141                	addi	sp,sp,-16
20011b36:	c622                	sw	s0,12(sp)
20011b38:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:778
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20011b3a:	100087b7          	lui	a5,0x10008
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:779
}
20011b3e:	853e                	mv	a0,a5
20011b40:	4432                	lw	s0,12(sp)
20011b42:	0141                	addi	sp,sp,16
20011b44:	8082                	ret

20011b46 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:787
{
20011b46:	1141                	addi	sp,sp,-16
20011b48:	c622                	sw	s0,12(sp)
20011b4a:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:788
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20011b4c:	82018793          	addi	a5,gp,-2016 # 800004b8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:789
}
20011b50:	853e                	mv	a0,a5
20011b52:	4432                	lw	s0,12(sp)
20011b54:	0141                	addi	sp,sp,16
20011b56:	8082                	ret

20011b58 <get_pll_config_freq>:
get_pll_config_freq():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:137
 *  - config the PLL configuration
 * Returns:
 *  - PLL_CONFIG_NOT_VALID if the configuration is not valid for the input frequency
 *  - the output frequency, in hertz */
static long get_pll_config_freq(long pll_input_rate, const struct pll_config_t *config)
{
20011b58:	1101                	addi	sp,sp,-32
20011b5a:	ce22                	sw	s0,28(sp)
20011b5c:	1000                	addi	s0,sp,32
20011b5e:	fea42623          	sw	a0,-20(s0)
20011b62:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138
    if(pll_input_rate < config->min_input_rate || pll_input_rate > config->max_input_rate)
20011b66:	fe842783          	lw	a5,-24(s0)
20011b6a:	4798                	lw	a4,8(a5)
20011b6c:	fec42783          	lw	a5,-20(s0)
20011b70:	00e7e963          	bltu	a5,a4,20011b82 <get_pll_config_freq+0x2a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138 (discriminator 1)
20011b74:	fe842783          	lw	a5,-24(s0)
20011b78:	47d8                	lw	a4,12(a5)
20011b7a:	fec42783          	lw	a5,-20(s0)
20011b7e:	00f77463          	bgeu	a4,a5,20011b86 <get_pll_config_freq+0x2e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:139
        return PLL_CONFIG_NOT_VALID;
20011b82:	57fd                	li	a5,-1
20011b84:	a829                	j	20011b9e <get_pll_config_freq+0x46>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141

    return pll_input_rate * config->multiplier / config->divisor;
20011b86:	fe842783          	lw	a5,-24(s0)
20011b8a:	4398                	lw	a4,0(a5)
20011b8c:	fec42783          	lw	a5,-20(s0)
20011b90:	02f70733          	mul	a4,a4,a5
20011b94:	fe842783          	lw	a5,-24(s0)
20011b98:	43dc                	lw	a5,4(a5)
20011b9a:	02f757b3          	divu	a5,a4,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
}
20011b9e:	853e                	mv	a0,a5
20011ba0:	4472                	lw	s0,28(sp)
20011ba2:	6105                	addi	sp,sp,32
20011ba4:	8082                	ret

20011ba6 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

static void metal_sifive_fe310_g000_pll_init(void) __attribute__((constructor));
static void metal_sifive_fe310_g000_pll_init(void) {
20011ba6:	1101                	addi	sp,sp,-32
20011ba8:	ce06                	sw	ra,28(sp)
20011baa:	cc22                	sw	s0,24(sp)
20011bac:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:148
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20011bae:	3f85                	jal	20011b1e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20011bb0:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:150
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if(init_rate != 0)
20011bb4:	fec42783          	lw	a5,-20(s0)
20011bb8:	c791                	beqz	a5,20011bc4 <metal_sifive_fe310_g000_pll_init+0x1e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
        __metal_driver_sifive_fe310_g000_pll_init(__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
20011bba:	800007b7          	lui	a5,0x80000
20011bbe:	42078513          	addi	a0,a5,1056 # 80000420 <metal_segment_heap_target_end+0xfffff6c0>
20011bc2:	2031                	jal	20011bce <__metal_driver_sifive_fe310_g000_pll_init>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
}
20011bc4:	0001                	nop
20011bc6:	40f2                	lw	ra,28(sp)
20011bc8:	4462                	lw	s0,24(sp)
20011bca:	6105                	addi	sp,sp,32
20011bcc:	8082                	ret

20011bce <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:156

#endif /* __METAL_DT_SIFIVE_FE310_G000__PLL_HANDLE */

void __metal_driver_sifive_fe310_g000_pll_init(struct __metal_driver_sifive_fe310_g000_pll *pll) {
20011bce:	7139                	addi	sp,sp,-64
20011bd0:	de06                	sw	ra,60(sp)
20011bd2:	dc22                	sw	s0,56(sp)
20011bd4:	0080                	addi	s0,sp,64
20011bd6:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20011bda:	fcc42783          	lw	a5,-52(s0)
20011bde:	853e                	mv	a0,a5
20011be0:	3dc1                	jal	20011ab0 <__metal_driver_sifive_fe310_g000_pll_pllref>
20011be2:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:158
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20011be6:	3f25                	jal	20011b1e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20011be8:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:159
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20011bec:	370d                	jal	20011b0e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20011bee:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:160
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20011bf2:	3789                	jal	20011b34 <__metal_driver_sifive_fe310_g000_prci_base>
20011bf4:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20011bf8:	fe042703          	lw	a4,-32(s0)
20011bfc:	fe442783          	lw	a5,-28(s0)
20011c00:	97ba                	add	a5,a5,a4
20011c02:	fcf42e23          	sw	a5,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165

    /* If the PLL clock has had a _pre_rate_change_callback configured, call it */
    if(pll->clock._pre_rate_change_callback != NULL)
20011c06:	fcc42783          	lw	a5,-52(s0)
20011c0a:	43dc                	lw	a5,4(a5)
20011c0c:	cb89                	beqz	a5,20011c1e <__metal_driver_sifive_fe310_g000_pll_init+0x50>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
        pll->clock._pre_rate_change_callback(pll->clock._pre_rate_change_callback_priv);
20011c0e:	fcc42783          	lw	a5,-52(s0)
20011c12:	43d8                	lw	a4,4(a5)
20011c14:	fcc42783          	lw	a5,-52(s0)
20011c18:	479c                	lw	a5,8(a5)
20011c1a:	853e                	mv	a0,a5
20011c1c:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169

    /* If we're running off of the PLL, switch off before we start configuring it*/
    if((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) == 0)
20011c1e:	fdc42783          	lw	a5,-36(s0)
20011c22:	4398                	lw	a4,0(a5)
20011c24:	67c1                	lui	a5,0x10
20011c26:	8ff9                	and	a5,a5,a4
20011c28:	eb91                	bnez	a5,20011c3c <__metal_driver_sifive_fe310_g000_pll_init+0x6e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:170
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20011c2a:	fdc42783          	lw	a5,-36(s0)
20011c2e:	4398                	lw	a4,0(a5)
20011c30:	77c1                	lui	a5,0xffff0
20011c32:	17fd                	addi	a5,a5,-1
20011c34:	8f7d                	and	a4,a4,a5
20011c36:	fdc42783          	lw	a5,-36(s0)
20011c3a:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173

    /* Make sure we're running off of the external oscillator for stability */
    if(pllref != NULL)
20011c3c:	fec42783          	lw	a5,-20(s0)
20011c40:	cb91                	beqz	a5,20011c54 <__metal_driver_sifive_fe310_g000_pll_init+0x86>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:174
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20011c42:	fdc42783          	lw	a5,-36(s0)
20011c46:	4398                	lw	a4,0(a5)
20011c48:	000207b7          	lui	a5,0x20
20011c4c:	8f5d                	or	a4,a4,a5
20011c4e:	fdc42783          	lw	a5,-36(s0)
20011c52:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:179

    /* Configure the PLL to run at the requested init frequency.
     * Using the vtable instead of the user API because we want to control
     * when the callbacks occur. */
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20011c54:	fcc42783          	lw	a5,-52(s0)
20011c58:	439c                	lw	a5,0(a5)
20011c5a:	43d8                	lw	a4,4(a5)
20011c5c:	fcc42783          	lw	a5,-52(s0)
20011c60:	fe842583          	lw	a1,-24(s0)
20011c64:	853e                	mv	a0,a5
20011c66:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182

    /* If the PLL clock has had a rate_change_callback configured, call it */
    if(pll->clock._post_rate_change_callback != NULL)
20011c68:	fcc42783          	lw	a5,-52(s0)
20011c6c:	47dc                	lw	a5,12(a5)
20011c6e:	cb89                	beqz	a5,20011c80 <__metal_driver_sifive_fe310_g000_pll_init+0xb2>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:183
        pll->clock._post_rate_change_callback(pll->clock._post_rate_change_callback_priv);
20011c70:	fcc42783          	lw	a5,-52(s0)
20011c74:	47d8                	lw	a4,12(a5)
20011c76:	fcc42783          	lw	a5,-52(s0)
20011c7a:	4b9c                	lw	a5,16(a5)
20011c7c:	853e                	mv	a0,a5
20011c7e:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:184
}
20011c80:	0001                	nop
20011c82:	50f2                	lw	ra,60(sp)
20011c84:	5462                	lw	s0,56(sp)
20011c86:	6121                	addi	sp,sp,64
20011c88:	8082                	ret

20011c8a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187

long __metal_driver_sifive_fe310_g000_pll_get_rate_hz(const struct metal_clock *clock)
{
20011c8a:	711d                	addi	sp,sp,-96
20011c8c:	ce86                	sw	ra,92(sp)
20011c8e:	cca2                	sw	s0,88(sp)
20011c90:	1080                	addi	s0,sp,96
20011c92:	faa42623          	sw	a0,-84(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:188
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20011c96:	fac42503          	lw	a0,-84(s0)
20011c9a:	3d19                	jal	20011ab0 <__metal_driver_sifive_fe310_g000_pll_pllref>
20011c9c:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:189
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20011ca0:	fac42503          	lw	a0,-84(s0)
20011ca4:	3bcd                	jal	20011a96 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20011ca6:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20011caa:	fac42503          	lw	a0,-84(s0)
20011cae:	3585                	jal	20011b0e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20011cb0:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:192
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20011cb4:	fac42503          	lw	a0,-84(s0)
20011cb8:	3581                	jal	20011af8 <__metal_driver_sifive_fe310_g000_pll_config_base>
20011cba:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:193
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20011cbe:	fac42503          	lw	a0,-84(s0)
20011cc2:	350d                	jal	20011ae4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20011cc4:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:195
    struct __metal_driver_sifive_fe310_g000_prci *divider_base =
      __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20011cc8:	fac42503          	lw	a0,-84(s0)
20011ccc:	3bfd                	jal	20011aca <__metal_driver_sifive_fe310_g000_pll_divider_base>
20011cce:	fca42c23          	sw	a0,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:197
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20011cd2:	3d95                	jal	20011b46 <__metal_driver_sifive_fe310_g000_prci_vtable>
20011cd4:	fca42a23          	sw	a0,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:199

    long cfg = vtable->get_reg(config_base, config_offset);
20011cd8:	fd442783          	lw	a5,-44(s0)
20011cdc:	439c                	lw	a5,0(a5)
20011cde:	fe442583          	lw	a1,-28(s0)
20011ce2:	fe042503          	lw	a0,-32(s0)
20011ce6:	9782                	jalr	a5
20011ce8:	fca42823          	sw	a0,-48(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
    long div = vtable->get_reg(divider_base, divider_offset);
20011cec:	fd442783          	lw	a5,-44(s0)
20011cf0:	439c                	lw	a5,0(a5)
20011cf2:	fdc42583          	lw	a1,-36(s0)
20011cf6:	fd842503          	lw	a0,-40(s0)
20011cfa:	9782                	jalr	a5
20011cfc:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204

    /* At the end of the PLL there's one big mux: it either selects the HFROSC
     * (bypassing the PLL entirely) or uses the PLL. */
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20011d00:	fd042703          	lw	a4,-48(s0)
20011d04:	67c1                	lui	a5,0x10
20011d06:	8f7d                	and	a4,a4,a5
20011d08:	67c1                	lui	a5,0x10
20011d0a:	00f77763          	bgeu	a4,a5,20011d18 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x8e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:205
        return metal_clock_get_rate_hz(pllsel0);
20011d0e:	fe842503          	lw	a0,-24(s0)
20011d12:	294d                	jal	200121c4 <metal_clock_get_rate_hz>
20011d14:	87aa                	mv	a5,a0
20011d16:	a8d9                	j	20011dec <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:209

    /* There's a clock mux before the PLL that selects between the HFROSC adn
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20011d18:	fd042703          	lw	a4,-48(s0)
20011d1c:	000207b7          	lui	a5,0x20
20011d20:	8f7d                	and	a4,a4,a5
20011d22:	000207b7          	lui	a5,0x20
20011d26:	00f76563          	bltu	a4,a5,20011d30 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa6>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:209 (discriminator 1)
20011d2a:	fec42783          	lw	a5,-20(s0)
20011d2e:	a019                	j	20011d34 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xaa>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:209 (discriminator 2)
20011d30:	fe842783          	lw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:209 (discriminator 4)
20011d34:	853e                	mv	a0,a5
20011d36:	2179                	jal	200121c4 <metal_clock_get_rate_hz>
20011d38:	fca42423          	sw	a0,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:213 (discriminator 4)

    /* It's possible to bypass the PLL, which is an internal bpyass.  This
     * still obays the PLL's input clock mu. */
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20011d3c:	fd042703          	lw	a4,-48(s0)
20011d40:	000407b7          	lui	a5,0x40
20011d44:	8f7d                	and	a4,a4,a5
20011d46:	000407b7          	lui	a5,0x40
20011d4a:	00f76563          	bltu	a4,a5,20011d54 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xca>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:214
        return ref_hz;
20011d4e:	fc842783          	lw	a5,-56(s0)
20011d52:	a869                	j	20011dec <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:217

    /* Logically the PLL is a three stage div-mul-div. */
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20011d54:	fd042783          	lw	a5,-48(s0)
20011d58:	8b9d                	andi	a5,a5,7
20011d5a:	0785                	addi	a5,a5,1
20011d5c:	fcf42223          	sw	a5,-60(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:218
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20011d60:	fd042783          	lw	a5,-48(s0)
20011d64:	3f07f793          	andi	a5,a5,1008
20011d68:	8391                	srli	a5,a5,0x4
20011d6a:	0785                	addi	a5,a5,1
20011d6c:	0786                	slli	a5,a5,0x1
20011d6e:	fcf42023          	sw	a5,-64(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:219
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20011d72:	fd042703          	lw	a4,-48(s0)
20011d76:	6785                	lui	a5,0x1
20011d78:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x800>
20011d7c:	8f7d                	and	a4,a4,a5
20011d7e:	3ff00793          	li	a5,1023
20011d82:	00e7e463          	bltu	a5,a4,20011d8a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x100>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
        return -1;
20011d86:	57fd                	li	a5,-1
20011d88:	a095                	j	20011dec <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20011d8a:	fd042703          	lw	a4,-48(s0)
20011d8e:	6785                	lui	a5,0x1
20011d90:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x800>
20011d94:	8ff9                	and	a5,a5,a4
20011d96:	83a9                	srli	a5,a5,0xa
20011d98:	4705                	li	a4,1
20011d9a:	00f717b3          	sll	a5,a4,a5
20011d9e:	faf42e23          	sw	a5,-68(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226

    /* In addition to the dividers inherent in the PLL, there's an additional
     * clock divider that lives after the PLL and lets us pick a more
     * interesting range of frequencies. */
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20011da2:	fc842703          	lw	a4,-56(s0)
20011da6:	fc442783          	lw	a5,-60(s0)
20011daa:	02f74733          	div	a4,a4,a5
20011dae:	fc042783          	lw	a5,-64(s0)
20011db2:	02f70733          	mul	a4,a4,a5
20011db6:	fbc42783          	lw	a5,-68(s0)
20011dba:	02f747b3          	div	a5,a4,a5
20011dbe:	faf42c23          	sw	a5,-72(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:227
    if (__METAL_GET_FIELD(div, DIV_1))
20011dc2:	fcc42783          	lw	a5,-52(s0)
20011dc6:	1007f713          	andi	a4,a5,256
20011dca:	0ff00793          	li	a5,255
20011dce:	00e7f563          	bgeu	a5,a4,20011dd8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x14e>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:228
        return pllout;
20011dd2:	fb842783          	lw	a5,-72(s0)
20011dd6:	a819                	j	20011dec <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x162>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230

    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20011dd8:	fb842703          	lw	a4,-72(s0)
20011ddc:	fcc42783          	lw	a5,-52(s0)
20011de0:	03f7f793          	andi	a5,a5,63
20011de4:	0785                	addi	a5,a5,1
20011de6:	0786                	slli	a5,a5,0x1
20011de8:	02f757b3          	divu	a5,a4,a5
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
}
20011dec:	853e                	mv	a0,a5
20011dee:	40f6                	lw	ra,92(sp)
20011df0:	4466                	lw	s0,88(sp)
20011df2:	6125                	addi	sp,sp,96
20011df4:	8082                	ret

20011df6 <find_closest_config>:
find_closest_config():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
 *  - rate desired PLL output frequency
 * Returns:
 *  -1 if no valid configuration is available
 *  the index into pll_configs of a valid configuration */
static int find_closest_config(long ref_hz, long rate)
{
20011df6:	7139                	addi	sp,sp,-64
20011df8:	de06                	sw	ra,60(sp)
20011dfa:	dc22                	sw	s0,56(sp)
20011dfc:	0080                	addi	s0,sp,64
20011dfe:	fca42623          	sw	a0,-52(s0)
20011e02:	fcb42423          	sw	a1,-56(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
    int closest_index = -1;
20011e06:	57fd                	li	a5,-1
20011e08:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:244
    long closest_diff = LONG_MAX;
20011e0c:	800007b7          	lui	a5,0x80000
20011e10:	fff7c793          	not	a5,a5
20011e14:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248

    /* We're probably trying for a fast output frequency, so start from
     * the high end of the configs. */
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
20011e18:	04300793          	li	a5,67
20011e1c:	fef42223          	sw	a5,-28(s0)
20011e20:	a0a5                	j	20011e88 <find_closest_config+0x92>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:250
    {
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20011e22:	fe442783          	lw	a5,-28(s0)
20011e26:	00579713          	slli	a4,a5,0x5
20011e2a:	200127b7          	lui	a5,0x20012
20011e2e:	73078793          	addi	a5,a5,1840 # 20012730 <pll_configs>
20011e32:	97ba                	add	a5,a5,a4
20011e34:	85be                	mv	a1,a5
20011e36:	fcc42503          	lw	a0,-52(s0)
20011e3a:	3b39                	jal	20011b58 <get_pll_config_freq>
20011e3c:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:251
        if(config_freq != PLL_CONFIG_NOT_VALID)
20011e40:	fe042703          	lw	a4,-32(s0)
20011e44:	57fd                	li	a5,-1
20011e46:	02f70c63          	beq	a4,a5,20011e7e <find_closest_config+0x88>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
        {
            long freq_diff = abs(config_freq - rate);
20011e4a:	fe042703          	lw	a4,-32(s0)
20011e4e:	fc842783          	lw	a5,-56(s0)
20011e52:	8f1d                	sub	a4,a4,a5
20011e54:	41f75793          	srai	a5,a4,0x1f
20011e58:	8f3d                	xor	a4,a4,a5
20011e5a:	40f707b3          	sub	a5,a4,a5
20011e5e:	fcf42e23          	sw	a5,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
            if(freq_diff < closest_diff)
20011e62:	fdc42703          	lw	a4,-36(s0)
20011e66:	fe842783          	lw	a5,-24(s0)
20011e6a:	00f75a63          	bge	a4,a5,20011e7e <find_closest_config+0x88>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:256
            {
                closest_index = i;
20011e6e:	fe442783          	lw	a5,-28(s0)
20011e72:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:257
                closest_diff = freq_diff;
20011e76:	fdc42783          	lw	a5,-36(s0)
20011e7a:	fef42423          	sw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248 (discriminator 2)
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
20011e7e:	fe442783          	lw	a5,-28(s0)
20011e82:	17fd                	addi	a5,a5,-1
20011e84:	fef42223          	sw	a5,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248 (discriminator 1)
20011e88:	fe442783          	lw	a5,-28(s0)
20011e8c:	f807dbe3          	bgez	a5,20011e22 <find_closest_config+0x2c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
            }
        }
    }

    return closest_index;
20011e90:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
}
20011e94:	853e                	mv	a0,a5
20011e96:	50f2                	lw	ra,60(sp)
20011e98:	5462                	lw	s0,56(sp)
20011e9a:	6121                	addi	sp,sp,64
20011e9c:	8082                	ret

20011e9e <configure_pll>:
configure_pll():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267

/* Configure the PLL and wait for it to lock */
static void configure_pll(__metal_io_u32 *pllcfg, __metal_io_u32 *plloutdiv, const struct pll_config_t *config)
{
20011e9e:	1101                	addi	sp,sp,-32
20011ea0:	ce22                	sw	s0,28(sp)
20011ea2:	1000                	addi	s0,sp,32
20011ea4:	fea42623          	sw	a0,-20(s0)
20011ea8:	feb42423          	sw	a1,-24(s0)
20011eac:	fec42223          	sw	a2,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:268
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20011eb0:	fec42783          	lw	a5,-20(s0)
20011eb4:	439c                	lw	a5,0(a5)
20011eb6:	ff87f713          	andi	a4,a5,-8
20011eba:	fec42783          	lw	a5,-20(s0)
20011ebe:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:269
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20011ec0:	fec42783          	lw	a5,-20(s0)
20011ec4:	4398                	lw	a4,0(a5)
20011ec6:	fe442783          	lw	a5,-28(s0)
20011eca:	4b9c                	lw	a5,16(a5)
20011ecc:	8b9d                	andi	a5,a5,7
20011ece:	8f5d                	or	a4,a4,a5
20011ed0:	fec42783          	lw	a5,-20(s0)
20011ed4:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:271

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20011ed6:	fec42783          	lw	a5,-20(s0)
20011eda:	439c                	lw	a5,0(a5)
20011edc:	c0f7f713          	andi	a4,a5,-1009
20011ee0:	fec42783          	lw	a5,-20(s0)
20011ee4:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20011ee6:	fec42783          	lw	a5,-20(s0)
20011eea:	4398                	lw	a4,0(a5)
20011eec:	fe442783          	lw	a5,-28(s0)
20011ef0:	4bdc                	lw	a5,20(a5)
20011ef2:	0792                	slli	a5,a5,0x4
20011ef4:	3f07f793          	andi	a5,a5,1008
20011ef8:	8f5d                	or	a4,a4,a5
20011efa:	fec42783          	lw	a5,-20(s0)
20011efe:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:274

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20011f00:	fec42783          	lw	a5,-20(s0)
20011f04:	4398                	lw	a4,0(a5)
20011f06:	77fd                	lui	a5,0xfffff
20011f08:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffe69f>
20011f0c:	8f7d                	and	a4,a4,a5
20011f0e:	fec42783          	lw	a5,-20(s0)
20011f12:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:275
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20011f14:	fec42783          	lw	a5,-20(s0)
20011f18:	4398                	lw	a4,0(a5)
20011f1a:	fe442783          	lw	a5,-28(s0)
20011f1e:	4f9c                	lw	a5,24(a5)
20011f20:	00a79693          	slli	a3,a5,0xa
20011f24:	6785                	lui	a5,0x1
20011f26:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x800>
20011f2a:	8ff5                	and	a5,a5,a3
20011f2c:	8f5d                	or	a4,a4,a5
20011f2e:	fec42783          	lw	a5,-20(s0)
20011f32:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:277

    if(config->d < 0)
20011f34:	fe442783          	lw	a5,-28(s0)
20011f38:	4fdc                	lw	a5,28(a5)
20011f3a:	0207db63          	bgez	a5,20011f70 <configure_pll+0xd2>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:280
    {
        /* disable final divider */
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20011f3e:	fe842783          	lw	a5,-24(s0)
20011f42:	439c                	lw	a5,0(a5)
20011f44:	1007e713          	ori	a4,a5,256
20011f48:	fe842783          	lw	a5,-24(s0)
20011f4c:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:282

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20011f4e:	fe842783          	lw	a5,-24(s0)
20011f52:	439c                	lw	a5,0(a5)
20011f54:	fc07f713          	andi	a4,a5,-64
20011f58:	fe842783          	lw	a5,-24(s0)
20011f5c:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:283
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20011f5e:	fe842783          	lw	a5,-24(s0)
20011f62:	439c                	lw	a5,0(a5)
20011f64:	0017e713          	ori	a4,a5,1
20011f68:	fe842783          	lw	a5,-24(s0)
20011f6c:	c398                	sw	a4,0(a5)
20011f6e:	a82d                	j	20011fa8 <configure_pll+0x10a>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:287
    }
    else
    {
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20011f70:	fe842783          	lw	a5,-24(s0)
20011f74:	439c                	lw	a5,0(a5)
20011f76:	eff7f713          	andi	a4,a5,-257
20011f7a:	fe842783          	lw	a5,-24(s0)
20011f7e:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:289

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20011f80:	fe842783          	lw	a5,-24(s0)
20011f84:	439c                	lw	a5,0(a5)
20011f86:	fc07f713          	andi	a4,a5,-64
20011f8a:	fe842783          	lw	a5,-24(s0)
20011f8e:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20011f90:	fe842783          	lw	a5,-24(s0)
20011f94:	4398                	lw	a4,0(a5)
20011f96:	fe442783          	lw	a5,-28(s0)
20011f9a:	4fdc                	lw	a5,28(a5)
20011f9c:	03f7f793          	andi	a5,a5,63
20011fa0:	8f5d                	or	a4,a4,a5
20011fa2:	fe842783          	lw	a5,-24(s0)
20011fa6:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:293
    }

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20011fa8:	fec42783          	lw	a5,-20(s0)
20011fac:	4398                	lw	a4,0(a5)
20011fae:	fffc07b7          	lui	a5,0xfffc0
20011fb2:	17fd                	addi	a5,a5,-1
20011fb4:	8f7d                	and	a4,a4,a5
20011fb6:	fec42783          	lw	a5,-20(s0)
20011fba:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:296

    /* Wait for PLL to lock */
    while((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0) ;
20011fbc:	0001                	nop
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:296 (discriminator 1)
20011fbe:	fec42783          	lw	a5,-20(s0)
20011fc2:	439c                	lw	a5,0(a5)
20011fc4:	fe07dde3          	bgez	a5,20011fbe <configure_pll+0x120>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
}
20011fc8:	0001                	nop
20011fca:	4472                	lw	s0,28(sp)
20011fcc:	6105                	addi	sp,sp,32
20011fce:	8082                	ret

20011fd0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300

long __metal_driver_sifive_fe310_g000_pll_set_rate_hz(struct metal_clock *clock, long rate)
{
20011fd0:	715d                	addi	sp,sp,-80
20011fd2:	c686                	sw	ra,76(sp)
20011fd4:	c4a2                	sw	s0,72(sp)
20011fd6:	0880                	addi	s0,sp,80
20011fd8:	faa42e23          	sw	a0,-68(s0)
20011fdc:	fab42c23          	sw	a1,-72(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20011fe0:	fbc42503          	lw	a0,-68(s0)
20011fe4:	34f1                	jal	20011ab0 <__metal_driver_sifive_fe310_g000_pll_pllref>
20011fe6:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20011fea:	fbc42503          	lw	a0,-68(s0)
20011fee:	3465                	jal	20011a96 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20011ff0:	fea42423          	sw	a0,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20011ff4:	fbc42503          	lw	a0,-68(s0)
20011ff8:	3e19                	jal	20011b0e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20011ffa:	fea42223          	sw	a0,-28(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20011ffe:	fbc42503          	lw	a0,-68(s0)
20012002:	34cd                	jal	20011ae4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20012004:	fea42023          	sw	a0,-32(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20012008:	3635                	jal	20011b34 <__metal_driver_sifive_fe310_g000_prci_base>
2001200a:	fca42e23          	sw	a0,-36(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
2001200e:	fdc42703          	lw	a4,-36(s0)
20012012:	fe442783          	lw	a5,-28(s0)
20012016:	97ba                	add	a5,a5,a4
20012018:	fcf42c23          	sw	a5,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:308
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *) (base + divider_offset);
2001201c:	fdc42703          	lw	a4,-36(s0)
20012020:	fe042783          	lw	a5,-32(s0)
20012024:	97ba                	add	a5,a5,a4
20012026:	fcf42a23          	sw	a5,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:311

    /* We can't modify the PLL if coreclk is driven by it, so switch it off */
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2001202a:	fd842783          	lw	a5,-40(s0)
2001202e:	4398                	lw	a4,0(a5)
20012030:	67c1                	lui	a5,0x10
20012032:	8ff9                	and	a5,a5,a4
20012034:	cb91                	beqz	a5,20012048 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x78>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:312
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20012036:	fd842783          	lw	a5,-40(s0)
2001203a:	4398                	lw	a4,0(a5)
2001203c:	77c1                	lui	a5,0xffff0
2001203e:	17fd                	addi	a5,a5,-1
20012040:	8f7d                	and	a4,a4,a5
20012042:	fd842783          	lw	a5,-40(s0)
20012046:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:316

    /* There's a clock mux before the PLL that selects between the HFROSC and
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20012048:	fd842783          	lw	a5,-40(s0)
2001204c:	4398                	lw	a4,0(a5)
2001204e:	000207b7          	lui	a5,0x20
20012052:	8ff9                	and	a5,a5,a4
20012054:	c781                	beqz	a5,2001205c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x8c>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:316 (discriminator 1)
20012056:	fec42783          	lw	a5,-20(s0)
2001205a:	a019                	j	20012060 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x90>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:316 (discriminator 2)
2001205c:	fe842783          	lw	a5,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:316 (discriminator 4)
20012060:	853e                	mv	a0,a5
20012062:	228d                	jal	200121c4 <metal_clock_get_rate_hz>
20012064:	fca42823          	sw	a0,-48(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319 (discriminator 4)

    /* if the desired rate is within 75%-125% of the input clock, bypass the PLL */
    if((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate)
20012068:	fd042703          	lw	a4,-48(s0)
2001206c:	87ba                	mv	a5,a4
2001206e:	0786                	slli	a5,a5,0x1
20012070:	97ba                	add	a5,a5,a4
20012072:	41f7d713          	srai	a4,a5,0x1f
20012076:	8b0d                	andi	a4,a4,3
20012078:	97ba                	add	a5,a5,a4
2001207a:	8789                	srai	a5,a5,0x2
2001207c:	873e                	mv	a4,a5
2001207e:	fb842783          	lw	a5,-72(s0)
20012082:	02e7cb63          	blt	a5,a4,200120b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xe8>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319 (discriminator 1)
20012086:	fd042703          	lw	a4,-48(s0)
2001208a:	87ba                	mv	a5,a4
2001208c:	078a                	slli	a5,a5,0x2
2001208e:	97ba                	add	a5,a5,a4
20012090:	41f7d713          	srai	a4,a5,0x1f
20012094:	8b0d                	andi	a4,a4,3
20012096:	97ba                	add	a5,a5,a4
20012098:	8789                	srai	a5,a5,0x2
2001209a:	873e                	mv	a4,a5
2001209c:	fb842783          	lw	a5,-72(s0)
200120a0:	00f74c63          	blt	a4,a5,200120b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xe8>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    {
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200120a4:	fd842783          	lw	a5,-40(s0)
200120a8:	4398                	lw	a4,0(a5)
200120aa:	000407b7          	lui	a5,0x40
200120ae:	8f5d                	or	a4,a4,a5
200120b0:	fd842783          	lw	a5,-40(s0)
200120b4:	c398                	sw	a4,0(a5)
200120b6:	a0b1                	j	20012102 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x132>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:325
    }
    else
    {
        int config_index = find_closest_config(ref_hz, rate);
200120b8:	fb842583          	lw	a1,-72(s0)
200120bc:	fd042503          	lw	a0,-48(s0)
200120c0:	3b1d                	jal	20011df6 <find_closest_config>
200120c2:	fca42623          	sw	a0,-52(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:326
        if(config_index != -1)
200120c6:	fcc42703          	lw	a4,-52(s0)
200120ca:	57fd                	li	a5,-1
200120cc:	02f70263          	beq	a4,a5,200120f0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x120>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:328
        {
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200120d0:	fcc42783          	lw	a5,-52(s0)
200120d4:	00579713          	slli	a4,a5,0x5
200120d8:	200127b7          	lui	a5,0x20012
200120dc:	73078793          	addi	a5,a5,1840 # 20012730 <pll_configs>
200120e0:	97ba                	add	a5,a5,a4
200120e2:	863e                	mv	a2,a5
200120e4:	fd442583          	lw	a1,-44(s0)
200120e8:	fd842503          	lw	a0,-40(s0)
200120ec:	3b4d                	jal	20011e9e <configure_pll>
200120ee:	a811                	j	20012102 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x132>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:333
        }
        else
        {
            /* unable to find a valid configuration */
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200120f0:	fd842783          	lw	a5,-40(s0)
200120f4:	4398                	lw	a4,0(a5)
200120f6:	000407b7          	lui	a5,0x40
200120fa:	8f5d                	or	a4,a4,a5
200120fc:	fd842783          	lw	a5,-40(s0)
20012100:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:338
        }
    }

    /* Enable the PLL */
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20012102:	fd842783          	lw	a5,-40(s0)
20012106:	4398                	lw	a4,0(a5)
20012108:	67c1                	lui	a5,0x10
2001210a:	8f5d                	or	a4,a4,a5
2001210c:	fd842783          	lw	a5,-40(s0)
20012110:	c398                	sw	a4,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20012112:	fbc42503          	lw	a0,-68(s0)
20012116:	3e95                	jal	20011c8a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20012118:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:341
}
2001211a:	853e                	mv	a0,a5
2001211c:	40b6                	lw	ra,76(sp)
2001211e:	4426                	lw	s0,72(sp)
20012120:	6161                	addi	sp,sp,80
20012122:	8082                	ret

20012124 <use_hfxosc>:
use_hfxosc():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
static void use_hfxosc(void) __attribute__((constructor));
static void use_hfxosc(void)
{
20012124:	1101                	addi	sp,sp,-32
20012126:	ce06                	sw	ra,28(sp)
20012128:	cc22                	sw	s0,24(sp)
2001212a:	1000                	addi	s0,sp,32
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2001212c:	9f3ff0ef          	jal	ra,20011b1e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20012130:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:348
    metal_clock_set_rate_hz(
20012134:	fec42583          	lw	a1,-20(s0)
20012138:	800007b7          	lui	a5,0x80000
2001213c:	42078513          	addi	a0,a5,1056 # 80000420 <metal_segment_heap_target_end+0xfffff6c0>
20012140:	206d                	jal	200121ea <metal_clock_set_rate_hz>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        &__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock, init_rate
    );
}
20012142:	0001                	nop
20012144:	40f2                	lw	ra,28(sp)
20012146:	4462                	lw	s0,24(sp)
20012148:	6105                	addi	sp,sp,32
2001214a:	8082                	ret

2001214c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:777
{
2001214c:	1141                	addi	sp,sp,-16
2001214e:	c622                	sw	s0,12(sp)
20012150:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:778
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20012152:	100087b7          	lui	a5,0x10008
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:779
}
20012156:	853e                	mv	a0,a5
20012158:	4432                	lw	s0,12(sp)
2001215a:	0141                	addi	sp,sp,16
2001215c:	8082                	ret

2001215e <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:11
#ifdef METAL_SIFIVE_FE310_G000_PRCI

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2001215e:	7179                	addi	sp,sp,-48
20012160:	d606                	sw	ra,44(sp)
20012162:	d422                	sw	s0,40(sp)
20012164:	1800                	addi	s0,sp,48
20012166:	fca42e23          	sw	a0,-36(s0)
2001216a:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001216e:	3ff9                	jal	2001214c <__metal_driver_sifive_fe310_g000_prci_base>
20012170:	87aa                	mv	a5,a0
20012172:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20012176:	fd842703          	lw	a4,-40(s0)
2001217a:	fec42783          	lw	a5,-20(s0)
2001217e:	97ba                	add	a5,a5,a4
20012180:	439c                	lw	a5,0(a5)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
}
20012182:	853e                	mv	a0,a5
20012184:	50b2                	lw	ra,44(sp)
20012186:	5422                	lw	s0,40(sp)
20012188:	6145                	addi	sp,sp,48
2001218a:	8082                	ret

2001218c <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:16

long __metal_driver_sifive_fe310_g000_prci_set_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset, long value) {
2001218c:	7179                	addi	sp,sp,-48
2001218e:	d606                	sw	ra,44(sp)
20012190:	d422                	sw	s0,40(sp)
20012192:	1800                	addi	s0,sp,48
20012194:	fca42e23          	sw	a0,-36(s0)
20012198:	fcb42c23          	sw	a1,-40(s0)
2001219c:	fcc42a23          	sw	a2,-44(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:17
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200121a0:	3775                	jal	2001214c <__metal_driver_sifive_fe310_g000_prci_base>
200121a2:	87aa                	mv	a5,a0
200121a4:	fef42623          	sw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:18
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
200121a8:	fd842703          	lw	a4,-40(s0)
200121ac:	fec42783          	lw	a5,-20(s0)
200121b0:	97ba                	add	a5,a5,a4
200121b2:	873e                	mv	a4,a5
200121b4:	fd442783          	lw	a5,-44(s0)
200121b8:	c31c                	sw	a5,0(a4)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19
}
200121ba:	853e                	mv	a0,a5
200121bc:	50b2                	lw	ra,44(sp)
200121be:	5422                	lw	s0,40(sp)
200121c0:	6145                	addi	sp,sp,48
200121c2:	8082                	ret

200121c4 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:64
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
inline long metal_clock_get_rate_hz(const struct metal_clock *clk) { return clk->vtable->get_rate_hz(clk); }
200121c4:	1101                	addi	sp,sp,-32
200121c6:	ce06                	sw	ra,28(sp)
200121c8:	cc22                	sw	s0,24(sp)
200121ca:	1000                	addi	s0,sp,32
200121cc:	fea42623          	sw	a0,-20(s0)
200121d0:	fec42783          	lw	a5,-20(s0)
200121d4:	439c                	lw	a5,0(a5)
200121d6:	439c                	lw	a5,0(a5)
200121d8:	fec42503          	lw	a0,-20(s0)
200121dc:	9782                	jalr	a5
200121de:	87aa                	mv	a5,a0
200121e0:	853e                	mv	a0,a5
200121e2:	40f2                	lw	ra,28(sp)
200121e4:	4462                	lw	s0,24(sp)
200121e6:	6105                	addi	sp,sp,32
200121e8:	8082                	ret

200121ea <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:81
 *
 * Prior to and after the rate change of the clock, this will call the registered
 * pre- and post-rate change callbacks.
 */
inline long metal_clock_set_rate_hz(struct metal_clock *clk, long hz)
{
200121ea:	7179                	addi	sp,sp,-48
200121ec:	d606                	sw	ra,44(sp)
200121ee:	d422                	sw	s0,40(sp)
200121f0:	1800                	addi	s0,sp,48
200121f2:	fca42e23          	sw	a0,-36(s0)
200121f6:	fcb42c23          	sw	a1,-40(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:82
    if(clk->_pre_rate_change_callback != NULL)
200121fa:	fdc42783          	lw	a5,-36(s0)
200121fe:	43dc                	lw	a5,4(a5)
20012200:	cb89                	beqz	a5,20012212 <metal_clock_set_rate_hz+0x28>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:83
        clk->_pre_rate_change_callback(clk->_pre_rate_change_callback_priv);
20012202:	fdc42783          	lw	a5,-36(s0)
20012206:	43d8                	lw	a4,4(a5)
20012208:	fdc42783          	lw	a5,-36(s0)
2001220c:	479c                	lw	a5,8(a5)
2001220e:	853e                	mv	a0,a5
20012210:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:85

    long out = clk->vtable->set_rate_hz(clk, hz);
20012212:	fdc42783          	lw	a5,-36(s0)
20012216:	439c                	lw	a5,0(a5)
20012218:	43dc                	lw	a5,4(a5)
2001221a:	fd842583          	lw	a1,-40(s0)
2001221e:	fdc42503          	lw	a0,-36(s0)
20012222:	9782                	jalr	a5
20012224:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:87

    if (clk->_post_rate_change_callback != NULL)
20012228:	fdc42783          	lw	a5,-36(s0)
2001222c:	47dc                	lw	a5,12(a5)
2001222e:	cb89                	beqz	a5,20012240 <metal_clock_set_rate_hz+0x56>
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:88
        clk->_post_rate_change_callback(clk->_post_rate_change_callback_priv);
20012230:	fdc42783          	lw	a5,-36(s0)
20012234:	47d8                	lw	a4,12(a5)
20012236:	fdc42783          	lw	a5,-36(s0)
2001223a:	4b9c                	lw	a5,16(a5)
2001223c:	853e                	mv	a0,a5
2001223e:	9702                	jalr	a4
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:90

    return out;
20012240:	fec42783          	lw	a5,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/metal/clock.h:91
}
20012244:	853e                	mv	a0,a5
20012246:	50b2                	lw	ra,44(sp)
20012248:	5422                	lw	s0,40(sp)
2001224a:	6145                	addi	sp,sp,48
2001224c:	8082                	ret

2001224e <metal_shutdown>:
metal_shutdown():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
# warning "There is no defined shutdown mechanism, metal_shutdown() will spin."
void metal_shutdown(int code)
{
2001224e:	1101                	addi	sp,sp,-32
20012250:	ce22                	sw	s0,28(sp)
20012252:	1000                	addi	s0,sp,32
20012254:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
20012258:	0001                	nop
2001225a:	bffd                	j	20012258 <metal_shutdown+0xa>

2001225c <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:152
{
2001225c:	1101                	addi	sp,sp,-32
2001225e:	ce22                	sw	s0,28(sp)
20012260:	1000                	addi	s0,sp,32
20012262:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:153
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20012266:	fec42703          	lw	a4,-20(s0)
2001226a:	800007b7          	lui	a5,0x80000
2001226e:	00078793          	mv	a5,a5
20012272:	00f71763          	bne	a4,a5,20012280 <__metal_driver_fixed_clock_rate+0x24>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:154
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20012276:	00f427b7          	lui	a5,0xf42
2001227a:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf42000>
2001227e:	a825                	j	200122b6 <__metal_driver_fixed_clock_rate+0x5a>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:156
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20012280:	fec42703          	lw	a4,-20(s0)
20012284:	800007b7          	lui	a5,0x80000
20012288:	01478793          	addi	a5,a5,20 # 80000014 <metal_segment_heap_target_end+0xfffff2b4>
2001228c:	00f71763          	bne	a4,a5,2001229a <__metal_driver_fixed_clock_rate+0x3e>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:157
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20012290:	044aa7b7          	lui	a5,0x44aa
20012294:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9e00>
20012298:	a839                	j	200122b6 <__metal_driver_fixed_clock_rate+0x5a>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:159
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2001229a:	fec42703          	lw	a4,-20(s0)
2001229e:	800007b7          	lui	a5,0x80000
200122a2:	02878793          	addi	a5,a5,40 # 80000028 <metal_segment_heap_target_end+0xfffff2c8>
200122a6:	00f71763          	bne	a4,a5,200122b4 <__metal_driver_fixed_clock_rate+0x58>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:160
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200122aa:	01e857b7          	lui	a5,0x1e85
200122ae:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84400>
200122b2:	a011                	j	200122b6 <__metal_driver_fixed_clock_rate+0x5a>
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:163
		return 0;
200122b4:	4781                	li	a5,0
/home/fgranados/riscv/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:165
}
200122b6:	853e                	mv	a0,a5
200122b8:	4472                	lw	s0,28(sp)
200122ba:	6105                	addi	sp,sp,32
200122bc:	8082                	ret

200122be <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
200122be:	1101                	addi	sp,sp,-32
200122c0:	ce06                	sw	ra,28(sp)
200122c2:	cc22                	sw	s0,24(sp)
200122c4:	1000                	addi	s0,sp,32
200122c6:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
200122ca:	fec42503          	lw	a0,-20(s0)
200122ce:	3779                	jal	2001225c <__metal_driver_fixed_clock_rate>
200122d0:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:15
}
200122d2:	853e                	mv	a0,a5
200122d4:	40f2                	lw	ra,28(sp)
200122d6:	4462                	lw	s0,24(sp)
200122d8:	6105                	addi	sp,sp,32
200122da:	8082                	ret

200122dc <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
200122dc:	1101                	addi	sp,sp,-32
200122de:	ce06                	sw	ra,28(sp)
200122e0:	cc22                	sw	s0,24(sp)
200122e2:	1000                	addi	s0,sp,32
200122e4:	fea42623          	sw	a0,-20(s0)
200122e8:	feb42423          	sw	a1,-24(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
200122ec:	fec42503          	lw	a0,-20(s0)
200122f0:	37f9                	jal	200122be <__metal_driver_fixed_clock_get_rate_hz>
200122f2:	87aa                	mv	a5,a0
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:20
}
200122f4:	853e                	mv	a0,a5
200122f6:	40f2                	lw	ra,28(sp)
200122f8:	4462                	lw	s0,24(sp)
200122fa:	6105                	addi	sp,sp,32
200122fc:	8082                	ret

200122fe <_synchronize_harts>:
_synchronize_harts():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/synchronize_harts.c:18
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
void _synchronize_harts() {
200122fe:	1141                	addi	sp,sp,-16
20012300:	c622                	sw	s0,12(sp)
20012302:	0800                	addi	s0,sp,16
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/synchronize_harts.c:58
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20012304:	0001                	nop
20012306:	4432                	lw	s0,12(sp)
20012308:	0141                	addi	sp,sp,16
2001230a:	8082                	ret

2001230c <atexit>:
atexit():
2001230c:	85aa                	mv	a1,a0
2001230e:	4681                	li	a3,0
20012310:	4601                	li	a2,0
20012312:	4501                	li	a0,0
20012314:	a8c1                	j	200123e4 <__register_exitproc>

20012316 <exit>:
exit():
20012316:	1141                	addi	sp,sp,-16
20012318:	c422                	sw	s0,8(sp)
2001231a:	c606                	sw	ra,12(sp)
2001231c:	00000797          	auipc	a5,0x0
20012320:	15078793          	addi	a5,a5,336 # 2001246c <__call_exitprocs>
20012324:	842a                	mv	s0,a0
20012326:	c399                	beqz	a5,2001232c <exit+0x16>
20012328:	4581                	li	a1,0
2001232a:	2289                	jal	2001246c <__call_exitprocs>
2001232c:	83018793          	addi	a5,gp,-2000 # 800004c8 <_global_impure_ptr>
20012330:	4388                	lw	a0,0(a5)
20012332:	551c                	lw	a5,40(a0)
20012334:	c391                	beqz	a5,20012338 <exit+0x22>
20012336:	9782                	jalr	a5
20012338:	8522                	mv	a0,s0
2001233a:	2aed                	jal	20012534 <_exit>

2001233c <__libc_fini_array>:
__libc_fini_array():
2001233c:	1141                	addi	sp,sp,-16
2001233e:	00001797          	auipc	a5,0x1
20012342:	c9e78793          	addi	a5,a5,-866 # 20012fdc <__fini_array_end>
20012346:	c422                	sw	s0,8(sp)
20012348:	00001417          	auipc	s0,0x1
2001234c:	c9440413          	addi	s0,s0,-876 # 20012fdc <__fini_array_end>
20012350:	8c1d                	sub	s0,s0,a5
20012352:	c226                	sw	s1,4(sp)
20012354:	c606                	sw	ra,12(sp)
20012356:	8409                	srai	s0,s0,0x2
20012358:	84be                	mv	s1,a5
2001235a:	e419                	bnez	s0,20012368 <__libc_fini_array+0x2c>
2001235c:	4422                	lw	s0,8(sp)
2001235e:	40b2                	lw	ra,12(sp)
20012360:	4492                	lw	s1,4(sp)
20012362:	0141                	addi	sp,sp,16
20012364:	df5fd06f          	j	20010158 <_fini>
20012368:	147d                	addi	s0,s0,-1
2001236a:	00241793          	slli	a5,s0,0x2
2001236e:	97a6                	add	a5,a5,s1
20012370:	439c                	lw	a5,0(a5)
20012372:	9782                	jalr	a5
20012374:	b7dd                	j	2001235a <__libc_fini_array+0x1e>

20012376 <__libc_init_array>:
__libc_init_array():
20012376:	1141                	addi	sp,sp,-16
20012378:	00001797          	auipc	a5,0x1
2001237c:	c5878793          	addi	a5,a5,-936 # 20012fd0 <__init_array_start>
20012380:	c422                	sw	s0,8(sp)
20012382:	00001417          	auipc	s0,0x1
20012386:	c4e40413          	addi	s0,s0,-946 # 20012fd0 <__init_array_start>
2001238a:	8c1d                	sub	s0,s0,a5
2001238c:	c226                	sw	s1,4(sp)
2001238e:	c04a                	sw	s2,0(sp)
20012390:	c606                	sw	ra,12(sp)
20012392:	8409                	srai	s0,s0,0x2
20012394:	4481                	li	s1,0
20012396:	893e                	mv	s2,a5
20012398:	02849863          	bne	s1,s0,200123c8 <__libc_init_array+0x52>
2001239c:	dbdfd0ef          	jal	ra,20010158 <_fini>
200123a0:	00001797          	auipc	a5,0x1
200123a4:	c3078793          	addi	a5,a5,-976 # 20012fd0 <__init_array_start>
200123a8:	00001417          	auipc	s0,0x1
200123ac:	c3440413          	addi	s0,s0,-972 # 20012fdc <__fini_array_end>
200123b0:	8c1d                	sub	s0,s0,a5
200123b2:	8409                	srai	s0,s0,0x2
200123b4:	4481                	li	s1,0
200123b6:	893e                	mv	s2,a5
200123b8:	00849f63          	bne	s1,s0,200123d6 <__libc_init_array+0x60>
200123bc:	40b2                	lw	ra,12(sp)
200123be:	4422                	lw	s0,8(sp)
200123c0:	4492                	lw	s1,4(sp)
200123c2:	4902                	lw	s2,0(sp)
200123c4:	0141                	addi	sp,sp,16
200123c6:	8082                	ret
200123c8:	00249793          	slli	a5,s1,0x2
200123cc:	97ca                	add	a5,a5,s2
200123ce:	439c                	lw	a5,0(a5)
200123d0:	0485                	addi	s1,s1,1
200123d2:	9782                	jalr	a5
200123d4:	b7d1                	j	20012398 <__libc_init_array+0x22>
200123d6:	00249793          	slli	a5,s1,0x2
200123da:	97ca                	add	a5,a5,s2
200123dc:	439c                	lw	a5,0(a5)
200123de:	0485                	addi	s1,s1,1
200123e0:	9782                	jalr	a5
200123e2:	bfd9                	j	200123b8 <__libc_init_array+0x42>

200123e4 <__register_exitproc>:
__register_exitproc():
200123e4:	5ffee797          	auipc	a5,0x5ffee
200123e8:	0e878793          	addi	a5,a5,232 # 800004cc <_global_atexit>
200123ec:	439c                	lw	a5,0(a5)
200123ee:	8e2a                	mv	t3,a0
200123f0:	e39d                	bnez	a5,20012416 <__register_exitproc+0x32>
200123f2:	5ffee717          	auipc	a4,0x5ffee
200123f6:	0de70713          	addi	a4,a4,222 # 800004d0 <__metal_dt_prci_10008000>
200123fa:	5ffee797          	auipc	a5,0x5ffee
200123fe:	0ce7a923          	sw	a4,210(a5) # 800004cc <_global_atexit>
20012402:	dffee517          	auipc	a0,0xdffee
20012406:	bfe50513          	addi	a0,a0,-1026 # 0 <__metal_boot_hart>
2001240a:	87ba                	mv	a5,a4
2001240c:	c509                	beqz	a0,20012416 <__register_exitproc+0x32>
2001240e:	411c                	lw	a5,0(a0)
20012410:	8cf1a023          	sw	a5,-1856(gp) # 80000558 <__metal_dt_prci_10008000+0x88>
20012414:	87ba                	mv	a5,a4
20012416:	43d8                	lw	a4,4(a5)
20012418:	487d                	li	a6,31
2001241a:	557d                	li	a0,-1
2001241c:	04e84763          	blt	a6,a4,2001246a <__register_exitproc+0x86>
20012420:	020e0e63          	beqz	t3,2001245c <__register_exitproc+0x78>
20012424:	0887a803          	lw	a6,136(a5)
20012428:	04080163          	beqz	a6,2001246a <__register_exitproc+0x86>
2001242c:	00271893          	slli	a7,a4,0x2
20012430:	98c2                	add	a7,a7,a6
20012432:	00c8a023          	sw	a2,0(a7)
20012436:	10082303          	lw	t1,256(a6)
2001243a:	4605                	li	a2,1
2001243c:	00e61633          	sll	a2,a2,a4
20012440:	00c36333          	or	t1,t1,a2
20012444:	10682023          	sw	t1,256(a6)
20012448:	08d8a023          	sw	a3,128(a7)
2001244c:	4689                	li	a3,2
2001244e:	00de1763          	bne	t3,a3,2001245c <__register_exitproc+0x78>
20012452:	10482683          	lw	a3,260(a6)
20012456:	8e55                	or	a2,a2,a3
20012458:	10c82223          	sw	a2,260(a6)
2001245c:	00170693          	addi	a3,a4,1
20012460:	070a                	slli	a4,a4,0x2
20012462:	c3d4                	sw	a3,4(a5)
20012464:	97ba                	add	a5,a5,a4
20012466:	c78c                	sw	a1,8(a5)
20012468:	4501                	li	a0,0
2001246a:	8082                	ret

2001246c <__call_exitprocs>:
__call_exitprocs():
2001246c:	7179                	addi	sp,sp,-48
2001246e:	cc52                	sw	s4,24(sp)
20012470:	ca56                	sw	s5,20(sp)
20012472:	c85a                	sw	s6,16(sp)
20012474:	c65e                	sw	s7,12(sp)
20012476:	d606                	sw	ra,44(sp)
20012478:	d422                	sw	s0,40(sp)
2001247a:	d226                	sw	s1,36(sp)
2001247c:	d04a                	sw	s2,32(sp)
2001247e:	ce4e                	sw	s3,28(sp)
20012480:	c462                	sw	s8,8(sp)
20012482:	8b2a                	mv	s6,a0
20012484:	8a2e                	mv	s4,a1
20012486:	5ffeea97          	auipc	s5,0x5ffee
2001248a:	046a8a93          	addi	s5,s5,70 # 800004cc <_global_atexit>
2001248e:	4b85                	li	s7,1
20012490:	000aa403          	lw	s0,0(s5)
20012494:	c811                	beqz	s0,200124a8 <__call_exitprocs+0x3c>
20012496:	4044                	lw	s1,4(s0)
20012498:	08842983          	lw	s3,136(s0)
2001249c:	fff48913          	addi	s2,s1,-1
200124a0:	048a                	slli	s1,s1,0x2
200124a2:	94a2                	add	s1,s1,s0
200124a4:	00095e63          	bgez	s2,200124c0 <__call_exitprocs+0x54>
200124a8:	50b2                	lw	ra,44(sp)
200124aa:	5422                	lw	s0,40(sp)
200124ac:	5492                	lw	s1,36(sp)
200124ae:	5902                	lw	s2,32(sp)
200124b0:	49f2                	lw	s3,28(sp)
200124b2:	4a62                	lw	s4,24(sp)
200124b4:	4ad2                	lw	s5,20(sp)
200124b6:	4b42                	lw	s6,16(sp)
200124b8:	4bb2                	lw	s7,12(sp)
200124ba:	4c22                	lw	s8,8(sp)
200124bc:	6145                	addi	sp,sp,48
200124be:	8082                	ret
200124c0:	000a0e63          	beqz	s4,200124dc <__call_exitprocs+0x70>
200124c4:	00099563          	bnez	s3,200124ce <__call_exitprocs+0x62>
200124c8:	197d                	addi	s2,s2,-1
200124ca:	14f1                	addi	s1,s1,-4
200124cc:	bfe1                	j	200124a4 <__call_exitprocs+0x38>
200124ce:	00291793          	slli	a5,s2,0x2
200124d2:	97ce                	add	a5,a5,s3
200124d4:	0807a783          	lw	a5,128(a5)
200124d8:	ff4798e3          	bne	a5,s4,200124c8 <__call_exitprocs+0x5c>
200124dc:	4058                	lw	a4,4(s0)
200124de:	40dc                	lw	a5,4(s1)
200124e0:	177d                	addi	a4,a4,-1
200124e2:	03271863          	bne	a4,s2,20012512 <__call_exitprocs+0xa6>
200124e6:	01242223          	sw	s2,4(s0)
200124ea:	dff9                	beqz	a5,200124c8 <__call_exitprocs+0x5c>
200124ec:	00442c03          	lw	s8,4(s0)
200124f0:	00098863          	beqz	s3,20012500 <__call_exitprocs+0x94>
200124f4:	1009a683          	lw	a3,256(s3)
200124f8:	012b9733          	sll	a4,s7,s2
200124fc:	8ef9                	and	a3,a3,a4
200124fe:	ee89                	bnez	a3,20012518 <__call_exitprocs+0xac>
20012500:	9782                	jalr	a5
20012502:	4058                	lw	a4,4(s0)
20012504:	000aa783          	lw	a5,0(s5)
20012508:	f98714e3          	bne	a4,s8,20012490 <__call_exitprocs+0x24>
2001250c:	faf40ee3          	beq	s0,a5,200124c8 <__call_exitprocs+0x5c>
20012510:	b741                	j	20012490 <__call_exitprocs+0x24>
20012512:	0004a223          	sw	zero,4(s1)
20012516:	bfd1                	j	200124ea <__call_exitprocs+0x7e>
20012518:	00291693          	slli	a3,s2,0x2
2001251c:	96ce                	add	a3,a3,s3
2001251e:	428c                	lw	a1,0(a3)
20012520:	1049a683          	lw	a3,260(s3)
20012524:	8f75                	and	a4,a4,a3
20012526:	e701                	bnez	a4,2001252e <__call_exitprocs+0xc2>
20012528:	855a                	mv	a0,s6
2001252a:	9782                	jalr	a5
2001252c:	bfd9                	j	20012502 <__call_exitprocs+0x96>
2001252e:	852e                	mv	a0,a1
20012530:	9782                	jalr	a5
20012532:	bfc1                	j	20012502 <__call_exitprocs+0x96>

20012534 <_exit>:
_exit():
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
20012534:	1101                	addi	sp,sp,-32
20012536:	ce06                	sw	ra,28(sp)
20012538:	cc22                	sw	s0,24(sp)
2001253a:	1000                	addi	s0,sp,32
2001253c:	fea42623          	sw	a0,-20(s0)
/home/fgranados/riscv/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
20012540:	fec42503          	lw	a0,-20(s0)
20012544:	3329                	jal	2001224e <metal_shutdown>
